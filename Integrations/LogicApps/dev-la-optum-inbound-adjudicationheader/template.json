{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_dev_la_optum_inbound_adjudicationheader_name": {
            "defaultValue": "dev-la-optum-inbound-adjudicationheader",
            "type": "String"
        },
        "sites_dev_fa_optum_createpackagezipfile_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/sites/dev-fa-optum-createpackagezipfile",
            "type": "String"
        },
        "connections_azurefile_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/azurefile",
            "type": "String"
        },
        "connections_azuremonitorlogs_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/azuremonitorlogs",
            "type": "String"
        },
        "connections_dynamicsax_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/dynamicsax",
            "type": "String"
        },
        "connections_office365_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/office365",
            "type": "String"
        },
        "connections_sftpwithssh_adjudication_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/sftpwithssh-adjudication",
            "type": "String"
        },
        "connections_sftpwithssh_1_externalid": {
            "defaultValue": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/resourceGroups/rg-dev-ORxMSDynamicsRCM/providers/Microsoft.Web/connections/sftpwithssh-1",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_dev_la_optum_inbound_adjudicationheader_name')]",
            "location": "centralus",
            "tags": {
                "displayName": "LogicApp"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "D365FODMFDefinitionGroupId": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "D365FOLegalEntity": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "D365FOURL": {
                            "defaultValue": "optum-perf.sandbox.operations.dynamics.com/",
                            "type": "String"
                        },
                        "EmailTo": {
                            "defaultValue": "ryan_campbell@optum.com",
                            "type": "String"
                        },
                        "FolderExportPath": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "FolderImportPath": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "FolderProcessPath": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "FolderXMLPath": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "HeaderFileName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "LogicAppState": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "ManifestFileName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "PackageFileName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "RecurrenceFrequency": {
                            "defaultValue": "Day",
                            "type": "String"
                        },
                        "RecurrenceInterval": {
                            "defaultValue": 1,
                            "type": "Int"
                        },
                        "RecurrenceTimeZone": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "TextFileName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "diagnosticSettingName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "diagnosticSettingResouceGroupName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "diagnosticSettingSubscription": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "function_app_id": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "logAnalyticWorkspaceName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "logicAppNameValue": {
                            "defaultValue": "",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "@parameters('RecurrenceFrequency')",
                                "interval": "@parameters('RecurrenceInterval')",
                                "timeZone": "@parameters('RecurrenceTimeZone')"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "timeZone": "GMT Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_list_files": {
                            "runAfter": {
                                "List_files": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('List_files')",
                                "where": "@contains(item()['Path'], 'PBMHeader')"
                            }
                        },
                        "Initialize_CurrentDateTime_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CurrentDateTime",
                                        "type": "string",
                                        "value": "@{utcNow('yyyy-MM-dd hh_mm_ss')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_EntitiesBody_template": {
                            "runAfter": {
                                "Intialize_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EntitiesBody",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_FileError_variable": {
                            "runAfter": {
                                "Initialize_LogicApp_Error": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileError",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_LogicApp_Error": {
                            "runAfter": {
                                "Initialize_EntitiesBody_template": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LogicAppInError",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Intialize_HTML_table": {
                            "runAfter": {
                                "Initialize_CurrentDateTime_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "HTMLTable",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Is_text_files_available": {
                            "actions": {
                                "Is_Logic_App_fail": {
                                    "actions": {
                                        "Delay_Five_Minutes": {
                                            "runAfter": {},
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 5,
                                                    "unit": "Minute"
                                                }
                                            }
                                        },
                                        "Run_query_and_visualize_results": {
                                            "runAfter": {
                                                "Delay_Five_Minutes": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "AzureDiagnostics\n| where ResourceProvider  == \"MICROSOFT.LOGIC\"  \n| where Category == \"WorkflowRuntime\" \n| where OperationName has \"workflowActionCompleted\" or OperationName has \"workflowTriggerCompleted\" \n| where code_s != \"TrackedPropertiesEvaluationFailed\"\n| where code_s != \"ActionSkipped\"\n| where resource_workflowName_s == \"@{parameters('logicAppNameValue')}\"\n| where endTime_t >= ago(15m)\n| extend ResourceName = coalesce(resource_actionName_s, resource_triggerName_s) \n| extend ResourceCategory = substring(OperationName, 34, strlen(OperationName) - 43) \n| project ResourceCategory, ResourceName, ResourceGroup, StartTime = startTime_t, EndTime = endTime_t,\n            ErrorCode = code_s, LogicAppName = resource_workflowName_s, RunStatus = trackedProperties_RunStatus_s   \n| order by StartTime",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/visualizeQuery",
                                                "queries": {
                                                    "resourcegroups": "@parameters('diagnosticSettingResouceGroupName')",
                                                    "resourcename": "@parameters('logAnalyticWorkspaceName')",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "subscriptions": "@parameters('diagnosticSettingSubscription')",
                                                    "timerange": "Set in query",
                                                    "visType": "Html Table"
                                                }
                                            }
                                        },
                                        "Send_error_log_email": {
                                            "runAfter": {
                                                "Run_query_and_visualize_results": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Body": "<p>@{base64ToString(body('Run_query_and_visualize_results')?['body'])}</p>",
                                                    "Importance": "Normal",
                                                    "Subject": "Connectors of an LogicApp is failed",
                                                    "To": "@{parameters('EmailTo')}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/Mail"
                                            }
                                        },
                                        "Terminate": {
                                            "runAfter": {
                                                "Send_error_log_email": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Terminate",
                                            "inputs": {
                                                "runError": {
                                                    "code": "400",
                                                    "message": "Logic app error"
                                                },
                                                "runStatus": "Failed"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_LogicApp_error_variable_to_true": [
                                            "Succeeded",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('LogicAppInError')",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_List_files": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@sort(body('Filter_list_files'), 'LastModified')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "DisplayName": {
                                                        "type": "string"
                                                    },
                                                    "ETag": {
                                                        "type": "string"
                                                    },
                                                    "FileLocator": {
                                                        "type": "string"
                                                    },
                                                    "Id": {
                                                        "type": "string"
                                                    },
                                                    "IsFolder": {
                                                        "type": "boolean"
                                                    },
                                                    "LastModified": {
                                                        "type": "string"
                                                    },
                                                    "LastModifiedBy": {},
                                                    "MediaType": {
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "Path": {
                                                        "type": "string"
                                                    },
                                                    "Size": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "Id",
                                                    "Name",
                                                    "DisplayName",
                                                    "Path",
                                                    "LastModified",
                                                    "Size",
                                                    "MediaType",
                                                    "IsFolder",
                                                    "ETag",
                                                    "FileLocator",
                                                    "LastModifiedBy"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                },
                                "Run_All_Inbound_Cases": {
                                    "foreach": "@body('Parse_List_files')",
                                    "actions": {
                                        "Check_LogicApp_error_variable_is_false": {
                                            "actions": {
                                                "Add_file_to_D365_Blob_storage": {
                                                    "actions": {
                                                        "Get_Azure_Writable_Url_with_Retry": {
                                                            "actions": {
                                                                "Get_Azure_Writable_Url": {
                                                                    "runAfter": {},
                                                                    "trackedProperties": {
                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "uniqueFileName": "@{concat(parameters('FolderProcessPath'),parameters('PackageFileName'),' ',variables('CurrentDateTime'),'.zip')}"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('D365FOURL')))}/procedures/@{encodeURIComponent(encodeURIComponent('DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetAzureWriteUrl'))}"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": "@equals(actions('Get_Azure_Writable_Url').Status, 'Succeeded')",
                                                            "limit": {
                                                                "count": 60,
                                                                "timeout": "PT1H"
                                                            },
                                                            "type": "Until"
                                                        },
                                                        "Upload_file_to_D365_for_Operations_Azure_blob_storage_with_retry": {
                                                            "actions": {
                                                                "Upload_file_to_D365_Azure_Blob_Storage": {
                                                                    "runAfter": {},
                                                                    "type": "Http",
                                                                    "inputs": {
                                                                        "body": "@body('Get_file_content_from_File_share')",
                                                                        "headers": {
                                                                            "Content-Type": "application/octet-stream",
                                                                            "x-ms-blob-type": "BlockBlob",
                                                                            "x-ms-date": "@{utcnow('R')}",
                                                                            "x-ms-version": "2015-02-21"
                                                                        },
                                                                        "method": "PUT",
                                                                        "uri": "@{json(body('Get_Azure_Writable_Url')?['value']).BlobUrl}"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_Azure_Writable_Url_with_Retry": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression": "@equals(actions('Upload_file_to_D365_Azure_Blob_Storage').Status, 'Succeeded')",
                                                            "trackedProperties": {
                                                                "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                            },
                                                            "limit": {
                                                                "count": 60,
                                                                "timeout": "PT1H"
                                                            },
                                                            "type": "Until"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_file_content_from_File_share": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Scope"
                                                },
                                                "Check_execution_status": {
                                                    "actions": {
                                                        "Append_Html_tags_correctly": {
                                                            "runAfter": {
                                                                "Iterate_to_get_all_entitites": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "EntitiesBody",
                                                                "value": "</table>\n</div>"
                                                            }
                                                        },
                                                        "Check_status_until_import_is_complete": {
                                                            "actions": {
                                                                "Delay": {
                                                                    "runAfter": {},
                                                                    "type": "Wait",
                                                                    "inputs": {
                                                                        "interval": {
                                                                            "count": 15,
                                                                            "unit": "Second"
                                                                        }
                                                                    }
                                                                },
                                                                "Get_execute_summary_status": {
                                                                    "runAfter": {
                                                                        "Delay": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "trackedProperties": {
                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "executionId": "@body('Initiate_package_import')?['value']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('D365FOURL')))}/procedures/@{encodeURIComponent(encodeURIComponent('DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetExecutionSummaryStatus'))}"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": "@not(or(equals(body('Get_execute_summary_status')?['value'], 'NotRun'), equals(body('Get_execute_summary_status')?['value'], 'Executing')))",
                                                            "limit": {
                                                                "count": 480,
                                                                "timeout": "PT2H"
                                                            },
                                                            "type": "Until"
                                                        },
                                                        "Get_Success_results": {
                                                            "runAfter": {
                                                                "Check_status_until_import_is_complete": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "trackedProperties": {
                                                                "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "_executionId": "@body('Initiate_package_import')?['value']"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('D365FOURL')))}/procedures/@{encodeURIComponent(encodeURIComponent('ClaimTableIntegrationStatusDatas/Microsoft.Dynamics.DataEntities.GetImportSuccessResults'))}"
                                                            }
                                                        },
                                                        "If_get_execute_summary_status_is_PartiallySucceeded_or_Failed": {
                                                            "actions": {
                                                                "Condition": {
                                                                    "actions": {
                                                                        "Delete_file_if_failed": {
                                                                            "runAfter": {},
                                                                            "type": "ApiConnection",
                                                                            "inputs": {
                                                                                "headers": {
                                                                                    "SkipDeleteIfFileNotFoundOnServer": true
                                                                                },
                                                                                "host": {
                                                                                    "connection": {
                                                                                        "name": "@parameters('$connections')['sftpwithssh']['connectionId']"
                                                                                    }
                                                                                },
                                                                                "method": "delete",
                                                                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('Run_All_Inbound_Cases')['Path']))}"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Send_an_email_for_execution_errors": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@body('Get_execute_summary_status')?['value']",
                                                                                    "Failed"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "Error_table": {
                                                                    "runAfter": {
                                                                        "Parse_Errors": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Table",
                                                                    "inputs": {
                                                                        "columns": [
                                                                            {
                                                                                "header": "RecordID",
                                                                                "value": "@item()['RecordId']"
                                                                            },
                                                                            {
                                                                                "header": "Field",
                                                                                "value": "@item()['Field']"
                                                                            },
                                                                            {
                                                                                "header": "ErrorMessage",
                                                                                "value": "@item()['ErrorMessage']"
                                                                            }
                                                                        ],
                                                                        "format": "HTML",
                                                                        "from": "@body('Parse_Errors')"
                                                                    }
                                                                },
                                                                "Get_execution_errors": {
                                                                    "runAfter": {},
                                                                    "trackedProperties": {
                                                                        "ExecuteSummaryStatus": "@{action()?['inputs']?['body']?['value']}",
                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "executionId": "@body('Initiate_package_import')?['OutputParameters']?['value']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('D365FOURL')))}/procedures/@{encodeURIComponent(encodeURIComponent('DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetExecutionErrors'))}"
                                                                    }
                                                                },
                                                                "Parse_Errors": {
                                                                    "runAfter": {
                                                                        "Get_execution_errors": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ParseJson",
                                                                    "inputs": {
                                                                        "content": "@body('Get_execution_errors')?['value']",
                                                                        "schema": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "ErrorMessage": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Field": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "RecordId": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "RecordId",
                                                                                    "Field",
                                                                                    "ErrorMessage"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    }
                                                                },
                                                                "Send_an_email_for_execution_errors": {
                                                                    "runAfter": {
                                                                        "Set_HTMLTable_to_Errors": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "trackedProperties": {
                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Body": "<p>@{variables('HTMLTable')}<br>\n<br>\n@{if(equals(body('Get_execute_summary_status')?['value'], 'Failed'),'The file placed on the SFTP is going to be deleted. Please refer to the DMF execution log and place a corrected file on the SFTP location.','')}</p>",
                                                                            "Importance": "Normal",
                                                                            "Subject": "Execution status :  of execution id : @{body('Initiate_package_import')?['OutputParameters']?['value']}",
                                                                            "To": "@parameters('EmailTo')"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v2/Mail"
                                                                    }
                                                                },
                                                                "Set_HTMLTable_to_Errors": {
                                                                    "runAfter": {
                                                                        "failure_result_table_data": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "HTMLTable",
                                                                        "value": "<p>The errors during process of DMF import for the execution id of <b>@{body('Initiate_package_import')?['OutputParameters']?['value']}</b></p>\n<div>\n@{outputs('failure_result_table_data')}\n@{variables('EntitiesBody')}\n<br/>\n@{body('Error_table')}\n</div>"
                                                                    }
                                                                },
                                                                "failure_result_table_data": {
                                                                    "runAfter": {
                                                                        "Error_table": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Compose",
                                                                    "inputs": "@variables('HTMLTable')"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Append_Html_tags_correctly": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "If_execute_summary_status_is_Succeeded": {
                                                                        "actions": {
                                                                            "Send_success_email": {
                                                                                "runAfter": {},
                                                                                "trackedProperties": {
                                                                                    "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                                },
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "Body": "<p>The records imported from SFTP to D365:<br>\n<br>\n@{variables('HTMLTable')}<br>\n@{variables('EntitiesBody')}</p>",
                                                                                        "Importance": "Normal",
                                                                                        "Subject": "@body('Initiate_package_import')?['value']",
                                                                                        "To": "@parameters('EmailTo')"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['office365']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "post",
                                                                                    "path": "/v2/Mail"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {},
                                                                        "else": {
                                                                            "actions": {
                                                                                "Send_timeout_error_email": {
                                                                                    "runAfter": {},
                                                                                    "trackedProperties": {
                                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                                    },
                                                                                    "type": "ApiConnection",
                                                                                    "inputs": {
                                                                                        "body": {
                                                                                            "Body": "<p>Timeout error, DMF Operation against the entity did not finish within the time limit.&nbsp;</p>",
                                                                                            "Importance": "Normal",
                                                                                            "Subject": "Timeout error",
                                                                                            "To": "@parameters('EmailTo')"
                                                                                        },
                                                                                        "host": {
                                                                                            "connection": {
                                                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                                                            }
                                                                                        },
                                                                                        "method": "post",
                                                                                        "path": "/v2/Mail"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@body('Get_execute_summary_status')?['value']",
                                                                                        "Succeeded"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "or": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Get_execute_summary_status')?['value']",
                                                                            "PartiallySucceeded"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "equals": [
                                                                            "@body('Get_execute_summary_status')?['value']",
                                                                            "Failed"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Iterate_to_get_all_entitites": {
                                                            "foreach": "@body('Parse_Success_Result')?['EntitiesList']",
                                                            "actions": {
                                                                "Append_EntityBody": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable",
                                                                    "inputs": {
                                                                        "name": "EntitiesBody",
                                                                        "value": "<tr style=\"border: 1px solid black; text-align:center\">\n    <td>@{items('Iterate_to_get_all_entitites')?['EntityName']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['EntityStatus']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['Pending']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['InStaging']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['Created']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['Updated']}</td>\n    <td>@{items('Iterate_to_get_all_entitites')?['TotalEntityRecords']}</td>\n  </tr>"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Set_HTML_Template": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        },
                                                        "Parse_Success_Result": {
                                                            "runAfter": {
                                                                "Get_Success_results": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('Get_Success_results')?['value']",
                                                                "schema": {
                                                                    "properties": {
                                                                        "DataProjectName": {
                                                                            "type": "string"
                                                                        },
                                                                        "EndDateTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "EntitiesList": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "Created": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "EntityName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "EntityStatus": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "InStaging": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "Pending": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "TotalEntityRecords": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "Updated": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "Created",
                                                                                    "EntityName",
                                                                                    "EntityStatus",
                                                                                    "InStaging",
                                                                                    "Pending",
                                                                                    "TotalEntityRecords",
                                                                                    "Updated"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ErrorRecords": {
                                                                            "type": "integer"
                                                                        },
                                                                        "ExecutionId": {
                                                                            "type": "string"
                                                                        },
                                                                        "ExecutionStatus": {
                                                                            "type": "string"
                                                                        },
                                                                        "StartDateTime": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "Set_HTML_Template": {
                                                            "runAfter": {
                                                                "Parse_Success_Result": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "HTMLTable",
                                                                "value": "<style>\n#testID table, table th, table td {border: 1px solid #000000}\ntd,th {padding : 8px}\ntable, th, td {\n  border: 1px solid black;\n  border-collapse: collapse;\n}\n</style>\n<div id=\"testID\">\n<table style=\"width:100%;border-collapse: collapse;\">\n  <tr style=\"border: 1px solid black;\">\n    <th >Data project name</th>\n    <td>@{body('Parse_Success_Result')?['DataProjectName']}</td>\n  </tr>\n  <tr style=\"border: 1px solid black;\">\n    <th>Job ID</th>\n    <td>@{body('Parse_Success_Result')?['ExecutionId']}</td>\n  </tr>\n  <tr style=\"border: 1px solid black;\">\n    <th>Execution status</th>\n    <td>@{body('Parse_Success_Result')?['ExecutionStatus']}</td>\n  </tr>\n    <tr style=\"border: 1px solid black;\">\n    <th>Start time</th>\n    <td>@{addSeconds('1970-01-01T00:00:00Z', div(int(replace(replace(body('Parse_Success_Result')?['StartDateTime'], '/Date(', ''), ')/', '')), 1000), 'MM-dd-yyyy HH:mm:ss tt')}</td>\n  </tr>\n    <tr style=\"border: 1px solid black;\">\n    <th>End time</th>\n      <td>@{addSeconds('1970-01-01T00:00:00Z', div(int(replace(replace(body('Parse_Success_Result')?['EndDateTime'], '/Date(', ''), ')/', '')), 1000), 'MM-dd-yyyy HH:mm:ss tt')}</td>\n  </tr>\n    <tr style=\"border: 1px solid black;\">\n    <th>With errors</th>\n    <td>@{body('Parse_Success_Result')?['ErrorRecords']}</td>\n  </tr>\n</table>\n</div>\n<br/>\n<div id=\"testID\">\n<table style=\"width:100%; border-collapse: collapse\">\n  <tr style=\"border: 1px solid black;\">\n    <th>Entity</th>\n    <th>Status</th>\n    <th>Pending</th>\n    <th>In staging</th>\n    <th>Created</th>\n    <th>Updated</th>\n   <th>Total</th>\n  </tr>\n"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Initiate_package_import_in_D365_for_Operations": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Scope"
                                                },
                                                "CreatePackageZipFile": {
                                                    "runAfter": {
                                                        "Get_text_file": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                    },
                                                    "type": "Function",
                                                    "inputs": {
                                                        "body": {
                                                            "FileName": "@{concat(parameters('TextFileName'), '.txt')}",
                                                            "file": "@base64(body('Get_text_file'))",
                                                            "header": "@base64(body('Get_PackageHeader_file'))",
                                                            "manifest": "@base64(body('Get_Manifest_file'))"
                                                        },
                                                        "function": {
                                                            "id": "[concat(parameters('sites_dev_fa_optum_createpackagezipfile_externalid'), '/functions/CreatePackageZipFile')]"
                                                        }
                                                    }
                                                },
                                                "Create_and_Delete_File": {
                                                    "actions": {
                                                        "Create_archive_file": {
                                                            "runAfter": {},
                                                            "trackedProperties": {
                                                                "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": "@body('Get_file_content_from_File_share')",
                                                                "headers": {
                                                                    "ReadFileMetadataFromServer": true
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/datasets/default/files",
                                                                "queries": {
                                                                    "folderPath": "@parameters('FolderExportPath')",
                                                                    "name": "@{concat(parameters('PackageFileName'),' ',variables('CurrentDateTime'),'.zip')}",
                                                                    "queryParametersSingleEncoded": true
                                                                }
                                                            },
                                                            "runtimeConfiguration": {
                                                                "contentTransfer": {
                                                                    "transferMode": "Chunked"
                                                                }
                                                            }
                                                        },
                                                        "Delete_file": {
                                                            "runAfter": {
                                                                "Create_archive_file": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "trackedProperties": {
                                                                "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "delete",
                                                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(concat(parameters('FolderProcessPath'),parameters('PackageFileName'),' ',variables('CurrentDateTime'),'.zip')))}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Check_execution_status": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Scope"
                                                },
                                                "Create_package_file_in_Process_folder": {
                                                    "runAfter": {
                                                        "CreatePackageZipFile": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "@body('CreatePackageZipFile')",
                                                        "headers": {
                                                            "ReadFileMetadataFromServer": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/datasets/default/files",
                                                        "queries": {
                                                            "folderPath": "@parameters('FolderProcessPath')",
                                                            "name": "@{concat(parameters('PackageFileName'),' ',variables('CurrentDateTime'),'.zip')}",
                                                            "queryParametersSingleEncoded": true
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Get_Manifest_file": {
                                                    "runAfter": {
                                                        "Set_EntitiesBody_empty_for_iteration": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(concat(parameters('FolderXMLPath'),parameters('ManifestFileName'),'.xml')))}/content",
                                                        "queries": {
                                                            "inferContentType": true
                                                        }
                                                    }
                                                },
                                                "Get_PackageHeader_file": {
                                                    "runAfter": {
                                                        "Get_Manifest_file": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(concat(parameters('FolderXMLPath'),parameters('HeaderFileName'),'.xml')))}/content",
                                                        "queries": {
                                                            "inferContentType": true
                                                        }
                                                    }
                                                },
                                                "Get_file_content_from_File_share": {
                                                    "runAfter": {
                                                        "Create_package_file_in_Process_folder": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(concat(parameters('FolderProcessPath'),parameters('PackageFileName'),' ',variables('CurrentDateTime'),'.zip')))}/content",
                                                        "queries": {
                                                            "inferContentType": true
                                                        }
                                                    }
                                                },
                                                "Get_text_file": {
                                                    "runAfter": {
                                                        "Get_PackageHeader_file": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['sftpwithssh_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(items('Run_All_Inbound_Cases')['Path']))}/content",
                                                        "queries": {
                                                            "inferContentType": true
                                                        }
                                                    }
                                                },
                                                "Initiate_package_import_in_D365_for_Operations": {
                                                    "actions": {
                                                        "Initiate_package_import_for_with_retry": {
                                                            "actions": {
                                                                "Initiate_package_import": {
                                                                    "runAfter": {},
                                                                    "trackedProperties": {
                                                                        "RunStatus": "@{action()?['outputs']?['body']?['message']}"
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "definitionGroupId": "@parameters('D365FODMFDefinitionGroupId')",
                                                                            "execute": true,
                                                                            "legalEntityId": "@parameters('D365FOLegalEntity')",
                                                                            "overwrite": true,
                                                                            "packageUrl": "@{json(body('Get_Azure_Writable_Url')?['value']).BlobUrl}"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('D365FOURL')))}/procedures/@{encodeURIComponent(encodeURIComponent('DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.ImportFromPackage'))}"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": "@equals(actions('Initiate_package_import').Status, 'Succeeded')",
                                                            "limit": {
                                                                "count": 60,
                                                                "timeout": "PT1H"
                                                            },
                                                            "type": "Until"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Add_file_to_D365_Blob_storage": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Scope"
                                                },
                                                "Set_Current_Date_Time": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "CurrentDateTime",
                                                        "value": "@{utcNow('yyyy-MM-dd hh_mm_ss')}"
                                                    }
                                                },
                                                "Set_EntitiesBody_empty_for_iteration": {
                                                    "runAfter": {
                                                        "Set_Current_Date_Time": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "EntitiesBody",
                                                        "value": " "
                                                    }
                                                },
                                                "Set_Logic_App_to_error": {
                                                    "runAfter": {
                                                        "Create_and_Delete_File": [
                                                            "TimedOut",
                                                            "Skipped",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "LogicAppInError",
                                                        "value": "@true"
                                                    }
                                                },
                                                "Set_manifest_file_error_variable": {
                                                    "runAfter": {
                                                        "Get_Manifest_file": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['value']}"
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "FileError",
                                                        "value": "@{if(empty(body('Get_Manifest_file')?['message']),body('Get_Manifest_file'),body('Get_Manifest_file')?['message'])}"
                                                    }
                                                },
                                                "Set_package_file_error_variable": {
                                                    "runAfter": {
                                                        "Get_file_content_from_File_share": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['value']}"
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "FileError",
                                                        "value": "@{if(empty(body('Get_file_content_from_File_share')?['message']),body('Get_file_content_from_File_share'),body('Get_file_content_from_File_share')?['message'])}"
                                                    }
                                                },
                                                "Set_package_header_file_error_variable": {
                                                    "runAfter": {
                                                        "Get_PackageHeader_file": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['value']}"
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "FileError",
                                                        "value": "@{if(empty(body('Get_PackageHeader_file')?['message']),body('Get_PackageHeader_file'),body('Get_PackageHeader_file')?['message'])}"
                                                    }
                                                },
                                                "Set_text_file_error_variable": {
                                                    "runAfter": {
                                                        "Get_text_file": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "trackedProperties": {
                                                        "RunStatus": "@{action()?['outputs']?['body']?['value']}"
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "FileError",
                                                        "value": "@{if(empty(body('Get_text_file')?['message']),body('Get_text_file'),body('Get_text_file')?['message'])}"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@variables('LogicAppInError')",
                                                            "@false"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_List_files": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Set_LogicApp_error_variable_to_true": {
                                    "runAfter": {
                                        "Run_All_Inbound_Cases": [
                                            "Skipped"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "LogicAppInError",
                                        "value": "@true"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_list_files": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Filter_list_files'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "List_files": {
                            "runAfter": {
                                "Initialize_FileError_variable": [
                                    "Succeeded"
                                ]
                            },
                            "trackedProperties": {
                                "RunStatus": "@{action()?['outputs']?['body']}"
                            },
                            "metadata": {
                                "L09wdHVtX1JDTV9URVNUL3RvX0R5bmFtaWNzXzM2NQ==": "/Optum_RCM_TEST/to_Dynamics_365"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sftpwithssh_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/folders/@{encodeURIComponent(encodeURIComponent('L09wdHVtX1JDTV9URVNUL3RvX0R5bmFtaWNzXzM2NQ=='))}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azurefile": {
                                "connectionId": "[parameters('connections_azurefile_externalid')]",
                                "connectionName": "azurefile",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/azurefile"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[parameters('connections_azuremonitorlogs_externalid')]",
                                "connectionName": "azuremonitorlogs",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/azuremonitorlogs"
                            },
                            "dynamicsax": {
                                "connectionId": "[parameters('connections_dynamicsax_externalid')]",
                                "connectionName": "dynamicsax",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/dynamicsax"
                            },
                            "office365": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/office365"
                            },
                            "sftpwithssh": {
                                "connectionId": "[parameters('connections_sftpwithssh_adjudication_externalid')]",
                                "connectionName": "sftpwithssh-adjudication",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/sftpwithssh"
                            },
                            "sftpwithssh_1": {
                                "connectionId": "[parameters('connections_sftpwithssh_1_externalid')]",
                                "connectionName": "sftpwithssh-1",
                                "id": "/subscriptions/b4f24c37-de92-4f78-809d-d521ce05ea7f/providers/Microsoft.Web/locations/centralus/managedApis/sftpwithssh"
                            }
                        }
                    },
                    "D365FODMFDefinitionGroupId": {
                        "value": "AdjudicationHeaderImport"
                    },
                    "D365FOLegalEntity": {
                        "value": "OIS"
                    },
                    "FolderExportPath": {
                        "value": "/optumintegrationfilestorage/Archive_AdjudicationHeader/"
                    },
                    "FolderImportPath": {
                        "value": "/rfd/xx10vxx/es10vw1/Optum_RCM_TEST/to_Dynamics_365"
                    },
                    "FolderProcessPath": {
                        "value": "/optumintegrationfilestorage/Process_AdjudicationHeader/"
                    },
                    "FolderXMLPath": {
                        "value": "/optumintegrationfilestorage/XMLFiles_AdjudicationHeader/"
                    },
                    "HeaderFileName": {
                        "value": "PackageHeader"
                    },
                    "LogicAppState": {
                        "value": "Disabled"
                    },
                    "ManifestFileName": {
                        "value": "Manifest"
                    },
                    "PackageFileName": {
                        "value": "AdjudicationHeaderImportEntity"
                    },
                    "RecurrenceInterval": {
                        "value": 1
                    },
                    "RecurrenceTimeZone": {
                        "value": "GMT Standard Time"
                    },
                    "TextFileName": {
                        "value": "Adjudication header"
                    },
                    "diagnosticSettingName": {
                        "value": "Optum-integration-loganalytics-workspace"
                    },
                    "diagnosticSettingResouceGroupName": {
                        "value": "rg-dev-ORxMSDynamicsRCM"
                    },
                    "diagnosticSettingSubscription": {
                        "value": "b4f24c37-de92-4f78-809d-d521ce05ea7f"
                    },
                    "function_app_id": {
                        "value": "dev-fa-optum-createpackagezipfile"
                    },
                    "logAnalyticWorkspaceName": {
                        "value": "Optum-integration-loganalytics-workspace"
                    },
                    "logicAppNameValue": {
                        "value": "[parameters('workflows_dev_la_optum_inbound_adjudicationheader_name')]"
                    }
                }
            }
        }
    ]
}