<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMResourceSchedulingPlanningObject</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMResourceSchedulingPlanningObject extends FormRun
{

    recId                           dayPlan1;
    recId                           dayPlan2;
    recId                           dayPlan3;
    recId                           dayPlan4;
    recId                           dayPlan5;
    recId                           dayPlan6;
    recId                           dayPlan7;

    HMCaseType                      openMode;
    boolean                         isWeekNewRecord;
    boolean                         fromLookup;

    boolean                         copyToDelete;
    List                            copyDelete;

    boolean                         isDayPlanAssignModified;
    #task
    boolean                         isEscapedPress;
    Integer                         slotsOnlineOffline;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        DialogButton        dialogButton;
        boolean ret;
    
        ret = super();
    
        if(!isEscapedPress && isDayPlanAssignModified)
        {
            dialogButton = Box::yesNo("@SYS112645",DialogButton::No);
            if(dialogButton == DialogButton::Yes)
            {
                HMResourceSchedulingWeekPlan_ds.write();
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTimeSlotOverlappingForWeekCalendar</Name>
				<Source><![CDATA[
    public boolean checkTimeSlotOverlappingForWeekCalendar()
    {
        HMResourceSchedulingPlanningObject              hmResourceSchedulingPlanningObjectLocal;
        HMResourceSchedulingWeekPlan                    hmResourceSchedulingWeekPlanLocal;
        HMResourceSchedulingWeekDayPlan                 hmResourceSchedulingWeekDayPlanLocal;
        HMResourceSchedulingWeekPlanToCalender          hmResourceSchedulingWeekPlanToCalenderLocal;
        HMResourceSchedulingDayPlan                     hmResourceSchedulingDayPlanLocal;
        HMResourceSchedulingDayPlanItem                 hmResourceSchedulingDayPlanItemLocal;
        HMResourceSchedulingDayPlan                     hmResourceSchedulingDayPlanLocalForCurrent;
        HMResourceSchedulingDayPlanItem                 hmResourceSchedulingDayPlanItemLocalForCurrent;
    
        str message = "@MAZ3858";
        boolean ret = true;
    
        while select * from hmResourceSchedulingPlanningObjectLocal
            join * from hmResourceSchedulingWeekPlanLocal
            join * from hmResourceSchedulingWeekDayPlanLocal
            join * from hmResourceSchedulingWeekPlanToCalenderLocal
            order by hmResourceSchedulingWeekPlanToCalenderLocal.HMResourceSchedulingWeekPlan, hmResourceSchedulingWeekDayPlanLocal.Days
            where hmResourceSchedulingPlanningObjectLocal.RecId != HMResourceSchedulingPlanningObject.RecId
            && hmResourceSchedulingPlanningObjectLocal.HMResourceMaster == HMResourceSchedulingPlanningObject.HMResourceMaster
            && hmResourceSchedulingPlanningObjectLocal.RecId == hmResourceSchedulingWeekPlanLocal.HMResourceSchedulingPlanningObject
            && hmResourceSchedulingWeekPlanLocal.RecId == hmResourceSchedulingWeekPlanToCalenderLocal.HMResourceSchedulingWeekPlan
            && hmResourceSchedulingWeekPlanToCalenderLocal.WeekNo == HMResourceSchedulingWeekPlan.WeekNumber
            && (hmResourceSchedulingWeekPlanToCalenderLocal.YearNo >= hmResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanToCalenderLocal.YearNo <=hmResourceSchedulingWeekPlan.ToYear)
            && hmResourceSchedulingWeekPlanLocal.RecId == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingWeekPlan
        {
            if(dayPlan1 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 1)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan1
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan2 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 2)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan2
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan3 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 3)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan3
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan4 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 4)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan4
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan5 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 5)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan5
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan6 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 6)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan6
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan7 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 7)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan7
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime < hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                   warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTimeSlotOverlappingForWeekPlan</Name>
				<Source><![CDATA[
    public boolean checkTimeSlotOverlappingForWeekPlan()
    {
        HMResourceSchedulingPlanningObject              hmResourceSchedulingPlanningObjectLocal;
        HMResourceSchedulingWeekPlan                    hmResourceSchedulingWeekPlanLocal;
        HMResourceSchedulingWeekDayPlan                 hmResourceSchedulingWeekDayPlanLocal;
        HMResourceSchedulingDayPlan                     hmResourceSchedulingDayPlanLocal;
        HMResourceSchedulingDayPlanItem                 hmResourceSchedulingDayPlanItemLocal;
        HMResourceSchedulingDayPlan                     hmResourceSchedulingDayPlanLocalForCurrent;
        HMResourceSchedulingDayPlanItem                 hmResourceSchedulingDayPlanItemLocalForCurrent;
    
        str message = "@MAZ3858";
        boolean ret = true;
    
        while select * from hmResourceSchedulingPlanningObjectLocal
            join * from hmResourceSchedulingWeekPlanLocal
            join * from hmResourceSchedulingWeekDayPlanLocal
            order by hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingWeekPlan, hmResourceSchedulingWeekDayPlanLocal.Days
            where hmResourceSchedulingPlanningObjectLocal.RecId != HMResourceSchedulingPlanningObject.RecId
            && hmResourceSchedulingPlanningObjectLocal.HMResourceMaster == HMResourceSchedulingPlanningObject.HMResourceMaster
            && hmResourceSchedulingPlanningObjectLocal.RecId == hmResourceSchedulingWeekPlanLocal.HMResourceSchedulingPlanningObject
            && hmResourceSchedulingWeekPlanLocal.WeekNumber == HMResourceSchedulingWeekPlan.WeekNumber
            && (((HMResourceSchedulingWeekPlan.FromYear >= hmResourceSchedulingWeekPlanlocal.FromYear && HMResourceSchedulingWeekPlan.FromYear <=hmResourceSchedulingWeekPlanlocal.ToYear)
            || (HMResourceSchedulingWeekPlan.ToYear >= hmResourceSchedulingWeekPlanlocal.FromYear && HMResourceSchedulingWeekPlan.ToYear <=hmResourceSchedulingWeekPlanlocal.ToYear))
            || ((hmResourceSchedulingWeekPlanlocal.FromYear >= HMResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanlocal.FromYear <=HMResourceSchedulingWeekPlan.ToYear)
            || (hmResourceSchedulingWeekPlanlocal.ToYear >= HMResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanlocal.ToYear <=HMResourceSchedulingWeekPlan.ToYear)))
            && hmResourceSchedulingWeekPlanLocal.RecId == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingWeekPlan
        {
            if(dayPlan1 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 1)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan1
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS5217",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan2 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 2)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan2
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6713",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan3 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 3)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan3
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6482",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan4 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 4)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan4
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime < hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS6714",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan5 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 5)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan5
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                   warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS7072",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan6 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 6)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan6
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime <  hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                    warning(strfmt(message,"@SYS13051",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
    
            if(dayPlan7 != 0 && hmResourceSchedulingWeekDayPlanLocal.Days == 7)
            {
                select * from hmResourceSchedulingDayPlanLocal
                    join * from hmResourceSchedulingDayPlanItemLocal
                    where hmResourceSchedulingDayPlanLocal.RecId  == hmResourceSchedulingWeekDayPlanLocal.HMResourceSchedulingDayPlan
                    && hmResourceSchedulingDayPlanLocal.RecId == hmResourceSchedulingDayPlanItemLocal.HMResourceSchedulingDayPlan;
    
                select * from hmResourceSchedulingDayPlanLocalForCurrent
                    join * from hmResourceSchedulingDayPlanItemLocalForCurrent
                    where hmResourceSchedulingDayPlanLocalForCurrent.RecId  == dayPlan7
                    && hmResourceSchedulingDayPlanLocalForCurrent.RecId == hmResourceSchedulingDayPlanItemLocalForCurrent.HMResourceSchedulingDayPlan;
    
                if(hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime == hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime == hmResourceSchedulingDayPlanItemLocal.EndTime)
                {
                    warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime <  hmResourceSchedulingDayPlanItemLocal.EndTime) || (hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime > hmResourceSchedulingDayPlanItemLocal.StartTime && hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime < hmResourceSchedulingDayPlanItemLocal.EndTime))
                {
                    warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
                else if((hmResourceSchedulingDayPlanItemLocal.StartTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.StartTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime) || (hmResourceSchedulingDayPlanItemLocal.EndTime > hmResourceSchedulingDayPlanItemLocalForCurrent.StartTime && hmResourceSchedulingDayPlanItemLocal.EndTime <  hmResourceSchedulingDayPlanItemLocalForCurrent.EndTime))
                {
                   warning(strfmt(message,"@SYS13053",element.getOrganizationUnitName(hmResourceSchedulingPlanningObjectLocal.HMOrganizationalUnit),element.getBuildingUnitName(hmResourceSchedulingPlanningObjectLocal.HMBuildingUnit)));
                    ret = false;
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBuildingUnitName</Name>
				<Source><![CDATA[
    public Description getBuildingUnitName(recId _recID)
    {
        return HMBuildingUnit::find(_recID).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDayPlan</Name>
				<Source><![CDATA[
    public Description getDayPlan(recId _dayPlan)
    {
        return HMResourceSchedulingDayPlan::find(_dayPlan).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrganizationUnitName</Name>
				<Source><![CDATA[
    public Description getOrganizationUnitName(recId _recID)
    {
        return HMOrganizationalUnit::find(_recID).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParameterRecord</Name>
				<Source><![CDATA[
    public HMParameters getParameterRecord()
    {
        HMParameters        hmParametersLocal;
        select firstFast * from  hmParametersLocal;
    
        return hmParametersLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPhysicianName</Name>
				<Source><![CDATA[
    public DirPartyName getPhysicianName(recId _clinicStaffRecId)
    {
        HMClinicStaff           hmClinicStafflocal;
        HcmWorker               hcmWorkerlocal;
        DirPerson               dirPersonlocal;
    
        select * from dirPersonlocal
            join recId,HcmWorker from hmClinicStafflocal
            join recId,Person from hcmWorkerlocal
        where
            hmClinicStafflocal.RecId == _clinicStaffRecId
            && hmClinicStafflocal.HcmWorker == hcmWorkerlocal.RecId
            && dirPersonlocal.RecId == hcmWorkerlocal.Person;
    
        return dirPersonlocal.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        openMode = element.args().parmEnum();
        super();
    
        dayPlan1=0;
        dayPlan2=0;
        dayPlan3=0;
        dayPlan4=0;
        dayPlan5=0;
        dayPlan6=0;
        dayPlan7=0;
    
        fromLookup = false;
        isDayPlanAssignModified = false;
        isEscapedPress = false;
    
        copyDelete = new List(Types::Int64);
    
        if (!isConfigurationKeyEnabled(configurationKeyNum(MZKTemp)))
        {
            TimeSlots_NumberOfOverBookings.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    public void refreshData()
    {
        HMResourceSchedulingPlanningObject_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshDayPlan</Name>
				<Source><![CDATA[
    public void refreshDayPlan()
    {
        HMResourceSchedulingDayPlan_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (openMode == HMCaseType::InPatient)
        {
            ScheduleTypeTab.visible(true);
            TimeSlotsTab.visible(false);
            OverbookAllowed.visible(false);
            //DefaultScheduleType.visible(false);
        }
        else if (openMode == HMCaseType::OutPatient || openMode == HMCaseType::Surgery)
        {
            ScheduleTypeTab.visible(false);
            TimeSlotsTab.visible(true);
            OverbookAllowed.visible(true);
            HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(true);
            //DefaultScheduleType.visible(true);
        }
        else if(openMode == HMCaseType::Physiotherapy)
        {
            ScheduleTypeTab.visible(false);
            TimeSlotsTab.visible(true);
            OverbookAllowed.visible(true);
            //DefaultScheduleType.visible(true);
            HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(true);
        }
    
        super();
    
        if(HMResourceSchedulingPlanningObject.RecId==0)
        {
            BldUnit.enabled(false);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAppointmentFromParameters</Name>
				<Source><![CDATA[
    public void setAppointmentFromParameters()
    {
        HMParameters   parameters = element.getParameterRecord();
        HMResourceSchedulingPlanningObject.SearchInterval            = parameters.SearchInterval;
        HMResourceSchedulingPlanningObject.ScheduleOnPublicHoliday   = parameters.ScheduleOnPublicHoliday;
    
        if(openMode !=  HMCaseType::InPatient)
        {
             HMResourceSchedulingPlanningObject.OverbookAllowed           = parameters.OverbookAllowed;
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBuildingUnitID</Name>
				<Source><![CDATA[
    public void setBuildingUnitID(recId _buildingUnitRecId)
    {
        HMResourceSchedulingPlanningObject.HMBuildingUnit = _buildingUnitRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDayPlanItemForAppointment</Name>
				<Source><![CDATA[
    public void setDayPlanItemForAppointment()
    {
        HMParameters paramters = element.getParameterRecord();
    
        HMResourceSchedulingDayPlanItemOutPatient.NumberOfOverBookings = paramters.NumberOfOverBookings;
        HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment = paramters.PercentOfflineAppointment;
        HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment  = paramters.PercentOnlineAppointment;
        HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments        = paramters.OnlineAppointments;
        HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments       = paramters.OfflineAppointments;
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultBuildingUnit</Name>
				<Source><![CDATA[
    public void setDefaultBuildingUnit()
    {
        HMBuildingUnit      hmBuildingUnitLocal;
        HMOrganizationalBuildingUnit    hmOrganizationalBuildingUnitLocal;
    
        select count (RecId) from hmBuildingUnitLocal
                    join * from hmOrganizationalBuildingUnitLocal
                        where hmBuildingUnitLocal.RecId == hmOrganizationalBuildingUnitLocal.HMBuildingUnit
                        && hmOrganizationalBuildingUnitLocal.HMOrganizationalUnit == HMResourceSchedulingPlanningObject.HMOrganizationalUnit;
    
        if (hmBuildingUnitLocal.RecId == 1)
        {
            select * from hmBuildingUnitLocal
                    join * from hmOrganizationalBuildingUnitLocal
                        where hmBuildingUnitLocal.RecId == hmOrganizationalBuildingUnitLocal.HMBuildingUnit
                        && hmOrganizationalBuildingUnitLocal.HMOrganizationalUnit == HMResourceSchedulingPlanningObject.HMOrganizationalUnit;
    
            HMResourceSchedulingPlanningObject.HMBuildingUnit = hmBuildingUnitLocal.RecId;
            BldUnit.text(HMBuildingUnit::find(HMResourceSchedulingPlanningObject.HMBuildingUnit).Description);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrganizationUnitID</Name>
				<Source><![CDATA[
    public void setOrganizationUnitID()
    {
        HMResourceSchedulingPlanningObject.HMBuildingUnit = 0;
        BldUnit.text("");
    
        element.setDefaultBuildingUnit();
    
        if (HMOrganizationaCategory::find(HMOrganizationalUnit::find(HMResourceSchedulingPlanningObject.HMOrganizationalUnit).HMOrganizationaCategory).Indicator == HMOrganizationalCategoryIndicator::TreatmentUnit)
        {
            HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(False);
    
        }
        else
        {
            HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverBookink</Name>
				<Source><![CDATA[
    public void setOverBookink(boolean _ret = false)
    {
        if (HMResourceSchedulingDayPlanItemOutPatient.RecId)
        {
             element.setSlotsOffline();
             HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments    = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
             HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments   = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSlotsOffline</Name>
				<Source><![CDATA[
    public void setSlotsOffline()
    {
                    slotsOnlineOffline =(HMResourceSchedulingPlanningObject.OverbookAllowed == NoYes::Yes)?
                    (HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots +
                                     HMResourceSchedulingDayPlanItemOutPatient.NumberOfOverBookings):
                    HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimeSlots</Name>
				<Source><![CDATA[
    public void setTimeSlots()
    {
        boolean flag=false;
        HMResourceSchedulingHelper objClass=new HMResourceSchedulingHelper();
    
        if(HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode != 0)
        {
            if(HMResourceSchedulingDayPlanItemOutPatient.EndTime >= HMResourceSchedulingDayPlanItemOutPatient.StartTime)
            {
                flag=true;
            }
        }
    
        if(flag)
        {
            HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots = int642int(objClass.getInitialTimeSlots(HMResourceSchedulingDayPlanItemOutPatient.StartTime,HMResourceSchedulingDayPlanItemOutPatient.EndTime,HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode, HMResourceSchedulingPlanningObject.HMResourceMaster));
            AvalilableTimeSlots_NumberOfTimeSlots.update();
            element.setSlotsOffline();
    
            HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments  = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
            HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay1</Name>
				<Source><![CDATA[
    public void StoreDay1(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan1 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day1.text(_plan.Description);
        }
        else
        {
            Day1.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay2</Name>
				<Source><![CDATA[
    public void StoreDay2(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan2 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day2.text(_plan.Description);
        }
        else
        {
            Day2.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay3</Name>
				<Source><![CDATA[
    public void StoreDay3(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan3 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day3.text(_plan.Description);
        }
        else
        {
            Day3.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay4</Name>
				<Source><![CDATA[
    public void StoreDay4(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan4 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day4.text(_plan.Description);
        }
        else
        {
            Day4.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay5</Name>
				<Source><![CDATA[
    public void StoreDay5(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan5 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day5.text(_plan.Description);
        }
        else
        {
            Day5.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay6</Name>
				<Source><![CDATA[
    public void StoreDay6(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan6 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day6.text(_plan.Description);
        }
        else
        {
            Day6.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>StoreDay7</Name>
				<Source><![CDATA[
    public void StoreDay7(recId _recId)
    {
        HMResourceSchedulingDayPlan _plan;
        dayPlan7 = _recId;
        select Description from  _plan where _plan.RecId == _recId;
        if(_plan)
        {
            Day7.text(_plan.Description);
        }
        else
        {
            Day7.text('');
        }
        fromLookup = true;
        isDayPlanAssignModified = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        int ret;
    
        if(_taskId == #taskEsc)
        {
            isEscapedPress = true;
        }
    
        ret = super(_taskId);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWeekPlanToCalenderGrid</Name>
				<Source><![CDATA[
    public void updateWeekPlanToCalenderGrid()
    {
        recId  ResourceSchedulingWeekPlanTemp = HMResourceSchedulingWeekPlan.RecId;
    
        HMResourceSchedulingWeekPlan_ds.executeQuery();
    
        HMResourceSchedulingWeekPlan_ds.positionToRecord(HMResourceSchedulingWeekPlan::find(ResourceSchedulingWeekPlanTemp));
    
        HMResourceSchedulingWeekPlanToCalender_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateExistappointment</Name>
				<Source><![CDATA[
    public List validateExistappointment(int _day, RecId _dayPlanRecId)
    {
        HMResourceSchedulingWeekDayPlan         hmResourceSchedulingWeekDayPlanValidate;
        ListEnumerator                          listEnmr;
        List apptList = new List(Types::Int64);
        boolean ret = true;
    
        hmResourceSchedulingWeekDayPlanValidate = HMResourceSchedulingWeekDayPlan::findByWeekPlanDay(HMResourceSchedulingWeekPlan.RecId, _day);
    
        if(hmResourceSchedulingWeekDayPlanValidate.HMResourceSchedulingDayPlan != _dayPlanRecId)
        {
            listEnmr = HMResourceSchedulingHelper::getDifferenceInDayPlans(hmResourceSchedulingWeekDayPlanValidate.HMResourceSchedulingDayPlan, _dayPlanRecId).getEnumerator();
    
            while(listEnmr.moveNext())
            {
                apptList.appendList(HMResourceSchedulingHelper::checkAppointmentExistByWeekDayPlan(HMResourceSchedulingPlanningObject.RecId, hmResourceSchedulingWeekDayPlanValidate.RecId, conPeek(listEnmr.current(), 1),conPeek(listEnmr.current(), 2)));
            }
        }
    
        return apptList;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMResourceSchedulingPlanningObject</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            HMResourceSchedulingPlanningObject.Category = HMResourceSchedulingCategory::Person;
            HMResourceSchedulingPlanningObject.CaseType = openMode;
            HMResourceSchedulingPlanningObject.StartDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
            HMResourceSchedulingPlanningObject.EndDate = maxDate();
            //if (openMode == HMCaseType::InPatient)
            //{
                //HMResourceSchedulingPlanningObject.CaseType = HMCaseType::InPatient;
            //}
            //else if (openMode == HMCaseType::OutPatient)
            //{
                //HMResourceSchedulingPlanningObject.CaseType = HMCaseType::OutPatient;
            //}
            //else if (openMode == HMCaseType::Surgery)
            //{
                //HMResourceSchedulingPlanningObject.CaseType = HMCaseType::Surgery;
            //}
            //else if (openMode == HMCaseType::Physiotherapy)
            //{
                //HMResourceSchedulingPlanningObject.CaseType = HMCaseType::Physiotherapy;
            //}
        
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(tableNum(HMResourceSchedulingPlanningObject)).addRange(fieldNum(HMResourceSchedulingPlanningObject,CaseType)).value(SysQuery::value(openMode));
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
        
            BldUnit.enabled(true);
        
            BldUnit.text("");
        
            if(openMode == HMCaseType::OutPatient || openMode == HMCaseType::Surgery)
            {
                OrgTimeSlot.text("");
                BldTimeSlot.text("");
                PhyTimeSlot.text("");
            }
        
            element.setAppointmentFromParameters();
        
            Day1.text("");
            Day2.text("");
            Day3.text("");
            Day4.text("");
            Day5.text("");
            Day6.text("");
            Day7.text("");
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            boolean isRecordExist=true;
        
            if(HMResourceSchedulingPlanningObject.RecId==0)
            {
                isRecordExist = false;
            }
        
            super();
        
            if(isRecordExist)
            {
                if (HMResourceSchedulingPlanningObject.RecId==0)
                {
                    BldUnit.enabled(false);
        
                    BldUnit.text("");
        
                    if(openMode == HMCaseType::OutPatient || openMode == HMCaseType::Surgery)
                    {
                        OrgTimeSlot.text("");
                        BldTimeSlot.text("");
                        PhyTimeSlot.text("");
                    }
        
                    Day1.enabled(false);
                    Day2.enabled(false);
                    Day3.enabled(false);
                    Day4.enabled(false);
                    Day5.enabled(false);
                    Day6.enabled(false);
                    Day7.enabled(false);
        
                    Day1.text("");
                    Day2.text("");
                    Day3.text("");
                    Day4.text("");
                    Day5.text("");
                    Day6.text("");
                    Day7.text("");
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if(ret)
            {
                BldUnit.text(element.getBuildingUnitName(HMResourceSchedulingPlanningObject.HMBuildingUnit));
        
                if(openMode == HMCaseType::OutPatient || openMode == HMCaseType::Surgery )
                {
                    HMResourceSchedulingDayPlan_ds.active();
                    HMResourceSchedulingDayPlanItemOutPatient_ds.active();
                }
        
                HMResourceSchedulingWeekPlan_ds.active();
                if (HMOrganizationaCategory::find(HMOrganizationalUnit::find(HMResourceSchedulingPlanningObject.HMOrganizationalUnit).HMOrganizationaCategory).Indicator == HMOrganizationalCategoryIndicator::TreatmentUnit)
                {
                    HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(False);
                }
                else
                {
                    HMResourceSchedulingPlanningObject_ds.object(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster)).mandatory(true);
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            HMResourceOrganizationalUnit HMResourceOrganizationalUnit;
            HMResourceMaster hmResourceMaster;
            boolean ret;
        
            ret = super();
        
        
            if(BldUnit.valueStr() == "" || HMResourceSchedulingPlanningObject.HMBuildingUnit == 0)
            {
                warning("@MAZ2122");
                ret=false;
            }
        
            if (ret && HMResourceSchedulingPlanningObject.HMResourceMaster != 0)
            {
                select firstOnly Type,RefRecId,RecId from hmResourceMaster where hmResourceMaster.RecId == HMResourceSchedulingPlanningObject.HMResourceMaster;
        
                if( !HMResourceOrganizationalUnit::recordExist(HMResourceSchedulingPlanningObject.HMOrganizationalUnit,hmResourceMaster.RecId))
                {
                    if(Box::yesNo("@MAZ6076",DialogButton::Yes) == DialogButton::Yes)
                    {
                        HMResourceOrganizationalUnit.HMResourceMaster = hmResourceMaster.RecId;
                        HMResourceOrganizationalUnit.HMOrganizationalUnit = HMResourceSchedulingPlanningObject.HMOrganizationalUnit;
                        HMResourceOrganizationalUnit.insert();
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }
        
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
        
            if(!HMResourceSchedulingPlanningObject.OverbookAllowed)
            {
                HMResourceSchedulingHelper::updateOverBookingSlots(HMResourceSchedulingPlanningObject.RecId);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DefaultScheduleType</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                SysReferenceTableLookup sysReferenceTableLookup;
            
                QueryBuildDataSource    queryBuildDataSource;
                Query                   query = new Query();
                sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMResourceSchedulingTypeCode), _formReferenceControl, true);
            
                queryBuildDataSource = query.addDataSource(tableNum(HMResourceSchedulingTypeCode));
                queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, IsBlocked)).value(SysQuery::value(NoYes::No));
                queryBuildDataSource.addRange(fieldnum(HMResourceSchedulingTypeCode,AppointmentSubType)).value(SysQuery::value(HMAppointmentSubType::Pseudo));
                queryBuildDataSource.addRange(fieldnum(HMResourceSchedulingTypeCode,AppointmentSubType)).value(SysQuery::value(HMAppointmentSubType::Searchable));
            
                if(openMode == HMCaseType::OutPatient)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::OutPatient));
                }
                else if (openMode == HMCaseType::Surgery)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::Surgery));
                }
                else if(openMode == HMCaseType::Physiotherapy)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::Physiotherapy));
                }
            
                queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(HMResourceMasterScheduleType));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.addRange(fieldNum(HMResourceMasterScheduleType, HMResourceMaster)).value(SysQuery::value(HMResourceSchedulingPlanningObject.HMResourceMaster));
            
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Code));
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Description));
                sysReferenceTableLookup.parmQuery(query);
            
                ret = sysReferenceTableLookup.performFormLookup();
            
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HMOrganizationalUnit</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
            
                SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMOrganizationalUnit), _formReferenceControl);Query testQuery;
                QueryBuildDataSource qbds;
                Query query;
                HMOrganizationalUnit selectedRecord;
                //if(HMResourceSchedulingPlanningObject.HMResourceMaster == 0)
                //{
                    //warning("Select resource first");
                    //return null;
                //}
                sysTableLookup.addLookupfield(fieldNum(HMOrganizationalUnit, Code));
            
                sysTableLookup.addLookupfield(fieldNum(HMOrganizationalUnit, Description));
                query= new Query();
            
                qbds = query.addDataSource(tableNum(HMOrganizationalUnit));
                qbds = qbds.addDataSource(tableNum(HMResourceOrganizationalUnit));
                qbds.relations(true);
                qbds.addRange(fieldNum(HMResourceOrganizationalUnit,HMResourceMaster)).value(SysQuery::value(HMResourceSchedulingPlanningObject.HMResourceMaster));
            
                sysTableLookup.parmQuery(query);
            
                selectedRecord = sysTableLookup.performFormLookup();
            
                return selectedRecord;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingDayPlan</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            TimeOfDay   fromTime = -1, toTime = -1;
            List apptList = new List(Types::Int64);
        
            ret = super();
        
            if(ret)
            {
                if(hmResourceSchedulingDayPlan.orig().DayStartTime < hmResourceSchedulingDayPlan.DayStartTime)
                {
                    if(hmResourceSchedulingDayPlan.orig().DayEndTime <= hmResourceSchedulingDayPlan.DayStartTime)
                    {
                        fromTime = hmResourceSchedulingDayPlan.orig().DayStartTime;
                        toTime = hmResourceSchedulingDayPlan.orig().DayEndTime;
                    }
                    else
                    {
                        fromTime = hmResourceSchedulingDayPlan.orig().DayStartTime;
                        toTime = hmResourceSchedulingDayPlan.DayStartTime;
                    }
                }
                else if(hmResourceSchedulingDayPlan.orig().DayStartTime > hmResourceSchedulingDayPlan.DayStartTime
                    && hmResourceSchedulingDayPlan.orig().DayStartTime >= hmResourceSchedulingDayPlan.DayEndTime)
                {
                    fromTime = hmResourceSchedulingDayPlan.orig().DayStartTime;
                    toTime = hmResourceSchedulingDayPlan.orig().DayEndTime;
                }
        
                if(hmResourceSchedulingDayPlan.orig().DayEndTime > hmResourceSchedulingDayPlan.DayEndTime)
                {
                    if(hmResourceSchedulingDayPlan.orig().DayStartTime < hmResourceSchedulingDayPlan.DayEndTime)
                    {
                        fromTime = hmResourceSchedulingDayPlan.DayEndTime;
                        toTime = hmResourceSchedulingDayPlan.orig().DayEndTime;
                    }
                }
        
                if(fromTime != -1 && toTime != -1)
                {
                    apptList = HMResourceSchedulingHelper::checkAppointmentExistByDayPlan(HMResourceSchedulingPlanningObject.RecId, hmResourceSchedulingDayPlan.RecId, fromTime,  toTime);
        
                    if(apptList.elements() > 0)
                    {
                        if(Box::yesNo("@MAZ12526", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                        {
                            ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                        }
                        else
                        {
                            ret = false;
                        }
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if(HMResourceSchedulingPlanningObject.RecId==0)
            {
                 warning("@MAZ2640");
            }
            else
            {
                super(_append);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingDayPlanItemOutPatient</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;
            List    apptList;
        
            ret = super();
        
            if(ret)
            {
                apptList = HMResourceSchedulingHelper::checkAppointmentExistByDayPlan(HMResourceSchedulingPlanningObject.RecId, HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingDayPlan, HMResourceSchedulingDayPlanItemOutPatient.StartTime,  HMResourceSchedulingDayPlanItemOutPatient.EndTime);
        
                if(apptList.elements() > 0)
                {
                    if(Box::yesNo("@MAZ12529", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                    {
                        ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if(HMResourceSchedulingDayPlan.RecId==0)
            {
                 warning("@MAZ2129");
            }
            else
            {
                if(HMResourceSchedulingPlanningObject.OverbookAllowed==NoYes::Yes)
                {
                    TimeSlots_NumberOfOverBookings.enabled(true);
                    element.setSlotsOffline();
                    //element.setDayPlanItemForAppointment();
                }
                else
                {
                    TimeSlots_NumberOfOverBookings.enabled(false);
                    element.setSlotsOffline();
                    TimeSlots_NumberOfOverBookings.value(0);
        
                }
        
                super(_append);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            boolean isRecordExist=true;
        
            if(HMResourceSchedulingDayPlanItemOutPatient.RecId==0)
            {
                isRecordExist = false;
            }
        
            super();
        
            if(isRecordExist)
            {
                if(HMResourceSchedulingDayPlanItemOutPatient.RecId==0)
                {
                    OrgTimeSlot.text("");
                    BldTimeSlot.text("");
                    PhyTimeSlot.text("");
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            HMResourceSchedulingDayPlanItemOutPatient.HMBuildingUnit=HMResourceSchedulingPlanningObject.HMBuildingUnit;
            HMResourceSchedulingDayPlanItemOutPatient.HMOrganizationalUnit=HMResourceSchedulingPlanningObject.HMOrganizationalUnit;
            //HMResourceSchedulingDayPlanItemOutPatient.HMClinicStaff=HMResourceSchedulingPlanningObject.HMClinicStaff;
            element.setDayPlanItemForAppointment();
            OrgTimeSlot.text(element.getOrganizationUnitName(HMResourceSchedulingDayPlanItemOutPatient.HMOrganizationalUnit));
            BldTimeSlot.text(element.getBuildingUnitName(HMResourceSchedulingDayPlanItemOutPatient.HMBuildingUnit));
            PhyTimeSlot.text(element.getPhysicianName(HMResourceSchedulingDayPlanItemOutPatient.HMClinicStaff));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            //FormStringControl  stringEditControl;
        
            ret = super();
        
            if(ret)
            {
                /*TimeSlots_StartTime.value(HMResourceSchedulingDayPlanItemOutPatient.StartTime);
                TimeSlots_EndTime.value(HMResourceSchedulingDayPlanItemOutPatient.EndTime);
        
                ScheduleReferenceGroup.value(HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode);
                stringEditControl = ScheduleReferenceGroup.controlNum(1);
                stringEditControl.text(HMResourceSchedulingTypeCode::find(HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode).Description);
        
                SpecialityReferenceGroup.value(HMResourceSchedulingDayPlanItemOutPatient.HMSpecialtyCode);
                stringEditControl = SpecialityReferenceGroup.controlNum(1);
                stringEditControl.text(HMSpecialtyCode::find(HMResourceSchedulingDayPlanItemOutPatient.HMSpecialtyCode).Description);
        
                AvalilableTimeSlots_NumberOfTimeSlots.value(HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots);
                TimeSlots_NumberOfOverBookings.value(HMResourceSchedulingDayPlanItemOutPatient.NumberOfOverBookings);
                */
                if(HMResourceSchedulingPlanningObject.OverbookAllowed==NoYes::Yes)
                {
                    TimeSlots_NumberOfOverBookings.enabled(true);
                }
                else
                {
                    TimeSlots_NumberOfOverBookings.enabled(false);
                }
        
                OrgTimeSlot.text(element.getOrganizationUnitName(HMResourceSchedulingDayPlanItemOutPatient.HMOrganizationalUnit));
                BldTimeSlot.text(element.getBuildingUnitName(HMResourceSchedulingDayPlanItemOutPatient.HMBuildingUnit));
                PhyTimeSlot.text(element.getPhysicianName(HMResourceSchedulingDayPlanItemOutPatient.HMClinicStaff));
        
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            int duration;
            int64 minutes;
            TimeOfDay   fromTime = -1, toTime = -1;
            DialogButton        dialogButton;
            List apptList = new List(Types::Int64);
        
            ret = super();
            element.setSlotsOffline();
            if(ret)
            {
                if(HMResourceSchedulingDayPlanItemOutPatient.StartTime < HMResourceSchedulingDayPlan.DayStartTime || HMResourceSchedulingDayPlanItemOutPatient.StartTime > HMResourceSchedulingDayPlan.DayEndTime)
                {
                    warning("@MAZ2123");
                    ret=false;
                }
                if(HMResourceSchedulingDayPlanItemOutPatient.ArrivalTime > HMResourceSchedulingDayPlanItemOutPatient.StartTime)
                {
                    warning("@MAZ11353");
                    ret = false;
                }
                if(HMResourceSchedulingDayPlanItemOutPatient.EndTime < HMResourceSchedulingDayPlan.DayStartTime || HMResourceSchedulingDayPlanItemOutPatient.EndTime > HMResourceSchedulingDayPlan.DayEndTime)
                {
                    warning("@MAZ2124");
                    ret=false;
                }
                if (TimeSlots_NumberOfOverBookings.enabled() && (HMResourceSchedulingDayPlanItemOutPatient.NumberOfOverBookings < 0 || HMResourceSchedulingDayPlanItemOutPatient.NumberOfOverBookings > 99))
                {
                    warning(strfmt("@MAZ2125",0,99));
                    ret = false;
                }
                //if (HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment + HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment != 100)
                //{
                    //ret = checkFailed("@MAZ8620");
                //}
                //if (HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments + HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments != slotsOnlineOffline)
                //{
                    //ret = checkFailed("@MAZ8621");
                //}
                if (HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots <= 0)
                {
                    ret = checkFailed("@MAZ9353");
                }
        
            }
        
            if(ret)
            {
                duration = HMResourceMasterHelper::getDurationInMinutes(HMResourceSchedulingPlanningObject.HMResourceMaster, HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode);
        
                minutes = (DateTimeUtil::getDifference(DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),HMResourceSchedulingDayPlanItemOutPatient.EndTime),(DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),HMResourceSchedulingDayPlanItemOutPatient.StartTime)))/60);
        
                if(duration > minutes)
                {
                    dialogButton = Box::yesNo(strFmt("@MAZ3295",HMResourceSchedulingTypeCode::find(HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingTypeCode).Description,duration), DialogButton::No, "@SYS301622");
                    if(dialogButton == DialogButton::No)
                    {
                        ret = false;
                    }
                }
            }
        
            if(ret)
            {
                if(HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime < HMResourceSchedulingDayPlanItemOutPatient.StartTime)
                {
                    if(HMResourceSchedulingDayPlanItemOutPatient.orig().EndTime <= HMResourceSchedulingDayPlanItemOutPatient.StartTime)
                    {
                        fromTime = HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime;
                        toTime = HMResourceSchedulingDayPlanItemOutPatient.orig().EndTime;
                    }
                    else
                    {
                        fromTime = HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime;
                        toTime = HMResourceSchedulingDayPlanItemOutPatient.StartTime;
                    }
                }
                else if(HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime > HMResourceSchedulingDayPlanItemOutPatient.StartTime
                    && HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime >= HMResourceSchedulingDayPlanItemOutPatient.EndTime)
                {
                    fromTime = HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime;
                    toTime = HMResourceSchedulingDayPlanItemOutPatient.orig().EndTime;
                }
        
                if(HMResourceSchedulingDayPlanItemOutPatient.orig().EndTime > HMResourceSchedulingDayPlanItemOutPatient.EndTime)
                {
                    if(HMResourceSchedulingDayPlanItemOutPatient.orig().StartTime < HMResourceSchedulingDayPlanItemOutPatient.EndTime)
                    {
                        fromTime = HMResourceSchedulingDayPlanItemOutPatient.EndTime;
                        toTime = HMResourceSchedulingDayPlanItemOutPatient.orig().EndTime;
                    }
                }
        
                if(fromTime != -1 && toTime != -1)
                {
                    apptList = HMResourceSchedulingHelper::checkAppointmentExistByDayPlan(HMResourceSchedulingPlanningObject.RecId, HMResourceSchedulingDayPlanItemOutPatient.HMResourceSchedulingDayPlan, fromTime,  toTime);
        
                    if(apptList.elements() > 0)
                    {
                        if(Box::yesNo("@MAZ12528", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                        {
                            ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                        }
                        else
                        {
                            ret = false;
                        }
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>HMResourceSchedulingTypeCode</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                SysReferenceTableLookup sysReferenceTableLookup;
            
                QueryBuildDataSource    queryBuildDataSource;
                Query                   query = new Query();
                sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMResourceSchedulingTypeCode), _formReferenceControl, true);
            
                queryBuildDataSource = query.addDataSource(tableNum(HMResourceSchedulingTypeCode));
                queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, IsBlocked)).value(SysQuery::value(NoYes::No));
                queryBuildDataSource.addRange(fieldnum(HMResourceSchedulingTypeCode,AppointmentSubType)).value(SysQuery::value(HMAppointmentSubType::Pseudo));
                queryBuildDataSource.addRange(fieldnum(HMResourceSchedulingTypeCode,AppointmentSubType)).value(SysQuery::value(HMAppointmentSubType::Searchable));
            
                if(openMode == HMCaseType::OutPatient)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::OutPatient));
                }
                else if (openMode == HMCaseType::Surgery)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::Surgery));
                }
                else if (openMode == HMCaseType::Physiotherapy)
                {
                    queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::Physiotherapy));
                }
            
                queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(HMResourceMasterScheduleType));
                queryBuildDataSource.relations(true);
                queryBuildDataSource.addRange(fieldNum(HMResourceMasterScheduleType, HMResourceMaster)).value(SysQuery::value(HMResourceSchedulingPlanningObject.HMResourceMaster));
            
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Code));
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Description));
                sysReferenceTableLookup.parmQuery(query);
            
                ret = sysReferenceTableLookup.performFormLookup();
            
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingWeekPlan</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;
            List    apptList;
        
            ret = super();
        
            if(ret)
            {
                apptList = HMResourceSchedulingHelper::checkAppointmentExistByWeekPlan(HMResourceSchedulingPlanningObject.RecId, HMResourceSchedulingWeekPlan.RecId);
        
                if(apptList.elements() > 0)
                {
                    if(Box::yesNo("@MAZ12527", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                    {
                        ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            HMResourceSchedulingDayPlan         hmResourceSchedulingDayPlanLocal;
        
            if(HMResourceSchedulingPlanningObject.RecId==0)
            {
                 warning("@MAZ2641");
            }
            else
            {
                select count(RecId) from hmResourceSchedulingDayPlanLocal
                    where hmResourceSchedulingDayPlanLocal.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                if(hmResourceSchedulingDayPlanLocal.RecId > 0)
                {
                    Day1.enabled(true);
                    Day2.enabled(true);
                    Day3.enabled(true);
                    Day4.enabled(true);
                    Day5.enabled(true);
                    Day6.enabled(true);
                    Day7.enabled(true);
        
                    Day1.text("");
                    Day2.text("");
                    Day3.text("");
                    Day4.text("");
                    Day5.text("");
                    Day6.text("");
                    Day7.text("");
        
                    dayPlan1=0;
                    dayPlan2=0;
                    dayPlan3=0;
                    dayPlan4=0;
                    dayPlan5=0;
                    dayPlan6=0;
                    dayPlan7=0;
        
                    isDayPlanAssignModified = false;
        
                    GenerateMenuItemButton.enabled(false);
                    CopyDropDialogButton.enabled(false);
        
                    super(_append);
                }
                else
                {
                    warning("@MAZ3217");
                }
        
        
            }
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
        
          /*  if(HMResourceSchedulingWeekPlan.RecId==0)
            {
                Day1.enabled(false);
                Day2.enabled(false);
                Day3.enabled(false);
                Day4.enabled(false);
                Day5.enabled(false);
                Day6.enabled(false);
                Day7.enabled(false);
            }
            else
            {
                Day1.enabled(true);
                Day2.enabled(true);
                Day3.enabled(true);
                Day4.enabled(true);
                Day5.enabled(true);
                Day6.enabled(true);
                Day7.enabled(true);
            }*/
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
        
            if(HMResourceSchedulingWeekPlan.RecId==0)
            {
                Day1.enabled(false);
                Day2.enabled(false);
                Day3.enabled(false);
                Day4.enabled(false);
                Day5.enabled(false);
                Day6.enabled(false);
                Day7.enabled(false);
        
                Day1.text("");
                Day2.text("");
                Day3.text("");
                Day4.text("");
                Day5.text("");
                Day6.text("");
                Day7.text("");
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            HMResourceSchedulingWeekDayPlan             hmResourceSchedulingWeekDayPlan;
            int ret;
        
            ret = super();
        
            if(ret)
            {
                isDayPlanAssignModified = false;
        
                if(HMResourceSchedulingWeekPlan.RecId)
                {
                    if(HMResourceSchedulingWeekPlan.IsGenerated==NoYes::Yes)
                    {
                        GenerateMenuItemButton.enabled(false);
        
                        if(HMResourceSchedulingWeekPlanToCalender.RecId)
                        {
                            CopyDropDialogButton.enabled(true);
                        }
                        else
                        {
                            CopyDropDialogButton.enabled(false);
                        }
                    }
                    else
                    {
                        GenerateMenuItemButton.enabled(true);
        
                        CopyDropDialogButton.enabled(false);
                    }
        
                    Day1.enabled(true);
                    Day2.enabled(true);
                    Day3.enabled(true);
                    Day4.enabled(true);
                    Day5.enabled(true);
                    Day6.enabled(true);
                    Day7.enabled(true);
                }
        
                if(isWeekNewRecord == false)
                {
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan == HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days == 1;
        
                    if (hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan1=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day1.text(element.getDayPlan(dayPlan1));
                    }
                    else
                    {
                        dayPlan1=0;
                        Day1.text("");
                    }
        
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days==2;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan2=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day2.text(element.getDayPlan(dayPlan2));
                    }
                    else
                    {
                        dayPlan2=0;
                        Day2.text("");
                    }
        
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days==3;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan3=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day3.text(element.getDayPlan(dayPlan3));
                    }
                    else
                    {
                        dayPlan3=0;
                        Day3.text("");
                    }
        
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days==4;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan4=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day4.text(element.getDayPlan(dayPlan4));
                    }
                    else
                    {
                        dayPlan4=0;
                        Day4.text("");
                    }
        
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days==5;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan5=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day5.text(element.getDayPlan(dayPlan5));
                    }
                    else
                    {
                        dayPlan5=0;
                        Day5.text("");
                    }
        
                    select hmResourceSchedulingWeekDayPlan where
                    hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                    && hmResourceSchedulingWeekDayPlan.Days==6;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan6=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day6.text(element.getDayPlan(dayPlan6));
                    }
                    else
                    {
                        dayPlan6=0;
                        Day6.text("");
                    }
        
                    select * from hmResourceSchedulingWeekDayPlan
                        where hmResourceSchedulingWeekDayPlan.HMResourceSchedulingWeekPlan == HMResourceSchedulingWeekPlan.RecId
                            && hmResourceSchedulingWeekDayPlan.Days == 7;
        
                    if(hmResourceSchedulingWeekDayPlan.RecId)
                    {
                        dayPlan7=hmResourceSchedulingWeekDayPlan.HMResourceSchedulingDayPlan;
                        Day7.text(element.getDayPlan(dayPlan7));
                    }
                    else
                    {
                        dayPlan7=0;
                        Day7.text("");
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            HMResourceSchedulingWeekPlan                hmResourceSchedulingWeekPlanlocal;
            HMResourceSchedulingWeekPlanToCalender      hmResourceSchedulingWeekPlanToCalenderLocal;
            DialogButton        dialogButton;
            List yearExistList;
            ListEnumerator enumr;
            List apptList = new List(Types::Int64);
            str yearNums = "", weekNum = "", weekPlan ="";
        
            ret = super();
        
            copyToDelete = false;
        
            if(Day1.valueStr() == "")
            {
                dayPlan1=0;
            }
            if(Day2.valueStr() == "")
            {
                dayPlan2=0;
            }
            if(Day3.valueStr() == "")
            {
                dayPlan3=0;
            }
            if(Day4.valueStr() == "")
            {
                dayPlan4=0;
            }
            if(Day5.valueStr() == "")
            {
                dayPlan5=0;
            }
            if(Day6.valueStr() == "")
            {
                dayPlan6=0;
            }
            if(Day7.valueStr() == "")
            {
                dayPlan7=0;
            }
        
            if(dayPlan1==0 && dayPlan2==0 && dayPlan3==0 && dayPlan4==0 && dayPlan5==0 && dayPlan6==0 && dayPlan7==0)
            {
                warning("@MAZ2131");
                ret=false;
            }
        
        
            if(ret && HMResourceSchedulingWeekPlan.isNewRecord())
            {
                if(HMResourceSchedulingWeekPlan.WeekNumber < 1 || HMResourceSchedulingWeekPlan.WeekNumber > 52)
                {
                    warning(strfmt("@MAZ2132",1,52));
                    ret=false;
                }
                if(HMResourceSchedulingWeekPlan.FromYear < year(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())))
                {
                    warning("@MAZ2133");
                    ret=false;
                }
                if(HMResourceSchedulingWeekPlan.ToYear < year(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())))
                {
                    warning("@MAZ2134");
                    ret=false;
                }
                if(HMResourceSchedulingWeekPlan.FromYear > HMResourceSchedulingWeekPlan.ToYear)
                {
                    warning("@MAZ2135");
                    ret=false;
                }
            }
        
            if(ret && HMResourceSchedulingWeekPlan.isNewRecord())
            {
                select count(recId) from hmResourceSchedulingWeekPlanlocal
                where hmResourceSchedulingWeekPlanlocal.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId
                && hmResourceSchedulingWeekPlanlocal.WeekNumber==HMResourceSchedulingWeekPlan.WeekNumber
                && ((HMResourceSchedulingWeekPlan.FromYear >= hmResourceSchedulingWeekPlanlocal.FromYear && HMResourceSchedulingWeekPlan.FromYear <=hmResourceSchedulingWeekPlanlocal.ToYear)
                || (HMResourceSchedulingWeekPlan.ToYear >= hmResourceSchedulingWeekPlanlocal.FromYear && HMResourceSchedulingWeekPlan.ToYear <=hmResourceSchedulingWeekPlanlocal.ToYear)
                || (hmResourceSchedulingWeekPlanlocal.FromYear >= HMResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanlocal.FromYear <=HMResourceSchedulingWeekPlan.ToYear)
                || (hmResourceSchedulingWeekPlanlocal.ToYear >= HMResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanlocal.ToYear <=HMResourceSchedulingWeekPlan.ToYear));
        
                if(hmResourceSchedulingWeekPlanlocal.RecId > 0)
                {
                    warning("@MAZ2136");
                    ret=false;
                }
        
                if(ret)
                {
                    yearExistList = new List(Types::Integer);
                    copyToDelete = false;
                    copyDelete = new List(Types::Int64);
        
                    while select * from hmResourceSchedulingWeekPlanlocal
                        join * from hmResourceSchedulingWeekPlanToCalenderLocal
                        where hmResourceSchedulingWeekPlanlocal.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId
                        && hmResourceSchedulingWeekPlanlocal.RecId == hmResourceSchedulingWeekPlanToCalenderLocal.HMResourceSchedulingWeekPlan
                        && hmResourceSchedulingWeekPlanToCalenderLocal.WeekNo == HMResourceSchedulingWeekPlan.WeekNumber
                        && (hmResourceSchedulingWeekPlanToCalenderLocal.YearNo >= HMResourceSchedulingWeekPlan.FromYear && hmResourceSchedulingWeekPlanToCalenderLocal.YearNo <= HMResourceSchedulingWeekPlan.ToYear)
                    {
                        copyDelete.addEnd(hmResourceSchedulingWeekPlanToCalenderLocal.RecId);
        
                        yearExistList.addEnd(hmResourceSchedulingWeekPlanToCalenderLocal.YearNo);
                        weekNum = int2str(hmResourceSchedulingWeekPlanToCalenderLocal.WeekNo);
                    }
        
                    if(yearExistList.elements() > 0)
                    {
                        //warning("@MAZ3216");
                        //ret=false;
        
                        if(yearExistList.elements() == 1)
                        {
                            enumr = yearExistList.getEnumerator();
                            enumr.moveNext();
        
                            dialogButton = Box::yesNo(strFmt("@MAZ3329",weekNum,enumr.current()),DialogButton::No, "@SYS301622");
                            if(dialogButton == DialogButton::No)
                            {
                                copyToDelete = false;
                                ret = false;
                            }
                            else
                            {
                                copyToDelete = true;
                            }
                        }
                        else if(yearExistList.elements() > 1)
                        {
                            enumr = yearExistList.getEnumerator();
        
                            while(enumr.moveNext())
                            {
                                if(yearNums == "")
                                {
                                    yearNums = enumr.current();
                                }
                                else
                                {
                                    yearNums += strFmt(', %1',enumr.current());
                                }
                            }
        
                            dialogButton = Box::yesNo(strFmt("@MAZ3330",weekNum,yearNums),DialogButton::No, "@SYS301622");
                            if(dialogButton == DialogButton::No)
                            {
                                copyToDelete = false;
                                ret = false;
                            }
                            else
                            {
                                copyToDelete = true;
                            }
                        }
                    }
                }
            }
        
            if(ret && (HMResourceSchedulingPlanningObject.CaseType == HMCaseType::OutPatient || HMResourceSchedulingPlanningObject.CaseType == HMCaseType::Surgery))
            {
                ret = element.checkTimeSlotOverlappingForWeekPlan();
        
                if(ret)
                {
                     ret = element.checkTimeSlotOverlappingForWeekCalendar();
                }
            }
        
        
            if(ret)
            {
                apptList.appendList(element.validateExistappointment(1, dayPlan1));
                apptList.appendList(element.validateExistappointment(2, dayPlan2));
                apptList.appendList(element.validateExistappointment(3, dayPlan3));
                apptList.appendList(element.validateExistappointment(4, dayPlan4));
                apptList.appendList(element.validateExistappointment(5, dayPlan5));
                apptList.appendList(element.validateExistappointment(6, dayPlan6));
                apptList.appendList(element.validateExistappointment(7, dayPlan7));
        
                if(apptList.elements() > 0)
                {
                    if(Box::yesNo("@MAZ12525", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                    {
                        ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            HMResourceSchedulingWeekDayPlan             hmResourceSchedulingWeekDayPlanlocal;
            HMResourceSchedulingWeekDayPlan             hmResourceSchedulingWeekDayPlanDelete;
            HMResourceSchedulingWeekPlanToCalender      hmResourceSchedulingWeekPlanToCalenderDelete;
            ListEnumerator enumr;
        
            if(HMResourceSchedulingWeekPlan.isNewRecord())
            {
                isWeekNewRecord = true;
            }
        
            super();
        
            if(copyToDelete && HMResourceSchedulingWeekPlan.RecId)
            {
                enumr = copyDelete.getEnumerator();
        
                while(enumr.moveNext())
                {
                    ttsBegin;
        
                    hmResourceSchedulingWeekPlanToCalenderDelete = HMResourceSchedulingWeekPlanToCalender::find(enumr.current(), true);
                    hmResourceSchedulingWeekPlanToCalenderDelete.delete();
        
                    ttsCommit;
                }
        
                copyToDelete = false;
                copyDelete = new List(Types::Int64);
            }
        
            ttsBegin;
        
            if(dayPlan1!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==1;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan1;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan1;
                    hmResourceSchedulingWeekDayPlanlocal.Days=1;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==1;
            }
        
            if(dayPlan2!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==2;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan2;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan2;
                    hmResourceSchedulingWeekDayPlanlocal.Days=2;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==2;
            }
        
            if(dayPlan3!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==3;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan3;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan3;
                    hmResourceSchedulingWeekDayPlanlocal.Days=3;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==3;
            }
        
        
            if(dayPlan4!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==4;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan4;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan4;
                    hmResourceSchedulingWeekDayPlanlocal.Days=4;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==4;
            }
        
            if(dayPlan5!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==5;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan5;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan5;
                    hmResourceSchedulingWeekDayPlanlocal.Days=5;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==5;
            }
        
            if(dayPlan6!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==6;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan6;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan6;
                    hmResourceSchedulingWeekDayPlanlocal.Days=6;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==6;
            }
        
            if(dayPlan7!=0)
            {
                select forUpdate hmResourceSchedulingWeekDayPlanlocal
                where hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanlocal.Days==7;
        
                if(hmResourceSchedulingWeekDayPlanlocal.RecId)
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan7;
                    hmResourceSchedulingWeekDayPlanlocal.update();
                }
                else
                {
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingWeekPlan=HMResourceSchedulingWeekPlan.RecId;
                    hmResourceSchedulingWeekDayPlanlocal.HMResourceSchedulingDayPlan=dayPlan7;
                    hmResourceSchedulingWeekDayPlanlocal.Days=7;
                    hmResourceSchedulingWeekDayPlanlocal.insert();
                }
            }
            else
            {
                delete_from hmResourceSchedulingWeekDayPlanDelete
                where hmResourceSchedulingWeekDayPlanDelete.HMResourceSchedulingWeekPlan==HMResourceSchedulingWeekPlan.RecId
                && hmResourceSchedulingWeekDayPlanDelete.Days==7;
            }
        
            ttsCommit;
        
            if(isWeekNewRecord)
            {
                isWeekNewRecord = false;
                HMResourceSchedulingWeekPlan_ds.active();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingWeekPlanToCalender</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;
            List    apptList;
        
            ret = super();
        
            if(ret)
            {
                apptList = HMResourceSchedulingHelper::checkAppointmentExistByCalendarWeek(HMResourceSchedulingPlanningObject.RecId, HMResourceSchedulingWeekPlanToCalender.RecId);
        
                if(apptList.elements() > 0)
                {
                    if(Box::yesNo("@MAZ12522", DialogButton::Yes, "@SYS4006395") == DialogButton::Yes)
                    {
                        ret = HMResourceSchedulingHelper::markedApptReschedule(apptList);
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.query().dataSourceTable(tablenum(HMResourceSchedulingWeekPlanToCalender)).addSortField(fieldNum(HMResourceSchedulingWeekPlanToCalender, WeekNo), SortOrder::Ascending);
            this.query().dataSourceTable(tablenum(HMResourceSchedulingWeekPlanToCalender)).addSortField(fieldNum(HMResourceSchedulingWeekPlanToCalender, YearNo), SortOrder::Ascending);
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            boolean isRecordExist=true;
            recid    tempRecid;
        
            if(HMResourceSchedulingWeekPlanToCalender.RecId==0)
            {
                isRecordExist = false;
            }
        
            super();
        
            tempRecid = HMResourceSchedulingWeekPlan.RecId;
        
            HMResourceSchedulingWeekPlan_ds.executeQuery();
            HMResourceSchedulingWeekPlan_ds.positionToRecord(HMResourceSchedulingWeekPlan::find(tempRecid));
        
            if(isRecordExist)
            {
                if(HMResourceSchedulingWeekPlanToCalender.RecId==0)
                {
                    CopyDropDialogButton.enabled(false);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingDayPlanItemInPatient</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if(HMResourceSchedulingDayPlan.RecId==0)
            {
                 warning("@MAZ2453");
            }
            else
            {
                super(_append);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>HMResourceSchedulingTypeCode</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                SysReferenceTableLookup sysReferenceTableLookup;
            
                QueryBuildDataSource    queryBuildDataSource;
                Query                   query = new Query();
                sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMResourceSchedulingTypeCode), _formReferenceControl, true);
            
                queryBuildDataSource = query.addDataSource(tableNum(HMResourceSchedulingTypeCode));
                queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, IsBlocked)).value(SysQuery::value(NoYes::No));
                queryBuildDataSource.addRange(fieldNum(HMResourceSchedulingTypeCode, CaseType)).value(SysQuery::value(HMCaseType::InPatient));
            
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Code));
                sysReferenceTableLookup.addLookupfield(fieldNum(HMResourceSchedulingTypeCode, Description));
                sysReferenceTableLookup.parmQuery(query);
            
                ret = sysReferenceTableLookup.performFormLookup();
            
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ResourceMasterRefGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                HMResourceSchedulingPlanningObject.HMOrganizationalUnit = 0;
                HMResourceSchedulingPlanningObject.HMBuildingUnit = 0;
                BldUnit.text('');
        
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMResourceSchedulingPlanningObject_HMOrganizationalUnit</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HMOrganizationalUnit                HMOrganizationalUnit;
            HMResourceOrganizationalUnit        HMResourceOrganizationalUnit;
            ret = super();
            if(ret)
            {
                HMResourceSchedulingPlanningObject.HMOrganizationalUnit = HMResourceSchedulingHelper::findOUByResource(this.value(),HMResourceSchedulingPlanningObject.HMResourceMaster);
                if(HMResourceSchedulingPlanningObject.HMOrganizationalUnit != 0)
                {
                    element.setOrganizationUnitID();
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BldUnit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMPlanningObjectBuildingUnitLookupNew));
            args.caller(element);
            args.parm(int642str(HMResourceSchedulingPlanningObject.HMOrganizationalUnit)+','+int642str(HMResourceSchedulingPlanningObject.HMBuildingUnit));
            //args.parmEnum(HMResourceSchedulingPlanningObject_Category.selection());
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMBuildingUnit                  hmBuildingUnitLocal;
            HMOrganizationalBuildingUnit    hmOrganizationalBuildingUnitLocal;
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if (this.text() != "")
                {
                    select * from hmBuildingUnitLocal
                        join * from hmOrganizationalBuildingUnitLocal
                            where hmBuildingUnitLocal.RecId == hmOrganizationalBuildingUnitLocal.HMBuildingUnit
                            && hmOrganizationalBuildingUnitLocal.HMOrganizationalUnit == HMResourceSchedulingPlanningObject.HMOrganizationalUnit
                            && hmBuildingUnitLocal.Description == this.text();
        
                    if (hmBuildingUnitLocal.RecId)
                    {
                        HMResourceSchedulingPlanningObject.HMBuildingUnit = hmBuildingUnitLocal.RecId;
                    }
                    else
                    {
                        warning(strFmt("@SYS316757","@MAZ1970"));
                        BldUnit.text(HMBuildingUnit::find(HMResourceSchedulingPlanningObject.HMBuildingUnit).Description);
                    }
                }
                else
                {
                     HMResourceSchedulingPlanningObject.HMBuildingUnit = 0;
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OverbookAllowed</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if(!this.checked())
                {
                    element.setOverBookink(false);
                }
                else
                {
                    element.setOverBookink(true);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeSlots_StartTime</Name>
				<Type>Time</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if(ret)
            {
                element.setTimeSlots();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeSlots_EndTime</Name>
				<Type>Time</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if(ret)
            {
                element.setTimeSlots();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ArrivalTime</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            if(this.text() && !HMResourceSchedulingHelper::validateTime(this.text()))
            {
                ret = false;
        
                checkFailed("@MAZ11906");
            }
            else
            {
                ret = super();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduleReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if(ret)
            {
                element.setTimeSlots();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AvalilableTimeSlots_NumberOfTimeSlots</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
        
                element.setSlotsOffline();
        
                HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments    = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
                HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments   = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMResourceSchedulingDayPlanItemOutPatient_PercentOnlineAppointment</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
              //  HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments = real2int(System.Math::Floor((HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
                if (this.realValue() <= 100)
                {
                    element.setSlotsOffline();
        
                    HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments        = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment = 100 - this.realValue();
                    HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments       = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMResourceSchedulingDayPlanItemOutPatient_OnlineAppointments</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
        
                //HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment = (HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments / HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots) * 100;
                if (this.value() <= slotsOnlineOffline)// HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots)
                {
        
                    element.setSlotsOffline();
        
        
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment  = (HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments / slotsOnlineOffline) * 100;
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment = 100 - HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment;
                    HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments       = slotsOnlineOffline - this.value();
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMResourceSchedulingDayPlanItemOutPatient_PercentOfflineAppointment</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
               // HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments = real2int(System.Math::Ceiling((HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
                if (this.realValue() <= 100)
                {
                    element.setSlotsOffline();
        
                    HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments       = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment  = 100 - this.realValue();
                    HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments        = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMResourceSchedulingDayPlanItemOutPatient_OfflineAppointments</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
               // HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment = (HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments / HMResourceSchedulingDayPlanItemOutPatient.NumberOfTimeSlots) * 100;
                if (this.value() <=  slotsOnlineOffline)
                {
                    element.setSlotsOffline();
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment = (HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments / slotsOnlineOffline) * 100;
                    HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment  = 100 - HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment;
                    HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments        = slotsOnlineOffline - this.value();
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeSlots_NumberOfOverBookings</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
                if (ret)
                {
                    element.setSlotsOffline();
                    HMResourceSchedulingDayPlanItemOutPatient.OnlineAppointments    = real2int(System.Math::Floor((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOnlineAppointment));
                    HMResourceSchedulingDayPlanItemOutPatient.OfflineAppointments   = real2int(System.Math::Ceiling((slotsOnlineOffline / 100) * HMResourceSchedulingDayPlanItemOutPatient.PercentOfflineAppointment));
        
                }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SaveButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            HMResourceSchedulingWeekPlan_ds.write();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WeekPlan_WeekNumber</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMSysDateLookUp));
            args.caller(element);
        
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('1,'+int642str(dayPlan1));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day1.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day1.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan1 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day1.text(element.getDayPlan(dayPlan1));
                    }
                }
                else
                {
                    dayPlan1 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day2</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('2,'+int642str(dayPlan2));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day2.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day2.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan2 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day2.text(element.getDayPlan(dayPlan2));
                    }
                }
                else
                {
                    dayPlan2 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day3</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('3,'+int642str(dayPlan3));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day3.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day3.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan3 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day3.text(element.getDayPlan(dayPlan3));
                    }
                }
                else
                {
                    dayPlan3 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day4</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('4,'+int642str(dayPlan4));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day4.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day4.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan4 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day4.text(element.getDayPlan(dayPlan4));
                    }
                }
                else
                {
                    dayPlan4 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day5</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('5,'+int642str(dayPlan5));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day5.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day5.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan5 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day5.text(element.getDayPlan(dayPlan5));
                    }
                }
                else
                {
                    dayPlan5 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day6</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('6,'+int642str(dayPlan6));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day6.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day6.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan6 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day6.text(element.getDayPlan(dayPlan6));
                    }
                }
                else
                {
                    dayPlan6 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Day7</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMResourceSchedulingDayPlanLookUp));
            args.caller(element);
            args.record(HMResourceSchedulingPlanningObject);
            args.parm('7,'+int642str(dayPlan7));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMResourceSchedulingDayPlan     hmResourceSchedulingDayPlanTemp;
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                if(Day7.valueStr() !="")
                {
                    if(fromLookup)
                    {
                        fromLookup = false;
                    }
                    else
                    {
                        select * from hmResourceSchedulingDayPlanTemp
                            where hmResourceSchedulingDayPlanTemp.Description == Day7.valueStr()
                            && hmResourceSchedulingDayPlanTemp.HMResourceSchedulingPlanningObject == HMResourceSchedulingPlanningObject.RecId;
        
                        if(hmResourceSchedulingDayPlanTemp.RecId)
                        {
                            dayPlan7 = hmResourceSchedulingDayPlanTemp.RecId;
                            isDayPlanAssignModified = true;
                        }
                        else
                        {
                            warning(strFmt("@SYS316757","@MAZ1704"));
                        }
        
                        Day7.text(element.getDayPlan(dayPlan7));
                    }
                }
                else
                {
                    dayPlan7 = 0;
                    isDayPlanAssignModified = true;
                }
        
                //HMResourceSchedulingWeekPlan_ds.write();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObject</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingDayPlan</Name>
			<Table>HMResourceSchedulingDayPlan</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayStartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingPlanningObject</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingDayPlanItemOutPatient</Name>
			<Table>HMResourceSchedulingDayPlanItem</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdmissionQuota</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenderPreference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMSpecialtyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfOverBookings</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfTimeSlots</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OfflineAppointments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnlineAppointments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentOfflineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentOnlineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingDayPlan</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingWeekPlan</Name>
			<Table>HMResourceSchedulingWeekPlan</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WeekNumber</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingPlanningObject</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingWeekPlanToCalender</Name>
			<Table>HMResourceSchedulingWeekPlanToCalender</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingWeekPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WeekNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>YearNo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingWeekPlan</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingDayPlanItemInPatient</Name>
			<Table>HMResourceSchedulingDayPlanItem</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdmissionQuota</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMSpecialtyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsNoWoman</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfOverBookings</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfTimeSlots</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OfflineAppointments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnlineAppointments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentOfflineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentOnlineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingDayPlan</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS89158</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">HMResourceSchedulingPlanningObject</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RecordBasics</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>DropDialogButton</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>HMResourceSchedPlanningObjectCopyDialog</MenuItemName>
										<Text>@SYS40266</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HMResourceSchedulingPlanningObject_Code</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Code</DataField>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HMResourceSchedulingPlanningObject_Description</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>HMResourceSchedulingPlanningObject</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
						<VisibleRows>15</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupDetails</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HMResourceSchedulingPlanningObject_Code1</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Code</DataField>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HMResourceSchedulingPlanningObject_Description1</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>HMResourceSchedulingPlanningObject_PlanningObjectStatus</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>PlanningObjectStatus</DataField>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<Caption>@SYS318405</Caption>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CategoryValidity</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCategory</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingPlanningObject_Category</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Category</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>ResourceMasterRefGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<ReferenceField>HMResourceMaster</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMResourceSchedulingPlanningObject_HMOrganizationalUnit</Name>
												<ElementPosition>1193046470</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<ReferenceField>HMOrganizationalUnit</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BldUnit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ2003</HelpText>
												<NeededPermission>Manual</NeededPermission>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@MAZ1970</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<Caption>@SYS14719</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupValidity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>HMResourceSchedulingPlanningObject_StartDate</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>StartDate</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<LookupButton>Always</LookupButton>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>HMResourceSchedulingPlanningObject_EndDate</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>EndDate</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<LookupButton>Always</LookupButton>
											</AxFormControl>
										</Controls>
										<Caption>@SYS35164</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Parameter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>HMResourceSchedulingPlanningObject_SearchInterval</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>SearchInterval</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>CheckBox</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ScheduleOnPublicHoliday</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>OverbookAllowed</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OverbookAllowed</DataField>
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>DefaultScheduleType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject</DataSource>
												<ReferenceField>DefaultScheduleType</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>HotSpot</Name>
												<ConfigurationKey>MZKTemp</ConfigurationKey>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>HMResourceSchedulingPlanningObject_HotSpotValue</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Integer</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>HotSpotValue</DataField>
														<DataSource>HMResourceSchedulingPlanningObject</DataSource>
														<Label>@MAZ12580</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>HMResourceSchedulingPlanningObject_HotSpotType</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>HotSpotType</DataField>
														<DataSource>HMResourceSchedulingPlanningObject</DataSource>
														<Label>@MAZ12585</Label>
														<Items />
													</AxFormControl>
												</Controls>
												<Columns>2</Columns>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7755</Caption>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DaysPlanTabPage</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DayNew</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DayDelete</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDropDialogButtonControl">
														<Name>DropDialogCopyDayPlan</Name>
														<ElementPosition>1879048189</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>DropDialogButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>HMResourceSchedulingDayPlan</DataSource>
														<MenuItemName>HMResourceSchedulingCopyDayPlan</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@SYS40266</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>HMResourceSchedulingDayPlan</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DaysPlanBody</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GridContainer1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>DaysPlanGrid</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToContent</HeightMode>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToContent</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMResourceSchedulingDayPlan_Code</Name>
														<ElementPosition>715827882</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Code</DataField>
														<DataSource>HMResourceSchedulingDayPlan</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMResourceSchedulingDayPlan_Description</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Description</DataField>
														<DataSource>HMResourceSchedulingDayPlan</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTimeControl">
														<Name>DayPlan_DayStartTime</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Time</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>DayStartTime</DataField>
														<DataSource>HMResourceSchedulingDayPlan</DataSource>
														<Label>@SYS38489</Label>
														<TimeSeconds>No</TimeSeconds>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTimeControl">
														<Name>DayPlan_DayEndTime</Name>
														<ElementPosition>1789569705</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Time</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>DayEndTime</DataField>
														<DataSource>HMResourceSchedulingDayPlan</DataSource>
														<Label>@SYS38490</Label>
														<TimeSeconds>No</TimeSeconds>
													</AxFormControl>
												</Controls>
												<AlternateRowShading>No</AlternateRowShading>
												<DataSource>HMResourceSchedulingDayPlan</DataSource>
												<MultiSelect>No</MultiSelect>
												<ShowRowLabels>No</ShowRowLabels>
												<VisibleRows>3</VisibleRows>
												<VisibleRowsMode>Fixed</VisibleRowsMode>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group1</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>TimeSlotsTab</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Tab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToContent</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>TimeSlots</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>TabPage</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>CopyOfActionPane11</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPane</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneTabControl">
																<Name>CopyOfActionPaneTab3</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ActionPaneTab</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>CopyOfButtonGroup2</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ButtonGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>TimeNew</Name>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>New</Command>
																				<NormalImage>New</NormalImage>
																				<Primary>Yes</Primary>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>TimeDelete</Name>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>DeleteRecord</Command>
																				<NeedsRecord>Yes</NeedsRecord>
																				<NormalImage>Delete</NormalImage>
																				<Primary>Yes</Primary>
																				<SaveRecord>No</SaveRecord>
																				<Text>@SYS14425</Text>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>Vertical</ArrangeMethod>
																		<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<AlignChildren>No</AlignChildren>
																<ArrangeMethod>Vertical</ArrangeMethod>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Style>Strip</Style>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>TimeSlotsBody</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>GridContainer11</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>SizeToAvailable</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>GridTimeSlots</Name>
																		<AllowEdit>No</AllowEdit>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormTimeControl">
																				<Name>HMResourceSchedulingAvalilableTimeSlots_StartTime</Name>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Time</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>StartTime</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@SYS38489</Label>
																				<TimeSeconds>No</TimeSeconds>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormTimeControl">
																				<Name>HMResourceSchedulingAvalilableTimeSlots_EndTime</Name>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Time</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>EndTime</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@SYS38490</Label>
																				<TimeSeconds>No</TimeSeconds>
																			</AxFormControl>
																		</Controls>
																		<AlternateRowShading>No</AlternateRowShading>
																		<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																		<MultiSelect>No</MultiSelect>
																		<ShowRowLabels>No</ShowRowLabels>
																		<VisibleRows>5</VisibleRows>
																		<VisibleRowsMode>Fixed</VisibleRowsMode>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>TSVSplitter</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<FramePosition>Inside</FramePosition>
																<Style>SplitterVerticalContainer</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>GrDetailsContainer11</Name>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGroupControl">
																		<Name>TimeInterval</Name>
																		<ElementPosition>244032232</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Group</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormTimeControl">
																				<Name>TimeSlots_StartTime</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Time</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>StartTime</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@SYS38489</Label>
																				<TimeSeconds>No</TimeSeconds>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormTimeControl">
																				<Name>TimeSlots_EndTime</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Time</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>EndTime</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@SYS38490</Label>
																				<TimeSeconds>No</TimeSeconds>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>HorizontalLeft</ArrangeMethod>
																		<Caption>@SYS36034</Caption>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormGroupControl">
																		<Name>Group3</Name>
																		<ElementPosition>366048348</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Group</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ArrivalTime</Name>
																				<ElementPosition>488064465</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ11148</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>arrivalTime</DataMethod>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@MAZ11147</Label>
																				<LimitText>8</LimitText>
																				<LimitTextMode>Fixed</LimitTextMode>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMResourceSchedulingDayPlanItemOutPatient_GenderPreference</Name>
																				<Type>ComboBox</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>GenderPreference</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>Gender Preference</Label>
																				<Selection>2</Selection>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCheckBoxControl">
																				<Name>HMResourceSchedulingDayPlanItemOutPatient_IsHotspot</Name>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CheckBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>IsHotspot</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>HorizontalLeft</ArrangeMethod>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormGroupControl">
																		<Name>GroupWeekDetails</Name>
																		<Type>Group</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>ScheduleReferenceGroup</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>585677358</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@MAZ7340</Label>
																				<ReferenceField>HMResourceSchedulingTypeCode</ReferenceField>
																				<ReplacementFieldGroup>Description</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>DeptTimeSlot</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>780903144</ElementPosition>
																				<Enabled>No</Enabled>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ2105</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Label>@SYS179634</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>OrgTimeSlot</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>976128930</ElementPosition>
																				<Enabled>No</Enabled>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ2104</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Label>@MAZ2481</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>BldTimeSlot</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1171354716</ElementPosition>
																				<Enabled>No</Enabled>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ2117</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Label>@MAZ1970</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PhyTimeSlot</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1366580502</ElementPosition>
																				<Enabled>No</Enabled>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ2092</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Label>@MAZ65</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>SpecialityReferenceGroup</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1561806288</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ2100</HelpText>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<Label>@MAZ1706</Label>
																				<ReferenceField>HMSpecialtyCode</ReferenceField>
																				<ReplacementFieldGroup>Description</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>GroupTimeSlots</Name>
																				<ElementPosition>1757032074</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Group</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormIntegerControl">
																						<Name>AvalilableTimeSlots_NumberOfTimeSlots</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>858993458</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<HelpText>@MAZ2116</HelpText>
																						<Type>Integer</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>NumberOfTimeSlots</DataField>
																						<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																						<ShowZero>No</ShowZero>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormGroupControl">
																						<Name>Online</Name>
																						<ElementPosition>1288490187</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>Group</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<Visible>No</Visible>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<Controls>
																							<AxFormControl xmlns=""
																								i:type="AxFormRealControl">
																								<Name>HMResourceSchedulingDayPlanItemOutPatient_PercentOnlineAppointment</Name>
																								<ElementPosition>1073741822</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>Real</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<AllowNegative>No</AllowNegative>
																								<DataField>PercentOnlineAppointment</DataField>
																								<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																								<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
																							</AxFormControl>
																							<AxFormControl xmlns=""
																								i:type="AxFormIntegerControl">
																								<Name>HMResourceSchedulingDayPlanItemOutPatient_OnlineAppointments</Name>
																								<ElementPosition>1610612734</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>Integer</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<AllowNegative>No</AllowNegative>
																								<DataField>OnlineAppointments</DataField>
																								<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																							</AxFormControl>
																						</Controls>
																						<Columns>2</Columns>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormGroupControl">
																						<Name>Offline</Name>
																						<ElementPosition>1717986916</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>Group</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<Visible>No</Visible>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<Controls>
																							<AxFormControl xmlns=""
																								i:type="AxFormRealControl">
																								<Name>HMResourceSchedulingDayPlanItemOutPatient_PercentOfflineAppointment</Name>
																								<ElementPosition>1073741822</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>Real</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<AllowNegative>No</AllowNegative>
																								<DataField>PercentOfflineAppointment</DataField>
																								<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																								<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
																							</AxFormControl>
																							<AxFormControl xmlns=""
																								i:type="AxFormIntegerControl">
																								<Name>HMResourceSchedulingDayPlanItemOutPatient_OfflineAppointments</Name>
																								<ElementPosition>1610612734</ElementPosition>
																								<FilterExpression>%1</FilterExpression>
																								<HeightMode>Auto</HeightMode>
																								<Type>Integer</Type>
																								<VerticalSpacing>-1</VerticalSpacing>
																								<WidthMode>Auto</WidthMode>
																								<FormControlExtension
																									i:nil="true" />
																								<AllowNegative>No</AllowNegative>
																								<DataField>OfflineAppointments</DataField>
																								<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																							</AxFormControl>
																						</Controls>
																						<Columns>2</Columns>
																					</AxFormControl>
																				</Controls>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>TimeSlots_NumberOfOverBookings</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1952257860</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>NumberOfOverBookings</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>ReferenceGroup1</Name>
																				<ElementPosition>2049870753</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMResourceSchedulingDayPlanItemOutPatient</DataSource>
																				<ReferenceField>Client</ReferenceField>
																				<ReplacementFieldGroup>Client</ReplacementFieldGroup>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>HorizontalLeft</ArrangeMethod>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<Columns>2</Columns>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<Caption>@MAZ2928</Caption>
												<Scrollbars>Auto</Scrollbars>
												<Style>DetailsFormDetails</Style>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<Style>FastTabs</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>ScheduleTypeTab</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Tab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToContent</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>ScheduleType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>TabPage</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>CopyOfActionPane12</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPane</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneTabControl">
																<Name>CopyOfActionPaneTab4</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ActionPaneTab</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>CopyOfButtonGroup3</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ButtonGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>CopyOfTimeNew</Name>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>New</Command>
																				<NormalImage>New</NormalImage>
																				<Primary>Yes</Primary>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>CopyOfTimeDelete</Name>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>DeleteRecord</Command>
																				<NeedsRecord>Yes</NeedsRecord>
																				<NormalImage>Delete</NormalImage>
																				<Primary>Yes</Primary>
																				<SaveRecord>No</SaveRecord>
																				<Text>@SYS14425</Text>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>Vertical</ArrangeMethod>
																		<DataSource>HMResourceSchedulingDayPlanItemInPatient</DataSource>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<AlignChildren>No</AlignChildren>
																<ArrangeMethod>Vertical</ArrangeMethod>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Style>Strip</Style>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>CopyOfTimeSlotsBody</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>GridContainerSchedultType</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>SizeToAvailable</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>CopyOfGridTimeSlots</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMResourceSchedulingDayPlanScheduleType_HMResourceSchedulingTypeCode</Name>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMResourceSchedulingDayPlanItemInPatient</DataSource>
																				<ReferenceField>HMResourceSchedulingTypeCode</ReferenceField>
																				<ReplacementFieldGroup>Description</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>HMResourceSchedulingDayPlanScheduleType_AdmissionQuota</Name>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>AdmissionQuota</DataField>
																				<DataSource>HMResourceSchedulingDayPlanItemInPatient</DataSource>
																			</AxFormControl>
																		</Controls>
																		<AlternateRowShading>No</AlternateRowShading>
																		<DataSource>HMResourceSchedulingDayPlanItemInPatient</DataSource>
																		<MultiSelect>No</MultiSelect>
																		<ShowRowLabels>No</ShowRowLabels>
																		<VisibleRows>5</VisibleRows>
																		<VisibleRowsMode>Fixed</VisibleRowsMode>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<Columns>3</Columns>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<Caption>@MAZ2516</Caption>
												<Scrollbars>Auto</Scrollbars>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<Style>FastTabs</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@MAZ2925</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>WeekPlanTabPage</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>CopyOfActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>CopyOfButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>WeekNew</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>WeekDelete</Name>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SaveButton</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@MAZ3857</HelpText>
														<NeededPermission>Create</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<ImageLocation>AOTResource</ImageLocation>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>HM_Save_encounter_16x16_png</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS12229</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<DataSource>HMResourceSchedulingWeekPlan</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WeekPlanBody</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GridContainer2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>WeekPlanGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMResourceSchedulingWeekPlan_Code</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Code</DataField>
														<DataSource>HMResourceSchedulingWeekPlan</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMResourceSchedulingWeekPlan_Description</Name>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Description</DataField>
														<DataSource>HMResourceSchedulingWeekPlan</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>HMResourceSchedulingWeekPlan_WeekNumber</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Integer</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>WeekNumber</DataField>
														<DataSource>HMResourceSchedulingWeekPlan</DataSource>
													</AxFormControl>
												</Controls>
												<AlternateRowShading>No</AlternateRowShading>
												<DataSource>HMResourceSchedulingWeekPlan</DataSource>
												<MultiSelect>No</MultiSelect>
												<ShowRowLabels>No</ShowRowLabels>
												<VisibleRows>3</VisibleRows>
												<VisibleRowsMode>Fixed</VisibleRowsMode>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>WPVSplitter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<FramePosition>Inside</FramePosition>
										<Style>SplitterVerticalContainer</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DetailsContainer2</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>DetailsHeader2</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>Details2</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>CodeDescription</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>WeekPlan_Code1</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>715827882</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Code</DataField>
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>WeekPlan_Description1</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1073741823</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Description</DataField>
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormIntegerControl">
																		<Name>WeekPlan_WeekNumber</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Integer</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>WeekNumber</DataField>
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@MAZ2932</Label>
																		<LimitText>2</LimitText>
																		<LimitTextMode>Fixed</LimitTextMode>
																		<ShowZero>No</ShowZero>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormGroupControl">
																		<Name>YearRange</Name>
																		<ElementPosition>1789569705</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Group</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>WeekPlan_FromYear</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1073741822</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>FromYear</DataField>
																				<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																				<Label>@SYS56304</Label>
																				<LimitText>4</LimitText>
																				<LimitTextMode>Fixed</LimitTextMode>
																				<ShowZero>No</ShowZero>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>WeekPlan_ToYear</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1610612733</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ToYear</DataField>
																				<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																				<Label>@SYS56303</Label>
																				<LimitText>4</LimitText>
																				<LimitTextMode>Fixed</LimitTextMode>
																				<ShowZero>No</ShowZero>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>HorizontalLeft</ArrangeMethod>
																		<Caption>@MAZ2930</Caption>
																	</AxFormControl>
																</Controls>
																<FrameType>None</FrameType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>DayPlanAssignment</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day1</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>477218588</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2113</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS5217</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day2</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>715827882</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2114</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS6713</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day3</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>954437176</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2115</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS6482</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day4</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1193046470</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2110</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS6714</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day5</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2111</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS7072</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day6</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1670265058</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2109</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS13051</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Day7</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1908874352</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@MAZ2112</HelpText>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																		<Label>@SYS13053</Label>
																	</AxFormControl>
																</Controls>
																<Caption>@MAZ2929</Caption>
															</AxFormControl>
														</Controls>
														<Columns>2</Columns>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>CalenderWeekTab</Name>
												<AlignControl>No</AlignControl>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Tab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>CalenderWeek</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>CopyOfActionPane22</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ActionPane</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormActionPaneTabControl">
																		<Name>CopyOfActionPaneTab2</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ActionPaneTab</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonGroupControl">
																				<Name>CopyOfButtonGroup1</Name>
																				<ElementPosition>1431655764</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ButtonGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormDropDialogButtonControl">
																						<Name>CopyDropDialogButton</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>858993458</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<HelpText>@MAZ2101</HelpText>
																						<Type>DropDialogButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<AutoRefreshData>Yes</AutoRefreshData>
																						<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																						<MenuItemName>HMCalenderWeekCopyMenuItem</MenuItemName>
																						<NeedsRecord>Yes</NeedsRecord>
																						<SaveRecord>No</SaveRecord>
																						<Text>@SYS40266</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>GenerateMenuItemButton</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>1288490187</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<HelpText>@MAZ3119</HelpText>
																						<Type>MenuFunctionButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataSource>HMResourceSchedulingWeekPlan</DataSource>
																						<MenuItemName>HMResourceSchedulingGenerateCalenderWeek</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<NeedsRecord>Yes</NeedsRecord>
																						<SaveRecord>No</SaveRecord>
																						<Text>@SYS26349</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormCommandButtonControl">
																						<Name>CalendarDelete</Name>
																						<ElementPosition>1717986916</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<HelpText>@MAZ3227</HelpText>
																						<Type>CommandButton</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<Command>DeleteRecord</Command>
																						<NeedsRecord>Yes</NeedsRecord>
																						<NormalImage>Delete</NormalImage>
																						<Primary>Yes</Primary>
																						<SaveRecord>No</SaveRecord>
																						<Text>@SYS14425</Text>
																					</AxFormControl>
																				</Controls>
																				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
																				<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																			</AxFormControl>
																		</Controls>
																		<AlignChild>No</AlignChild>
																		<AlignChildren>No</AlignChildren>
																		<ArrangeMethod>Vertical</ArrangeMethod>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<AlignChildren>No</AlignChildren>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<Style>Strip</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>Group_</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>Grid1</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>SizeToContent</HeightMode>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>HMResourceSchedulingWeekPlanToCalender_YearNo</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>715827882</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>YearNo</DataField>
																				<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																				<Label>@MAZ2933</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>HMResourceSchedulingWeekPlanToCalender_WeekNo</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>1073741823</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>WeekNo</DataField>
																				<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																				<Label>@MAZ2932</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>ReferenceGroup</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>1431655764</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																				<Label>@MAZ2934</Label>
																				<ReferenceField>HMResourceSchedulingWeekPlan</ReferenceField>
																				<ReplacementFieldGroup>Description</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMResourceSchedulingWeekPlanToCalender_Status</Name>
																				<ElementPosition>1789569705</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Status</DataField>
																				<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																				<Items />
																			</AxFormControl>
																		</Controls>
																		<AlternateRowShading>No</AlternateRowShading>
																		<DataSource>HMResourceSchedulingWeekPlanToCalender</DataSource>
																		<ShowRowLabels>No</ShowRowLabels>
																		<VisibleRows>3</VisibleRows>
																		<VisibleRowsMode>Fixed</VisibleRowsMode>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<Caption>@SYS32234</Caption>
														<Scrollbars>Auto</Scrollbars>
														<Style>DetailsFormDetails</Style>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
							</AxFormControl>
						</Controls>
						<Caption>@MAZ2926</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ArrangeWhen>Auto</ArrangeWhen>
				<BackgroundColor>WindowBackground</BackgroundColor>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>