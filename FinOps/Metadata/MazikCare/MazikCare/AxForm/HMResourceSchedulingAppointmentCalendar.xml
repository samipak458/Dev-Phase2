<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMResourceSchedulingAppointmentCalendar</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMResourceSchedulingAppointmentCalendar extends FormRun
{
    #define.ParmSeparator(',')


    HMResourceSchedulingAppointmentCalendar hmResourceSchedulingAppointmentCalendar;

    
    HMCalendarControl               scheduler;

    QueryBuildRange         qbrAppointmentsResource, qbrAppointmentsOrgUnit, qbrAppointmentsPlanObject,
                            qbrPlanningObject, qbrAppointment;

    String20                parmSlotSelectedDate, parmSlotSelectedTime, parmSlotSelectedEndTime, parmSlotScheduleTypeRecId;

    RecId                   patientRecId;
    TimeOfDay               arrivalTime;
    RecId                   selectedSearchGroupRecId;

    HMOpenTimeSlotsSearchParameters     openTimeSlotsSearchParameters;
    int                                 slotInterval;
    boolean                 isSlotHotSpot;

}
]]></Source>
			</Method>
			<Method>
				<Name>enableNewAppointmentButton</Name>
				<Source><![CDATA[
    //todo:  ax7 calender
    /*
    public void AppointmentEdit(System.Object sender, Telerik.Windows.Controls.AppointmentEditedEventArgs e)
    {
        hmResourceSchedulingAppointmentCalendar.editAppointmentMovement(e.get_Appointment());
    }

    public void AppointmentEditing(System.Object sender,Telerik.Windows.Controls.AppointmentEditingEventArgs e)
    {
        DialogButton dialogButton;
        if(hmResourceSchedulingAppointmentCalendar.isMovementConfirmationRequired())
        {
            dialogButton = Box::yesNo("@MAZ11186",DialogButton::No,"@MAZ7757");
            if(dialogButton == DialogButton::No)
            {
                e.set_Cancel(true);
            }
        }
    }
    */
    public void enableNewAppointmentButton(boolean _enable)
    {
        NewAppointment.enabled(_enable);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArrivalTime</Name>
				<Source><![CDATA[
    public TimeOfDay getArrivalTime()
    {
        return arrivalTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHotSpot</Name>
				<Source><![CDATA[
    public boolean getHotSpot()
    {
        return isSlotHotSpot;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPatientId</Name>
				<Source><![CDATA[
    public RecId getPatientId()
    {
        return patientRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPlanningobjectFromResource</Name>
				<Source><![CDATA[
    public RecId getPlanningobjectFromResource()
    {
        str planningObjectId;
        //todo: ax7 calender
        /*
        HMOutpatient_RadScheduleView.EmployeeResource empRes;
        
    
        empRes =   scheduler.getPlanningObjectResource();
    
        if(empRes)
        {
            planningObjectId =  empRes.get_PlanningObjectDetailRecId();
        }
        */
        return str2int64(planningObjectId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSearchTimeSlotBuffer</Name>
				<Source><![CDATA[
    public hmResourceSchedulingOpenTimeSlotsTmp getSearchTimeSlotBuffer()
    {
        return HMResourceSchedulingOpenTimeSlotsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedSearchGroupRecId</Name>
				<Source><![CDATA[
    public RecId getSelectedSearchGroupRecId()
    {
        return selectedSearchGroupRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartEndDateTimeForBlockSlot</Name>
				<Source><![CDATA[
    public container getStartEndDateTimeForBlockSlot()
    {
        return [parmSlotSelectedDate,parmSlotSelectedTime,parmSlotSelectedEndTime];
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        HMResourceSchedulingAppointment     hmResourceSchedulingAppointmentLocal;
        hmResourceSchedulingAppointmentCalendar = new HMResourceSchedulingAppointmentCalendar();
    
    
        if(element.args().menuItemName() == menuitemDisplayStr(HMPlanningObjectDetail))
        {
            patientRecid = element.args().record().RecId;
        }
        else if(element.args().menuItemName() == menuitemDisplayStr(HMAppointmentCalendarApptHistory))
        {
            hmResourceSchedulingAppointmentLocal = element.args().record();
            patientRecid = hmResourceSchedulingAppointmentLocal.HMPatient;
        }
    
        super();
    
        element.updateCalendarView(true);
        //todo : ax7 calender
        /*
        scheduler = ManagedHost.control();
        scheduler.add_SelectionChanged(new ManagedEventHandler(this, 'MouseUpMethod'));
        scheduler.add_VisibleChangeRange(new ManagedEventHandler(this,'VisibleRangeChange'));
        scheduler.add_AppointmentEdit(new ManagedEventHandler(this, 'AppointmentEdit'));
        scheduler.add_AppointmentEditing(new ManagedEventHandler(this,'AppointmentEditing'));
     */
        hmResourceSchedulingAppointmentCalendar.parmScheduler(hmscheduler);
   
        hmResourceSchedulingAppointmentCalendar.buildClinicsTree(PlanningObjectClinicsTree);
        hmResourceSchedulingAppointmentCalendar.buildDoctorsTree(ResourceTree);
        hmResourceSchedulingAppointmentCalendar.buildResourceGroupTree(ResourceGroupTree);
        HMResourceSchedulingAppointmentCalendar.buildSpecialitiesTree(SpecialityTree);
    
        //todo: ax7 Calender
        //hmResourceSchedulingAppointmentCalendar.setSlotInterval();
        element.updatePlanningObjectDS();
    
        //todo: ax7 calender
        //scheduler.set_IsReadOnly(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>MouseUpMethod</Name>
				<Source><![CDATA[
    public void MouseUpMethod()
    {
        //todo: ax7 calender
        System.String result;
        /*
        Telerik.Windows.Controls.ScheduleView.Slot slot;
        HMOutpatient_RadScheduleView.HISAppointment    app;
        System.DateTime                             dt;
        str hotSpot;
    
        //variable use for typecasting
        str patientIdStr, planningObjectRecIdStr, appointmentRecIdStr;
        int64 tempSchedType;
    
        result = scheduler.selectionChanged();
        //scheduler.set_AllowAppointmentDrop(false);
        HMAppointmentSlotManagementAdded.enabled(false);
        HMAppointmentSlotManagementRemoved.enabled(false);
    
        if (result != null)
        {
            if (result.Contains('Appointment'))
            {
                app = scheduler.getSelectedAppointment();
    
                if(app != null)
                {
                    patientIdStr = app.get_PatientID();
                    arrivalTime = app.get_ArrivalTime();
                    if(patientIdStr == "0")
                    {
                        hotSpot = app.get_HotSpot();
                        isSlotHotSpot = hotSpot != '' ? true : false;
    
                        dt = app.get_Start();
                        parmSlotSelectedDate = dt.ToString('MM/dd/yy');
                        parmSlotSelectedTime = dt.ToString('HH:mm');
                        dt = app.get_End();
                        parmSlotSelectedEndTime = dt.ToString('HH:mm');
                        tempSchedType = app.get_ScheduleTypeRecId();
                        parmSlotScheduleTypeRecId = int642str(tempSchedType);
    
                        if (hmResourceSchedulingAppointmentCalendar.isSlotBreak(tempSchedType))
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(false);
                            HMAppointmentSlotManagementRemoved.enabled(false);
                        }
                        else if (app.get_isBlocked())
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(true);
                        }
                        else if (app.get_isClosed())
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingPlanningObject.HMResourceMaster))
                            {
                                HMAppointmentUnblockCloseSlot.enabled(true);
                            }
                            else
                            {
                                HMAppointmentUnblockCloseSlot.enabled(false);
                            }
                            HMAppointmentUnblockSlot.enabled(false);
                        }
                        else
                        {
                            newappointment.enabled(true);
                            HMAppointmentBlockSlot.enabled(true);
                            HMAppointmentSlotManagementRemoved.enabled(true);
                            if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingPlanningObject.HMResourceMaster))
                            {
                                HMAppointmentCloseSlot.enabled(true);
                            }
                            else
                            {
                                HMAppointmentCloseSlot.enabled(false);
                            }
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(false);
                        }
    
                        planningObjectRecIdStr  = app.get_PlanningObjectDetailRecId();
                        element.updatePlanningObjectDS(str2int64(planningObjectRecIdStr));
    
                        element.updateAppointmentDS(0, true);
                    }
                    else
                    {
                        element.updatePlanningObjectDS(this.getPlanningobjectFromResource());
    
                        appointmentRecIdStr  = app.get_PlanningObjectDetailRecId();
                        element.updateAppointmentDS(str2int64(appointmentRecIdStr));
                        this.enableNewAppointmentButton(false);
                        HMAppointmentBlockSlot.enabled(false);
                        HMAppointmentCloseSlot.enabled(false);
                    }
                }
            }
            else if (result.Contains('Slot'))
            {
                slot = scheduler.getSelectedSlot();
    
                dt = slot.get_Start();
                parmSlotSelectedDate = dt.ToString('MM/dd/yy');
                parmSlotSelectedTime = dt.ToString('HH:mm');
                parmSlotSelectedEndTime = parmSlotSelectedTime;
                parmSlotScheduleTypeRecId = '';
    
                element.updatePlanningObjectDS(this.getPlanningobjectFromResource());
    
                element.updateAppointmentDS(0, true);
                this.enableNewAppointmentButton(false);
    
                HMAppointmentBlockSlot.enabled(false);
                HMAppointmentCloseSlot.enabled(false);
    
                HMAppointmentSlotManagementAdded.enabled(true);
            }
        }
        */
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHMOpenTimeSlotsSearchParameters</Name>
				<Source><![CDATA[
    public HMOpenTimeSlotsSearchParameters parmHMOpenTimeSlotsSearchParameters(HMOpenTimeSlotsSearchParameters _openTimeSlotsSearchParameters = openTimeSlotsSearchParameters)
    {
        openTimeSlotsSearchParameters = _openTimeSlotsSearchParameters;
    
        return openTimeSlotsSearchParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshScheduleView</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void refreshScheduleView()
    {
        //hmResourceSchedulingAppointmentCalendar.refreshScheduleView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGrid</Name>
				<Source><![CDATA[
    public void refreshGrid()
    {
        FormTreeItem                    selectedTreeItem;
        HMResourceSchedulingOpenTimeSlotsTmp hmResourceSchedulingOpenTimeSlotsTmpLocal;
    
        switch(Tab.tab())
        {
            case 1:
                selectedTreeItem = PlanningObjectClinicsTree.getItem(PlanningObjectClinicsTree.getSelection());
                if(selectedTreeItem)
                {
                    hmResourceSchedulingAppointmentCalendar.selectionChangeClinicsTree(selectedTreeItem.data());
    
                    element.updatePlanningObjectDS();
                    if(ScheduleGrid.visible())
                    {
                        element.updateAppointmentDS();
                    }
                    else
                    {
                        element.updateAppointmentDS(0, true);
                    }
                }
                break;
            case 2:
                
                selectedTreeItem = ResourceTree.getItem(ResourceTree.getSelection());
                if(selectedTreeItem)
                {
                    hmResourceSchedulingAppointmentCalendar.selectionChangeResourceDoctorTree(selectedTreeItem.data());
    
                    element.updatePlanningObjectDS();
                    if(ScheduleGrid.visible())
                    {
                        element.updateAppointmentDS();
                    }
                    else
                    {
                        element.updateAppointmentDS(0, true);
                    }
                }
                break;
            case 3:
                selectedTreeItem = ResourceGroupTree.getItem(ResourceGroupTree.getSelection());
                if(selectedTreeItem)
                {
                    hmResourceSchedulingAppointmentCalendar.selectionChangeResourceGroupTree(selectedTreeItem.data());
    
                    element.updatePlanningObjectDS();
                    if(ScheduleGrid.visible())
                    {
                        element.updateAppointmentDS();
                    }
                    else
                    {
                        element.updateAppointmentDS(0, true);
                    }
                }
                break;
            case 4:
                if(openTimeSlotsSearchParameters)
                {
                    hmResourceSchedulingOpenTimeSlotsTmpLocal = element.researchOpenTimeSLots();
    
                    hmResourceSchedulingAppointmentCalendar.parmOpenTimeSlotsTmpCopy(hmResourceSchedulingOpenTimeSlotsTmpLocal);
                    hmResourceSchedulingAppointmentCalendar.fillSearchTree(SearchTree, SlotSearchGroupBy.selection());
    
                    HMResourceSchedulingOpenTimeSlotsTmp.setTmpData(hmResourceSchedulingOpenTimeSlotsTmpLocal);
                    HMResourceSchedulingOpenTimeSlotsTmp_DS.executeQuery();
    
                }
                break;
    
            case 5:
                selectedTreeItem = SpecialityTree.getItem(SpecialityTree.getSelection());
                if(selectedTreeItem)
                {
                    hmResourceSchedulingAppointmentCalendar.selectionChangeSpecialityTree(selectedTreeItem.data());
    
                    element.updatePlanningObjectDS();
                    if(ScheduleGrid.visible())
                    {
                        element.updateAppointmentDS();
                    }
                    else
                    {
                        element.updateAppointmentDS(0, true);
                    }
                }
                break;
        }
    
        element.resetControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>researchOpenTimeSLots</Name>
				<Source><![CDATA[
    public HMResourceSchedulingOpenTimeSlotsTmp researchOpenTimeSLots()
    {
        HMResourceSchedulingOpenTimeSlotsSearch hmResourceSchedulingOpenTimeSlotsSearch=new HMResourceSchedulingOpenTimeSlotsSearch();
        HMResourceSchedulingOpenTimeSlotsTmp    hmResourceSchedulingOpenTimeSlotsTmpLocal;
    
        hmResourceSchedulingOpenTimeSlotsTmpLocal = hmResourceSchedulingOpenTimeSlotsSearch.searchOpenTimeSlotMultiPO(
                openTimeSlotsSearchParameters.parmFromDate(), openTimeSlotsSearchParameters.parmToDate(),openTimeSlotsSearchParameters.parmAllScheduleType(),
                openTimeSlotsSearchParameters.parmScheduleTypeRecId(),openTimeSlotsSearchParameters.parmOverbookingSearch(),openTimeSlotsSearchParameters.parmIncludeExcludeDays(),
                openTimeSlotsSearchParameters.parmPlanningObjectRecId(), openTimeSlotsSearchParameters.parmResourceRecId(),openTimeSlotsSearchParameters.parmFromTime(),
                openTimeSlotsSearchParameters.parmToTime(), openTimeSlotsSearchParameters.parmLocationRecId(), openTimeSlotsSearchParameters.parmAptitudeRecId(), openTimeSlotsSearchParameters.parmSpecialityRecId(),
                openTimeSlotsSearchParameters.parmIncludeExclude(), openTimeSlotsSearchParameters.parmTimeRangeIncluded(),openTimeSlotsSearchParameters.parmProtocolId(),CustTable::find(openTimeSlotsSearchParameters.parmClientAccount()).RecId, 0 , openTimeSlotsSearchParameters.parmSearchFirstAvailable());
    
    
        return hmResourceSchedulingOpenTimeSlotsTmpLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetControls</Name>
				<Source><![CDATA[
    public void resetControls()
    {
        System.DateTime                             dt;
        //todo: ax7 Calender
        /*
         if(scheduler!= null)
        {
            dt = scheduler.get_rangeStartDate();
            parmSlotSelectedDate = dt.ToString('MM/dd/yy');
            parmSlotSelectedTime = dt.ToString('HH:mm');
            parmSlotSelectedEndTime = parmSlotSelectedTime;
        }
        else
        {
            parmSlotSelectedDate = '';
            parmSlotSelectedTime = '';
            parmSlotSelectedEndTime = parmSlotSelectedTime;
        }
        */
        NewAppointment.enabled(false);
        HMAppointmentBlockSlot.enabled(false);
        HMAppointmentUnblockSlot.enabled(false);
        HMAppointmentSlotManagementAdded.enabled(false);
        HMAppointmentSlotManagementRemoved.enabled(false);
        HMAppointmentCloseSlot.enabled(false);
        HMAppointmentUnblockCloseSlot.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        HMResourceSchedulingAppointment     hmResourceSchedulingAppointmentLocal;
        TreeItemIdx         treeItemIdx;
    
        if(patientRecId)
        {
            element.updatePatientGroup();
        }
    
        //todo: ax7 calender
        // scheduler.set_AllowAppointmentDrop(false);
        //HMScheduler.parmOperatingTime(time2Str(HMParameters::find().OperatingTime,TimeSeparator::Colon, TimeFormat::AMPM));
        
        super();
    
        hmResourceSchedulingAppointmentCalendar.setVisibleTime();
    
        if(element.args().menuItemName() == menuitemDisplayStr(HMAppointmentCalendarApptHistory))
        {
            hmResourceSchedulingAppointmentLocal = element.args().record();
    
            treeItemIdx = hmResourceSchedulingAppointmentCalendar.selectClinicTreeNodeAppointment(PlanningObjectClinicsTree, hmResourceSchedulingAppointmentLocal.HMResourceSchedulingPlanningObject, HMResourceSchedulingPlanningObjHelper::getOrganizationalUnitRecId(hmResourceSchedulingAppointmentLocal.HMResourceSchedulingPlanningObject));
    
            if(treeItemIdx)
            {
                PlanningObjectClinicsTree.select(treeItemIdx);
            }
    
            element.updateCalendarView(false);
    
            HMResourceSchedulingAppointment_ds.positionToRecord(hmResourceSchedulingAppointmentLocal);
    
        }
        hmResourceSchedulingAppointmentCalendar.bindAppointmentTypeColor();
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchTabActivated</Name>
				<Source><![CDATA[
    public boolean searchTabActivated()
    {
        return SearchTab.visible();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectCreatedAppointment</Name>
				<Source><![CDATA[
    public void selectCreatedAppointment(RecId _apptRecId)
    {
        HMResourceSchedulingAppointment     hmResourceSchedulingAppointmentLocal;
        TreeItemIdx         treeItemIdx;
    
        hmResourceSchedulingAppointmentLocal = HMResourceSchedulingAppointment::find(_apptRecId);
    
        element.updateCalendarView(false);

        Physician.activatePage();
    
        treeItemIdx = hmResourceSchedulingAppointmentCalendar.selectClinicTreeNodeAppointment(PlanningObjectClinicsTree, hmResourceSchedulingAppointmentLocal.HMResourceSchedulingPlanningObject, HMResourceSchedulingPlanningObjHelper::getOrganizationalUnitRecId(hmResourceSchedulingAppointmentLocal.HMResourceSchedulingPlanningObject));
    
        if(treeItemIdx)
        {
            PlanningObjectClinicsTree.select(treeItemIdx);
        }
    
        
    
        HMResourceSchedulingAppointment_ds.positionToRecord(hmResourceSchedulingAppointmentLocal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelectedResourceGroupOnSearch</Name>
				<Source><![CDATA[
    public void setSelectedResourceGroupOnSearch(str _data)
    {
        ListEnumerator listEnumr = strSplit(_data, ';').getEnumerator();
    
        listEnumr.moveNext();
    
        switch(listEnumr.current())
        {
            case 'Group':
                listEnumr.moveNext();
                selectedSearchGroupRecId = listEnumr.current();
                break;
            default:
                selectedSearchGroupRecId = 0;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimeSlotsData</Name>
				<Source><![CDATA[
    public void setTimeSlotsData(HMResourceSchedulingOpenTimeSlotsTmp _hmResourceSchedulingOpenTimeSlotsTmpMain)
    {
        SearchTab.visible(true);
    
        SearchTab.activatePage();
    
        hmResourceSchedulingAppointmentCalendar.parmOpenTimeSlotsTmpCopy(_hmResourceSchedulingOpenTimeSlotsTmpMain);
    
        hmResourceSchedulingAppointmentCalendar.fillSearchTree(SearchTree, SlotSearchGroupBy.selection());
    
        HMResourceSchedulingOpenTimeSlotsTmp.setTmpData(_hmResourceSchedulingOpenTimeSlotsTmpMain);
        HMResourceSchedulingOpenTimeSlotsTmp_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showHideFactBoxes</Name>
				<Source><![CDATA[
    public void showHideFactBoxes(boolean _visible)
    {
        FormRun                             formrunfactbox;
        int i;
    
        partlist                         partlistformrunfactbox  = new partlist(element);
    
        i = partlistformrunfactbox.partcount();
    
        for ( i = 1; i <= partlistformrunfactbox.partcount(); i++)
        {
            formrunfactbox = partlistformrunfactbox.getpartbyid(i);
            formrunfactbox.design().visible(_visible);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAppointmentDS</Name>
				<Source><![CDATA[
    public void updateAppointmentDS(RecId _appointmentRecid = 0, boolean _disableApptDS = false)
    {
        if(_appointmentRecid)
        {
            qbrAppointment.enabled(true);
            qbrAppointment.value(SysQuery::value(_appointmentRecid));
            qbrAppointmentsPlanObject.enabled(false);
            qbrAppointmentsOrgUnit.enabled(false);
            qbrAppointmentsResource.enabled(false);
        }
        else if(_disableApptDS)
        {
            qbrAppointment.enabled(true);
            qbrAppointment.value(SysQuery::value(0));
            qbrAppointmentsPlanObject.enabled(false);
            qbrAppointmentsOrgUnit.enabled(false);
            qbrAppointmentsResource.enabled(false);
        }
        else
        {
            qbrAppointment.enabled(false);
    
            if(hmResourceSchedulingAppointmentCalendar.parmPlanningObjectRecId())
            {
                qbrAppointmentsPlanObject.value(SysQuery::value(hmResourceSchedulingAppointmentCalendar.parmPlanningObjectRecId()));
                qbrAppointmentsPlanObject.enabled(true);
                qbrAppointmentsOrgUnit.enabled(false);
                qbrAppointmentsResource.enabled(false);
            }
            else if(hmResourceSchedulingAppointmentCalendar.parmOrganizationlaUnitRecId())
            {
                qbrAppointmentsOrgUnit.value(SysQuery::value(hmResourceSchedulingAppointmentCalendar.parmOrganizationlaUnitRecId()));
                qbrAppointmentsPlanObject.enabled(false);
                qbrAppointmentsOrgUnit.enabled(true);
                qbrAppointmentsResource.enabled(false);
            }
            else if(hmResourceSchedulingAppointmentCalendar.parmResourceRecId())
            {
                qbrAppointmentsResource.value(SysQuery::value(hmResourceSchedulingAppointmentCalendar.parmResourceRecId()));
                qbrAppointmentsPlanObject.enabled(false);
                qbrAppointmentsOrgUnit.enabled(false);
                qbrAppointmentsResource.enabled(true);
            }
            else
            {
                qbrAppointmentsPlanObject.value(SysQuery::value(0));
                qbrAppointmentsPlanObject.enabled(true);
                qbrAppointmentsOrgUnit.enabled(false);
                qbrAppointmentsResource.enabled(false);
            }
        }
    
        HMResourceSchedulingAppointment_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCalendarDate</Name>
				<Source><![CDATA[
    public void updateCalendarDate(date _datevalue)
    {
        utcDateTime utcdate = DateTimeUtil::newDateTime(_datevalue,0);
        //todo:  ax7 calender
        //scheduler.SetFirstVisibleDate(Global::utcDateTime2SystemDateTime(utcdate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCalendarView</Name>
				<Source><![CDATA[
    public void updateCalendarView(boolean _showCalendar)
    {
        this.enableNewAppointmentButton(false);
        if(_showCalendar)
        {
            HMScheduler.visible(_showCalendar);
            OpenSlotGridGroup.visible(!_showCalendar);
            ScheduleGrid.visible(!_showCalendar);
            element.refreshGrid();
            
            //if(scheduler != null)
            //{
            //    scheduler.clearSelection();
            //}
        }
        else
        {
            HMScheduler.visible(_showCalendar);

            if(Tab.tab() == 4)
            {
                OpenSlotGridGroup.visible(!_showCalendar);
                ScheduleGrid.visible(_showCalendar);
            }
            else
            {
                ScheduleGrid.visible(!_showCalendar);
                OpenSlotGridGroup.visible(_showCalendar);
            }
        }

        if(ScheduleGrid.visible())
        {
            element.updateAppointmentDS();
        }
        else
        {
            element.updateAppointmentDS(0, true);
        }

        element.resetControls();
        if(HMResourceSchedulingAppointmentCalendar)
        {
            //HMResourceSchedulingAppointmentCalendar.refreshScheduleView();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOpenSlotDS</Name>
				<Source><![CDATA[
    public void updateOpenSlotDS()
    {
        int i = 1;
        RecId tmpPlanRecId;
        container conGroupVal;
    
        HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().clearRanges();
        HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, isClosed)).value(SysQuery::value(NoYes::No));
        HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, isBlocked)).value(SysQuery::value(NoYes::No));
        HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, @Client)).value(SysQuery::value(0));
    
        if(hmResourceSchedulingAppointmentCalendar.parmPlanningObjectRecId())
        {
            HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, HMResourceSchedulingPlanningObject)).value(SysQuery::value(hmResourceSchedulingAppointmentCalendar.parmPlanningObjectRecId()));
        }
        else if(hmResourceSchedulingAppointmentCalendar.parmGroupRecId())
        {
            conGroupVal = hmResourceSchedulingAppointmentCalendar.getMapSlotSearchPlanningObjectByGroup();
    
            for(i = 1; i <= conLen(conGroupVal); i++)
            {
                tmpPlanRecId = conPeek(conGroupVal,i);
    
                HMResourceSchedulingOpenTimeSlotsTmp_DS.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, HMResourceSchedulingPlanningObject)).value(SysQuery::value(tmpPlanRecId));
            }
        }
    
        HMResourceSchedulingOpenTimeSlotsTmp_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePatientGroup</Name>
				<Source><![CDATA[
    private void updatePatientGroup()
    {
        Description255 patientInfo = hmResourceSchedulingAppointmentCalendar.getPatientInfo(patientRecId);
    
        PatientInformation.text(patientInfo);
        HeaderPatientGroup.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePlanningObjectDS</Name>
				<Source><![CDATA[
    public void updatePlanningObjectDS(RecId _planningObjectRecId = 0)
    {
        if(_planningObjectRecId)
        {
            qbrPlanningObject.value(SysQuery::value(_planningObjectRecId));
        }
        else
        {
            qbrPlanningObject.value(SysQuery::value(hmResourceSchedulingAppointmentCalendar.parmPlanningObjectRecId()));
        }
    
        HMResourceSchedulingPlanningObject_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>VisibleRangeChange</Name>
				<Source><![CDATA[
    public void VisibleRangeChange()
    {
        if(Tab.tabValue() != 4)
        {
            element.refreshGrid();
            element.resetControls();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMResourceSchedulingPlanningObject</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
        
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            qbrPlanningObject = this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingPlanningObject, RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingAppointment</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
            HMResourceSchedulingConfirmForceBookAppt.enabled(false);
            switch(HMResourceSchedulingAppointment.AppointmentStatus)
            {
                case HMResourceSchedulingAppointmentStatus::Open:
                case HMResourceSchedulingAppointmentStatus::Confirmed:
        
                    if(HMResourceSchedulingAppointment.AppointmentDate < DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())) //added by faizan
                    {
                        CancelAppointment.enabled(false);
                        CheckedoutAppointment.enabled(false);
                        EditAppointment.enabled(false);
                        TransferAppointment.enabled(false);
                        CheckedinAppointment.enabled(false);
                        NoShowAppointment.enabled(true);
                        HMMedisysAppointmentNext.enabled(false);
                        HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                        //scheduler.set_AllowAppointmentDrop(false);
                    }
                    else if(HMResourceSchedulingAppointment.HMConfirmationStatus == HMAppointmentConfirmationStatus::IncompleteInfo)
                    {
                        CancelAppointment.enabled(true);
                        CheckedoutAppointment.enabled(false);
                        if(HMResourceSchedulingAppointment.PrimaryAppointment == YesNo::Yes)
                        {
                            EditAppointment.enabled(true);
                        }
                        TransferAppointment.enabled(true);
                        CheckedinAppointment.enabled(false);
                        NoShowAppointment.enabled(true);
                        HMMedisysAppointmentNext.enabled(false);
                        HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                        //scheduler.set_AllowAppointmentDrop(true);
                    }
                    else if(HMResourceSchedulingAppointment.HMConfirmationStatus == HMAppointmentConfirmationStatus::ForceBookedNotConfirmed)
                    {
                        CancelAppointment.enabled(false);
                        CheckedoutAppointment.enabled(false);
                        EditAppointment.enabled(false);
                        TransferAppointment.enabled(false);
                        CheckedinAppointment.enabled(false);
                        NoShowAppointment.enabled(true);
                        HMMedisysAppointmentNext.enabled(false);
                        HMResourceSchedulingConfirmForceBookAppt.enabled(true);
                        //scheduler.set_AllowAppointmentDrop(false);
                    }
                    else
                    {
                        CancelAppointment.enabled(true);
                        CheckedoutAppointment.enabled(false);
                        //scheduler.set_AllowAppointmentDrop(true);
                        if(HMResourceSchedulingAppointment.PrimaryAppointment == YesNo::Yes)
                        {
                            EditAppointment.enabled(true);
                        }
                        TransferAppointment.enabled(true);
                        CheckedinAppointment.enabled(true);
                        NoShowAppointment.enabled(true);
                        HMMedisysAppointmentNext.enabled(true);
                        HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    }
                    break;
                case HMResourceSchedulingAppointmentStatus::Cancelled:
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(false);
                    EditAppointment.enabled(true);
                    TransferAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
        
                case HMResourceSchedulingAppointmentStatus::CheckedIn:
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(true);
                    EditAppointment.enabled(false);
                    TransferAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
        
                case HMResourceSchedulingAppointmentStatus::CheckedOut:
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(false);
                    EditAppointment.enabled(true);
                    TransferAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
        
                case HMResourceSchedulingAppointmentStatus::Examined:
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(true);
                    EditAppointment.enabled(false);
                    TransferAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
        
                case HMResourceSchedulingAppointmentStatus::NoShow: //added by faizan
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(false);
                    EditAppointment.enabled(true);
                    TransferAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
        
                case HMResourceSchedulingAppointmentStatus::Tentative:
                    CancelAppointment.enabled(true);
                    CheckedoutAppointment.enabled(false);
                    EditAppointment.enabled(true);
                    TransferAppointment.enabled(true);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    //scheduler.set_AllowAppointmentDrop(false);
                    HMMedisysAppointmentNext.enabled(false);
                    HMResourceSchedulingConfirmForceBookAppt.enabled(false);
                    break;
                case HMResourceSchedulingAppointmentStatus::Closed:
                    CancelAppointment.enabled(false);
                    CheckedoutAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(false);
                    HMAppointmentServiceDialog.enabled(false);
                    EditAppointment.enabled(false);
                    break;
                case HMResourceSchedulingAppointmentStatus::Reserved:
                    CancelAppointment.enabled(true);
                    CheckedoutAppointment.enabled(false);
                    CheckedinAppointment.enabled(false);
                    NoShowAppointment.enabled(true);
                    HMAppointmentServiceDialog.enabled(false);
                    EditAppointment.enabled(false);
                    TransferAppointment.enabled(false);
                    break;
            }
        
        
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            str apptStatusFilterString;
            super();
        
            if(element.args().menuItemName() == menuitemDisplayStr(HMAppointmentCalendarApptHistory))
            {
                HMResourceSchedulingAppointment_ds.queryBuildDataSource().clearDynalinks();
                HMResourceSchedulingAppointment_ds.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment, HMPatient)).value(queryValue(patientRecId));
            }
        
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingAppointment, AppointmentDate));
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingAppointment, AppointmentTime));
            apptStatusFilterString = strFmt('((%1 != %2) && (%1 != %3) && (%1 != %4))','HMResourceSchedulingAppointment.AppointmentStatus',enum2int(HMResourceSchedulingAppointmentStatus::Cancelled),enum2int(HMResourceSchedulingAppointmentStatus::Reserved),enum2int(HMResourceSchedulingAppointmentStatus::ToBeReschedule));
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment,AppointmentStatus)).value(apptStatusFilterString);
            //this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment,AppointmentStatus)).value(SysQuery::valueNot(HMResourceSchedulingAppointmentStatus::Reserved));
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment,HMAppointmentType)).value(SysQuery::valueNot(HMAppointmentType::Admission));
        
            qbrAppointment = this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment, RecId));
            qbrAppointmentsPlanObject = this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingAppointment, HMResourceSchedulingPlanningObject));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingPlanningObject_FK</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingPlanningObject,CaseType)).value(SysQuery::value(HMCaseType::OutPatient));
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingPlanningObject,CaseType)).value(SysQuery::value(HMCaseType::Surgery));
        
            qbrAppointmentsResource = this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingPlanningObject, HMResourceMaster));
            qbrAppointmentsOrgUnit = this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingPlanningObject, HMOrganizationalUnit));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingOpenTimeSlotsTmp</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            element.updatePlanningObjectDS(HMResourceSchedulingOpenTimeSlotsTmp.HMResourceSchedulingPlanningObject);
        
            parmSlotSelectedDate = date2str(HMResourceSchedulingOpenTimeSlotsTmp.Date,213,DateDay::Digits2,DateSeparator::Slash,
                                            DateMonth::Digits2, DateSeparator::Slash,DateYear::Digits2, DateFlags::None);
            parmSlotSelectedTime = time2StrHMLeadingZero(HMResourceSchedulingOpenTimeSlotsTmp.Time);
            parmSlotScheduleTypeRecId = int642str(HMResourceSchedulingOpenTimeSlotsTmp.HMResourceSchedulingTypeCode);
            parmSlotSelectedEndTime = time2StrHMLeadingZero(HMResourceSchedulingOpenTimeSlotsTmp.SlotEndTime);
            arrivalTime = HMResourceSchedulingOpenTimeSlotsTmp.ArrivalTime;
            isSlotHotSpot = HMResourceSchedulingOpenTimeSlotsTmp.IsHotspot;
        
            //if (HMResourceSchedulingOpenTimeSlotsTmp.isBlocked)
            //{
            //newappointment.enabled(false);
            //HMAppointmentBlockSlot.enabled(false);
            //HMAppointmentCloseSlot.enabled(false);
            //HMAppointmentUnblockCloseSlot.enabled(false);
            //HMAppointmentUnblockSlot.enabled(true);
            //}
            //else if (HMResourceSchedulingOpenTimeSlotsTmp.isClosed)
            //{
            //newappointment.enabled(false);
            //HMAppointmentBlockSlot.enabled(false);
            //HMAppointmentCloseSlot.enabled(false);
            //if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingPlanningObject.HMResourceMaster))
            //{
            //HMAppointmentUnblockCloseSlot.enabled(true);
            //}
            //else
            //{
            //HMAppointmentUnblockCloseSlot.enabled(false);
            //}
            //HMAppointmentUnblockSlot.enabled(false);
            //}
            //else
            //{
            newappointment.enabled(true);
            HMAppointmentBlockSlot.enabled(true);
            if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingOpenTimeSlotsTmp.HMResourceMaster))
            {
                HMAppointmentCloseSlot.enabled(true);
            }
            else
            {
                HMAppointmentCloseSlot.enabled(false);
            }
            HMAppointmentUnblockCloseSlot.enabled(false);
            HMAppointmentUnblockSlot.enabled(false);
            //}
            if (hmResourceSchedulingAppointmentCalendar.isSlotBreak(HMResourceSchedulingOpenTimeSlotsTmp.HMResourceSchedulingTypeCode))
            {
                newappointment.enabled(false);
                HMAppointmentBlockSlot.enabled(false);
                HMAppointmentCloseSlot.enabled(false);
                HMAppointmentUnblockCloseSlot.enabled(false);
                HMAppointmentUnblockSlot.enabled(false);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, date));
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, Time));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewAppointment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            str parm;
        
            parm = parmSlotSelectedDate + #ParmSeparator + parmSlotSelectedTime + #ParmSeparator + parmSlotScheduleTypeRecId;
        
            if(patientRecId)
            {
                parm += ',' + int642str(patientRecId);
            }
        
            this.parameters(parm);
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferAppointment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #define.OU ("-OU")
            #define.PERSON("-Person")
            int64 i;
        
            switch (Tab.tab())
            {
                case 3:  // doctor
                    if (ResourceGroupTree.getSelection() != 0)
                    {
                        if (ResourceGroupTree.getSelection() == ResourceGroupTree.getRoot())
                        {
                            i = ResourceGroupTree.getItem(ResourceGroupTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                        else if (strContains(ResourceGroupTree.getItem(ResourceTree.getSelection()).data(),#OU))
                        {
                            this.parameters(int2str(Tab.tab())+","+ResourceGroupTree.getItem(ResourceGroupTree.getSelection()).data());
                        }
                        else
                        {
                            i = ResourceGroupTree.getItem(ResourceGroupTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                    }
                    break;
                case 2:  // doctor
                    if (ResourceTree.getSelection() != 0)
                    {
                        if (ResourceTree.getSelection() == ResourceTree.getRoot())
                        {
                            i = ResourceTree.getItem(ResourceTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                        else if (strContains(ResourceTree.getItem(ResourceTree.getSelection()).data(),#PERSON))
                        {
                            this.parameters(int2str(Tab.tab())+","+ResourceTree.getItem(ResourceTree.getSelection()).data());
                        }
                        else
                        {
                            i = ResourceTree.getItem(ResourceTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                    }
                    break;
        
                case 1: // clinic
                    if (PlanningObjectClinicsTree.getSelection() != 0)
                    {
                        if (PlanningObjectClinicsTree.getSelection() == PlanningObjectClinicsTree.getRoot())
                        {
                            i = PlanningObjectClinicsTree.getItem(PlanningObjectClinicsTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                        else if (strContains(PlanningObjectClinicsTree.getItem(PlanningObjectClinicsTree.getSelection()).data(),#OU))
                        {
                            this.parameters(int2str(Tab.tab())+","+PlanningObjectClinicsTree.getItem(PlanningObjectClinicsTree.getSelection()).data());
                        }
                        else
                        {
                            i = PlanningObjectClinicsTree.getItem(PlanningObjectClinicsTree.getSelection()).data();
                            this.parameters(int2str(Tab.tab())+","+int642str(i));
                        }
                    }
                    break;
            }
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DelayAppointment</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            HMCaseType  caseType;
            container c;
            caseType = element.args().parmEnum();
        
            //switch (Tab.tab())
            //{
            //case 1:
            //if (ResourceTree.getSelection() == ResourceTree.getRoot())
            //{
            //this.parameters("");
            //}
            //else
            //{
            //c = [caseType];
            //if (personSelected)
            //{
            //c += [hmClinicStaff, 0, 1];
            //}
            //else
            //{
            //c += [HMResourceSchedulingPlanningObject::find(str2int64(planningObjectID)).HMClinicStaff, planningObjectID, 1];
            //}
            //
            //this.parameters(con2Str(c,","));
            //}
            //break;
            //
            //case 2:
            //if (PlanningObjectClinicsTree.getSelection() == PlanningObjectClinicsTree.getRoot())
            //{
            //this.parameters("");
            //}
            //else
            //{
            //c = [caseType];
            //if (personSelected)
            //{
            //c += [hmOrganizationalUnit, 0, 2];
            //}
            //else
            //{
            //c += [HMResourceSchedulingPlanningObject::find(str2int64(planningObjectID)).HMOrganizationalUnit, planningObjectID, 2];
            //}
            //
            //this.parameters(con2Str(c,","));
            //}
            //break;
            //}
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AvailabilityStatusBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            switch (Tab.tab())
            {
                case 1:
                    if (PlanningObjectClinicsTree.getSelection() == PlanningObjectClinicsTree.getRoot())
                    {
                        info("@MAZ7314");
                    }
                    else
                    {
                        if(hmResourceSchedulingAppointmentCalendar.markAvailaibility())
                        {
                            hmResourceSchedulingAppointmentCalendar.buildClinicsTree(PlanningObjectClinicsTree);
                        }
                    }
                    break;
        
                case 2:
                    if (ResourceTree.getSelection() == ResourceTree.getRoot())
                    {
                        info("@MAZ7314");
                    }
                    else
                    {
                        if(hmResourceSchedulingAppointmentCalendar.markAvailaibility())
                        {
                            hmResourceSchedulingAppointmentCalendar.buildDoctorsTree(ResourceTree);
                        }
                    }
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TodayButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            //todo: ax7 calender
            /*
            scheduler.set_ViewMode('Day');
            scheduler.SetFirstVisibleDate(System.DateTime::get_Today());
            */
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchOpenSlots</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if(element.parmHMOpenTimeSlotsSearchParameters())
            {
                this.parameters('Search');
            }
            else
            {
                this.parameters('Search,' + int642str(patientRecid));
            }
        
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMAppointmentDayWiseController</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            this.parameters(parmSlotSelectedDate);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewCalendar</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
           
            super();
        
            element.updateCalendarView(true);
            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewGrid</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            
            element.updateCalendarView(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ZoomIn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            hmResourceSchedulingAppointmentCalendar.zoomInSlotInterval();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ZoomOut</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            hmResourceSchedulingAppointmentCalendar.zoomOutSlotInterval();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Refresh</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            super();

            element.refreshGrid();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            TreeItemIdx         filterItemIdx;
            super();
        
            if (SearchTreeText.text() != "")
            {
                filterItemIdx = hmResourceSchedulingAppointmentCalendar.getSearchTreeIdx(SearchTreeText.text());
                if(filterItemIdx != 0)
                {
                    switch (Tab.tab())
                    {
                        case 1:
                            PlanningObjectClinicsTree.select(filterItemIdx);
                            PlanningObjectClinicsTree.setFocus();
                            break;
                        case 2:
                            ResourceTree.select(filterItemIdx);
                            ResourceTree.setFocus();
                            break;
                        case 3:
                            ResourceGroupTree.select(filterItemIdx);
                            ResourceGroupTree.setFocus();
                            break;
                        case 4:
                            SearchTree.select(filterItemIdx);
                            SearchTree.setFocus();
                            break;
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _FromTab, int _ToTab)
        {
            super(_FromTab, _ToTab);
        
            element.refreshGrid();
        
            switch (_ToTab)
            {
                case 1:
                    element.updateCalendarView(true);
                    //element.showHideFactBoxes(true);
                    break;
                case 2:
                    element.updateCalendarView(true);
                    //element.showHideFactBoxes(true);
                    break;
                case 3:
                    element.updateCalendarView(true);
                    break;
                case 4:
                    element.updateCalendarView(false);
                    //element.showHideFactBoxes(false);
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanningObjectClinicsTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            super(_OldItem, _NewItem, _how);
        
            element.refreshGrid();
        
            element.resetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            super(_OldItem, _NewItem, _how);
        
            element.refreshGrid();
        
            element.resetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceGroupTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            super(_OldItem, _NewItem, _how);
        
            element.refreshGrid();
        
            element.resetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SlotSearchGroupBy</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            element.refreshGrid();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            FormTreeItem                    selectedTreeItem;
            str                             parentItemData;
            int                             parentItemIdx;
            super(_OldItem, _NewItem, _how);
        
            selectedTreeItem = SearchTree.getItem(SearchTree.getSelection());
            if(selectedTreeItem)
            {
                if(strContains(selectedTreeItem.data(),'Group'))
                {
                    parentItemIdx = selectedTreeItem.idx();
                }
                else
                {
                    parentItemIdx = SearchTree.getParent(selectedTreeItem.idx());
                }
                if(parentItemIdx)
                {
                    parentItemData = SearchTree.getItem(parentItemIdx).data();
                    if(parentItemData)
                    {
                        element.setSelectedResourceGroupOnSearch(parentItemData);
                    }
                }
            }
            
            hmResourceSchedulingAppointmentCalendar.selectionChangeSearchTree(selectedTreeItem.data());
        
            element.updateOpenSlotDS();
        
            element.resetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SpecialityTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            super(_OldItem, _NewItem, _how);
        
            element.refreshGrid();
        
            //element.resetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMScheduler</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>Navigation</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <param name = "startDate"></param>
        /// <param name = "endDate"></param>
        public void Navigation(str startDate, str endDate)
        {
            super(startDate, endDate);
            element.VisibleRangeChange();
        }

]]></Source>
					</Method>
					<Method>
						<Name>DefaultRefreshValue</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void DefaultRefreshValue()
        {
            //super();
            
        }

]]></Source>
					</Method>
					<Method>
						<Name>SlotSelected</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <param name = "events"></param>
        public void SlotSelected(str events, boolean isEvent, str startDate, str endDate)
        {
            super(events, isEvent, startDate, endDate);
            
            System.Collections.Generic.Dictionary<System.String,System.Object> jsonOutputDict;
            System.Web.Script.Serialization.JavaScriptSerializer js = new System.Web.Script.Serialization.JavaScriptSerializer();
            var jsonResult = js.DeserializeObject(events);
            Map jsResult;
            container result;
            System.DateTime                             dt;
            str hotSpot;
            
            //variable use for typecasting
            str patientIdStr, planningObjectRecIdStr, appointmentRecIdStr;
            NoYes hotSpotBool;
            boolean isBlocked,isClosed;
            dt = System.DateTime::Parse(StartDate);
            
            int64 tempSchedType;
    
            
            //scheduler.set_AllowAppointmentDrop(false);
            HMAppointmentSlotManagementAdded.enabled(false);
            HMAppointmentSlotManagementRemoved.enabled(false);
            if(events)
            {
                jsResult = RetailCommonWebAPI::getMapFromJsonString(events);
            }
            if (jsResult != null)
            {
                
                result = jsResult.lookup("planningObjectRecId");
                patientIdStr = con2Str(conPeek(jsResult.lookup("patientId"),1));
                planningObjectRecIdStr = con2Str(conPeek(jsResult.lookup("planningObjectRecId"),1));
                appointmentRecIdStr =  con2Str(conPeek(jsResult.lookup("appointmentRecId"),1));
                if (appointmentRecIdStr)
                {
                    element.updatePlanningObjectDS(element.getPlanningobjectFromResource());
                    element.updateAppointmentDS(str2int64(appointmentRecIdStr));
                    element.enableNewAppointmentButton(false);
                    HMAppointmentBlockSlot.enabled(false);
                    HMAppointmentCloseSlot.enabled(false);
                }
                //open slot
                else
                {
                
                    arrivalTime = str2Time(con2Str(conPeek(jsResult.lookup("arrivalTime"),1)));
                    if(patientIdStr == "0")
                    {
                        hotSpot = con2Str(conPeek(jsResult.lookup("hotSpot"),1));
                        isSlotHotSpot = hotSpot != '' ? true : false;
    
                        dt = System.DateTime::Parse(con2Str(conPeek(jsResult.lookup("start"),1)));
                        parmSlotSelectedDate = dt.ToString('MM/dd/yy');
                        parmSlotSelectedTime = dt.ToString('HH:mm');
                        dt = System.DateTime::Parse(con2Str(conPeek(jsResult.lookup("end"),1)));
                        parmSlotSelectedEndTime = dt.ToString('HH:mm');
                        tempSchedType = str2Int64(con2Str(conPeek(jsResult.lookup("scheduleTypeRecId"),1)));
                        parmSlotScheduleTypeRecId = int642str(tempSchedType);
                        isBlocked = con2Str(conPeek(jsResult.lookup("isBlocked"),1)) == "true" ? true : false;
                        isClosed = con2Str(conPeek(jsResult.lookup("isClosed"),1)) == "true" ? true : false;
                        if (hmResourceSchedulingAppointmentCalendar.isSlotBreak(tempSchedType))
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(false);
                            HMAppointmentSlotManagementRemoved.enabled(false);
                        }
                        else if (isBlocked)
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(true);
                        }
                        else if (isClosed)
                        {
                            newappointment.enabled(false);
                            HMAppointmentBlockSlot.enabled(false);
                            HMAppointmentCloseSlot.enabled(false);
                            if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingPlanningObject.HMResourceMaster))
                            {
                                HMAppointmentUnblockCloseSlot.enabled(true);
                            }
                            else
                            {
                                HMAppointmentUnblockCloseSlot.enabled(false);
                            }
                            HMAppointmentUnblockSlot.enabled(false);
                        }
                        else
                        {
                            newappointment.enabled(true);
                            HMAppointmentBlockSlot.enabled(true);
                            HMAppointmentSlotManagementAdded.enabled(true);
                            HMAppointmentSlotManagementRemoved.enabled(true);
                            HMAppointmentSlotManagementAdded.enabled(true);
                            if(HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingPlanningObject.HMResourceMaster))
                            {
                                HMAppointmentCloseSlot.enabled(true);
                            }
                            else
                            {
                                HMAppointmentCloseSlot.enabled(false);
                            }
                            HMAppointmentUnblockCloseSlot.enabled(false);
                            HMAppointmentUnblockSlot.enabled(false);
                        }

                        element.updatePlanningObjectDS(str2int64(planningObjectRecIdStr));
                        HMAppointmentSlotManagementAdded.enabled(false);
                        element.updateAppointmentDS(0, true);
                    }
                }
            }
            else
            {
                
                
                parmSlotSelectedDate = dt.ToString('MM/dd/yy');
                parmSlotSelectedTime = dt.ToString('HH:mm');
                parmSlotSelectedEndTime = parmSlotSelectedTime;
                
                parmSlotScheduleTypeRecId = '';

                //element.updatePlanningObjectDS(this.getPlanningobjectFromResource());

                element.updateAppointmentDS(0, true);
                NewAppointment.enabled(false);

                HMAppointmentBlockSlot.enabled(false);
                HMAppointmentCloseSlot.enabled(false);

                HMAppointmentSlotManagementAdded.enabled(true);
                
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObject</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingAppointment</Name>
			<Table>HMResourceSchedulingAppointment</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdmissionOrderSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentConfirmationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Bed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChartPrepared</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChiefComplaint</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingLogisticsPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientReportLogisticsPostalAddres</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CopyOfEmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTokenRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CriticalMedicalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DispositionComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DispositionFollowUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EODProcessed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinanceBillingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinanceBillingStatus_Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForceBookingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreeFollowUpAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GOPNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBookingOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCancellationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMConfirmationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceContractClassOrPlans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitAdmissionWard</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitServiceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientVisit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRecurrentApptDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMTreatmentClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMWaitingList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportedNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclinicNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompleteInfoLog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompleteReserveAppointmentTaskGeneratd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDelayed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOnlineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverBooked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReconfirmEmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSpecificConsultant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTable_AdvancePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientContact</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientRequestor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalChartRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PONum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Referral</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportSentContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestorContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RescheduleWithoutConfirmation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResultExpectedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResultVisitStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SendEmailTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmsSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysOutgoingEmailTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WalkinPatient</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>HMPatient_FK</Name>
					<Table>HMPatient</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>AgeInDays</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>AgeInMonths</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BirthDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BirthTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BloodGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BoxId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CallNotes</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CanContact</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CivicAddress</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Client</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ContactFirst</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ContactPerson</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ContactPhoneMobile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createdBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createdDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CreditCardToken</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CriticalMedicalInformation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CustTable</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DirPartyRelationshipNextToKin</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DirPartyTable</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DocuRef</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DrivingLicenseNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EmployeeNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Employer</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Employment</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EmploymentEmail</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EmploymentFax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EmploymentLogisticsLocation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EmploymentPhone</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EncounterActive</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Executive</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ExecutiveProtocol</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ExtraCoveredByClient</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Field1</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FileLocation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Gender</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HasCareBookRegistration</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HcmEthnicOrigin</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HcmLanguageCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMAgeValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMBookingOrigin</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMCalcBirthDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMClinicStaff</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMClinicStaffFamilyDoctor</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMHijriDateOfBirth</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMHijriExpiryDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMIdentificationNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMLaboratories</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMNationalIdExpiryDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMNationalIdType</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMPatientAllergyInvestigationStatus</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMPharmacy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMProfession</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMRaceCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HMReferringPhysician</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>InClinicFileLocation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsAuthorized</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsOnHold</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsOutstanding</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsVIP</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JobTitle</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>LogisticsAddressCountryRegion</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>NameSuffix</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>OtherName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PassportExpireDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PassportNum</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PatientHighlights</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PhysicalChartNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PictureRefused</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Pilot</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PreEmployment</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PreEmploymentProtocol</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PrefModeOfCommunication</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ProfessionalStatus</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ProvincialHealthCardExpDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ProvincialHealthCardNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RAMQ</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReasonTableMerge</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReasonTablePatientDeactivate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecallDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefusedToProvidePicture</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RegisteredBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RegistrationDate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Relationship</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Salutation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SelfEmployed</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>smmBusRelTable</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SocialSecurityNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Status</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TextOnInvoice</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>HMResourceSchedulingAppointment</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<OnlyFetchActive>No</OnlyFetchActive>
					<JoinRelation>HMPatient</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObject_FK</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingAppointment</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingOpenTimeSlotsTmp</Name>
			<Table>HMResourceSchedulingOpenTimeSlotsTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AppointmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Duration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenderPreference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitSubClinic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMParentSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlanItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingWeekPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverBooked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SlotEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Time</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObject_Slot_FK</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingOpenTimeSlotsTmp</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MAZ10945</Caption>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>New_</Name>
								<ElementPosition>437450372</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMNew_Patient</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Create</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMRegisterUnRegisteredPatient</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<OpenMode>New</OpenMode>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@MAZ9</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>NewAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ1471</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<DisabledImageLocation>AOTResource</DisabledImageLocation>
										<MenuItemName>HMResourceSchedulingAppointmentDetail</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS80090</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentReserveSLot</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>HMAppointmentReserveSLot</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentUnblockReserveSlot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048189</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>HMAppointmentUnblockReserveSlot</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentReserveSLotExportExcel</Name>
										<ElementPosition>2040109463</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>HMAppointmentReserveSLotExportExcel</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FormMenuFunctionButtonControl1</Name>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>HMAppointmentReserveSLot</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS5480</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Maintain</Name>
								<ElementPosition>656175558</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMAppointmentServiceDialog</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>393705334</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMAppointmentServiceDialog</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>EditAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>590558001</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ2317</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMResourceSchedulingAppointmentEdit</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<SaveRecord>No</SaveRecord>
										<Text>@SYS324673</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransferAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>671088637</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMTransferAppointments</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS69944</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CancelAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>751619274</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ3236</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMResourceSchedulingAppointmentCancelDlg</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentEditNotes</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMAppointmentEditNotes</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMResourceSchedulingConfirmForceBookAppt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>993211183</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ11285</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMResourceSchedulingConfirmForceBookAppt</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@MAZ11285</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>CheckedinAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1127428911</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ2891</HelpText>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMResourceSchedulingcheckedIn</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>HM_Cancel_Appointment_32x32_png</NormalImage>
										<Parameters>Checked-in</Parameters>
										<Text>@MAZ2672</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>CheckedoutAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1395864366</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ2669</HelpText>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMResourceSchedulingCheckOut</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>HM_Cancel_Appointment_32x32_png</NormalImage>
										<Parameters>Checked-Out</Parameters>
										<Text>@MAZ2892</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>NoShowAppointment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1664299821</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ6246</HelpText>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMResourceSchedulingNoShow</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>HM_Cancel_Appointment_32x32_png</NormalImage>
										<Parameters>No-Show</Parameters>
										<Text>@MAZ6124</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMAppointmentSendEmail</Name>
										<ElementPosition>1905891733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMSysOutgoingEmailTable</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@MAZ10759</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentBlockSlot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1966289711</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentBlockSlot</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentUnblockSlot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2026687689</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentUnblockSlot</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>Actions</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>External</Name>
								<ElementPosition>835132529</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentCloseSlot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentCloseSlot</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentUnblockCloseSlot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentUnblockCloseSlot</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS69716</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ManageOpenSlots</Name>
								<ElementPosition>894784852</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentSlotManagementAdded</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentSlotManagementAdded</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMAppointmentSlotManagementRemoved</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMAppointmentSlotManagementRemoved</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@MAZ12160</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Manage</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>DelayAppointment</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMResourceSchedulingAppointmentDelayed</MenuItemName>
										<NormalImage>HMAppointment_delay_ico</NormalImage>
										<Text>@SYS14370</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>RecurrentAppt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ7260</HelpText>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMRecurrenceApptDailogGrid</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>HM_Cancel_Appointment_32x32_png</NormalImage>
										<Text>@MAZ7261</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>AvailabilityStatusBtn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ7333</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Text>@SYS19120</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMMedisysAppointmentNext</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<CopyCallerQuery>Yes</CopyCallerQuery>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMMedisysAppointmentNext</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS115306</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Search</Name>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>TodayButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437174</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ2877</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DisabledImageLocation>AOTResource</DisabledImageLocation>
										<Text>@MAZ12277</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SearchOpenSlots</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655762</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ1480</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMResourceSchedulingOpenTimeSlotSearch</MenuItemName>
										<SaveRecord>No</SaveRecord>
										<Text>@MAZ1927</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMMedisysSearchAppoitments</Name>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<CopyCallerQuery>No</CopyCallerQuery>
										<DataSource>HMResourceSchedulingPlanningObject</DataSource>
										<MenuItemName>HMMedisysSearchAppoitments</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS60181</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Print_</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMAppointmentProcedureListController</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<MenuItemName>HMAppointmentProcedureListController</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMAppointmentDayWiseController</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>HMAppointmentDayWiseController</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>Print</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>View</Name>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ViewCalendar</Name>
										<ElementPosition>536870911</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ImageLocation>AOTResource</ImageLocation>
										<NormalImage>HM_Calendar</NormalImage>
										<Text>@SYS80390</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ViewGrid</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ImageLocation>AOTResource</ImageLocation>
										<NormalImage>HM_Calendar_grid</NormalImage>
										<Text>@SYS26263</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ZoomIn</Name>
										<ElementPosition>1431655763</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS313286</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ZoomOut</Name>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS313287</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS308815</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>List</Name>
								<ElementPosition>1908874352</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Refresh</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS113222</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS113222</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS118440</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS75300</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderInfo</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group2</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HeaderTitle</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MAZ9346</HelpText>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>showHeader</DataMethod>
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
								<DisplayLength>75</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ShowLabel>No</ShowLabel>
								<Style>TitleField</Style>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>HeaderPatientGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PatientInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MAZ8913</HelpText>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Alignment>Right</Alignment>
								<DisplayLength>100</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ShowLabel>No</ShowLabel>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
				<Style>DetailTitleContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>MainGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Tree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SearchBar</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SearchTreeText</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ6074</HelpText>
										<NeededPermission>Manual</NeededPermission>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Alignment>Left</Alignment>
										<Label>@SYS81048</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SearchButton</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<HelpText>@MAZ3250</HelpText>
										<LeftMode>RightEdge</LeftMode>
										<NeededPermission>Manual</NeededPermission>
										<Skip>Yes</Skip>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DefaultButton>Yes</DefaultButton>
										<SaveRecord>No</SaveRecord>
										<Text>@SYS3340</Text>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Columnspace>2</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>Tab</Name>
								<AlignControl>No</AlignControl>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1744830461</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Tab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Clinics</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>731735166</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>PlanningObjectClinicsTree</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>DynBackgroundBlue</BackgroundColor>
												<Border>None</Border>
											</AxFormControl>
										</Controls>
										<BackgroundColor>DynBackgroundBlue</BackgroundColor>
										<Caption>Clinics</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Physician</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1097602751</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>ResourceTree</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>DynBackgroundBlue</BackgroundColor>
												<Border>None</Border>
											</AxFormControl>
										</Controls>
										<BackgroundColor>DynBackgroundBlue</BackgroundColor>
										<Caption>@MAZ10621</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ResourceGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1360072974</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>ResourceGroupTree</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>DynBackgroundBlue</BackgroundColor>
												<Border>None</Border>
											</AxFormControl>
										</Controls>
										<BackgroundColor>DynBackgroundBlue</BackgroundColor>
										<Caption>@SYS15433</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>SearchTab</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1622543198</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>SlotSearchGroupBy</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<EnumType>HMResourceSchedulingSlotSearchGroupBy</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>SearchTree</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>DynBackgroundBlue</BackgroundColor>
												<Border>None</Border>
											</AxFormControl>
										</Controls>
										<BackgroundColor>DynBackgroundBlue</BackgroundColor>
										<Caption>@SYS60181</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Speciality</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1885013422</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>SpecialityTree</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>DynBackgroundBlue</BackgroundColor>
												<Border>None</Border>
											</AxFormControl>
										</Controls>
										<BackgroundColor>DynBackgroundBlue</BackgroundColor>
										<Caption>@MAZ1706</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<BackgroundColor>DynTitleGreen</BackgroundColor>
								<Style>Auto</Style>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VSplitter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<BackgroundColor>DynBackgroundBlue</BackgroundColor>
						<FramePosition>Inside</FramePosition>
						<Style>SplitterVerticalContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ScheduleView</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ScheduleViewer</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>HMScheduler</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<EnableFormRef>No</EnableFormRef>
										<HeightMode>SizeToAvailable</HeightMode>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension>
											<Name>HMCalendarControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmDatasource</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmEventDS</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmResourceDS</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAppTypeDS</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmRefreshData</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmOperatingTime</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmWorkStartTime</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmWorkEndTime</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<Style>BorderlessGridContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ScheduleGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>Grid</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToContent</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>HMResourceSchedulingAppointment_AppointmentNumber</Name>
												<ElementPosition>268435454</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AppointmentNumber</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>HMResourceSchedulingAppointment_AppointmentDate</Name>
												<ElementPosition>402653182</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AppointmentDate</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTimeControl">
												<Name>HMResourceSchedulingAppointment_AppointmentTime</Name>
												<ElementPosition>603979773</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Time</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AppointmentTime</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
												<TimeSeconds>No</TimeSeconds>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTimeControl">
												<Name>HMResourceSchedulingAppointment_ArrivalTime</Name>
												<ElementPosition>704643069</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Time</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ArrivalTime</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
												<TimeSeconds>No</TimeSeconds>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>PatientRefGroup</Name>
												<ElementPosition>889192444</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatient_FK</DataSource>
												<Label>@MAZ9</Label>
												<ReferenceField>DirPartyTable</ReferenceField>
												<ReplacementFieldGroup>Name</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMResourceMasterRefGroup</Name>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject_FK</DataSource>
												<ReferenceField>HMResourceMaster</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMResourceSchedulingAppointment_HMResourceSchedulingTypeCode</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingAppointment</DataSource>
												<ReferenceField>HMResourceSchedulingTypeCode</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMOrganizationalUnitRefGroup</Name>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject_FK</DataSource>
												<Label>@MAZ1154</Label>
												<ReferenceField>HMOrganizationalUnit</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingAppointment_AppointmentStatus</Name>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AppointmentStatus</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingAppointment_HMConfirmationStatus</Name>
												<ElementPosition>2013265915</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>HMConfirmationStatus</DataField>
												<DataSource>HMResourceSchedulingAppointment</DataSource>
												<Items />
											</AxFormControl>
										</Controls>
										<DataSource>HMResourceSchedulingAppointment</DataSource>
										<ShowRowLabels>No</ShowRowLabels>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OpenSlotGridGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>OpenSlotGrid</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_DayName</Name>
												<ElementPosition>357913940</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>DayName</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_Date</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Date</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTimeControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_Time</Name>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Time</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Time</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<TimeSeconds>No</TimeSeconds>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_IsHotspot</Name>
												<ElementPosition>872415228</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsHotspot</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_GenderPreference</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>GenderPreference</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTimeControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_ArrivalTime</Name>
												<ElementPosition>939524092</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Time</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ArrivalTime</DataField>
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<TimeSeconds>No</TimeSeconds>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMResourceMasterRefGroupSlot</Name>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject_Slot_FK</DataSource>
												<ReferenceField>HMResourceMaster</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMResourceSchedulingOpenTimeSlotsTmp_HMResourceSchedulingTypeCode</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<ReferenceField>HMResourceSchedulingTypeCode</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMOrganizationalUnitRefGroupSlot</Name>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingPlanningObject_Slot_FK</DataSource>
												<Label>Location</Label>
												<ReferenceField>HMOrganizationalUnit</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>Client_</Name>
												<ElementPosition>1744830457</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
												<ReferenceField>Client</ReferenceField>
												<ReplacementFieldGroup>Client</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
										<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
										<ShowRowLabels>No</ShowRowLabels>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Columns>3</Columns>
				<Columnspace>0</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>HMPatientDetails</Name>
			<DataSource>HMResourceSchedulingAppointment</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>306783378</ElementPosition>
			<MenuItemName>HMPatientDetails</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HMOutpatientAppointmentLegend</Name>
			<DataSource>HMResourceSchedulingPlanningObject</DataSource>
			<ElementPosition>613566756</ElementPosition>
			<MenuItemName>HMOutpatientAppointmentLegend</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HMResourceSchedulingAppointmentClinicInf</Name>
			<DataSource>HMResourceSchedulingAppointment</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>920350134</ElementPosition>
			<MenuItemName>HMResourceSchedulingAppointmentClinicInf</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HMResourceDetailsInfoPart</Name>
			<DataSource>HMResourceSchedulingPlanningObject</DataSource>
			<DataSourceRelation>HMResourceSchedulingPlanningObject.HMResourceMaster</DataSourceRelation>
			<ElementPosition>1227133512</ElementPosition>
			<MenuItemName>HMResourceDetailsInfoPart</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HMPatientRelatedAppointmentsPart</Name>
			<DataSource>HMResourceSchedulingAppointment</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>1533916890</ElementPosition>
			<MenuItemName>HMPatientRelatedAppointmentsPart</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HMResourceSchedulingAppointmentDetails</Name>
			<DataSource>HMResourceSchedulingAppointment</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>1840700268</ElementPosition>
			<MenuItemName>HMResourceSchedulingAppointmentDetails</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>