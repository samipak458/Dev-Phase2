<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMAdvanceSearchAppoitments</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMAdvanceSearchAppoitments extends FormRun
{
    RecId   patientId;
    boolean allStatus;
}
]]></Source>
			</Method>
			<Method>
				<Name>applyFilter</Name>
				<Source><![CDATA[
    public void applyFilter(boolean _allStatus)
    {
        HMResourceSchedulingAppointment     hmResourceSchedulingAppointment;
        HMResourceSchedulingPlanningObject  hmResourceSchedulingPlanningObject;
        HMOPApointmentsHistoryTmp           hmOPApointmentsHistoryTmpFill;
        HMWaitingList                       hmWaitingList;
        str apptTime,format;
        HMOPApointmentsHistoryTmp.clear();
    
        if (patientId)
        {
            if (_allStatus)
            {
                while select * from HMResourceSchedulingAppointment
                    join * from hmResourceSchedulingPlanningObject
                    where HMResourceSchedulingAppointment.HMResourceSchedulingPlanningObject == hmResourceSchedulingPlanningObject.RecId
                    && hmResourceSchedulingPlanningObject.CaseType != HMCaseType::InPatient
                    && HMResourceSchedulingAppointment.HMPatient == patientId
                {
                    hmOPApointmentsHistoryTmpFill.Date              = HMResourceSchedulingAppointment.AppointmentDate;
    
                    apptTime    = strDel(time2str(HMResourceSchedulingAppointment.AppointmentTime,TimeSeparator::Colon,TimeFormat::AMPM),6,8);
                    format      = subStr(time2str(HMResourceSchedulingAppointment.AppointmentTime,TimeSeparator::Colon,TimeFormat::AMPM),9,11);
    
                    hmOPApointmentsHistoryTmpFill.Time              =  apptTime + format;
                    hmOPApointmentsHistoryTmpFill.Physician         = HMResourceSchedulingAppointment.getAppointmentPhysician();
                    hmOPApointmentsHistoryTmpFill.AppointmentStatus = enum2str(HMResourceSchedulingAppointment.AppointmentStatus);
                    hmOPApointmentsHistoryTmpFill.insert();
                }
            }
            else
            {
                while select * from HMResourceSchedulingAppointment
                    join * from hmResourceSchedulingPlanningObject
                    where HMResourceSchedulingAppointment.HMResourceSchedulingPlanningObject == hmResourceSchedulingPlanningObject.RecId
                    && hmResourceSchedulingPlanningObject.CaseType != HMCaseType::InPatient
                    && HMResourceSchedulingAppointment.HMPatient == patientId
                    && HMResourceSchedulingAppointment.AppointmentStatus == AppointmentStatus.selection()
                {
                    hmOPApointmentsHistoryTmpFill.Date              = HMResourceSchedulingAppointment.AppointmentDate;
    
                    apptTime    = strDel(time2str(HMResourceSchedulingAppointment.AppointmentTime,TimeSeparator::Colon,TimeFormat::AMPM),6,8);
                    format      = subStr(time2str(HMResourceSchedulingAppointment.AppointmentTime,TimeSeparator::Colon,TimeFormat::AMPM),9,11);
    
                    hmOPApointmentsHistoryTmpFill.Time              =  apptTime + format;
                    hmOPApointmentsHistoryTmpFill.Physician         = HMResourceSchedulingAppointment.getAppointmentPhysician();
                    hmOPApointmentsHistoryTmpFill.AppointmentStatus = enum2str(HMResourceSchedulingAppointment.AppointmentStatus);
                    hmOPApointmentsHistoryTmpFill.insert();
                }
            }
    
            if (_allStatus)
            {
                while select * from  hmWaitingList
                    where hmWaitingList.HMPatient == patientId
                    && hmWaitingList.Status != HMWaitingListStatus::Scheduled
                    && (hmWaitingList.WaitType != HMWaitType::Admission && hmWaitingList.WaitType != HMWaitType::Transfer)
                {
                    hmOPApointmentsHistoryTmpFill.Date              = hmWaitingList.ExpectedDate;
                    hmOPApointmentsHistoryTmpFill.Time              = "";
                    hmOPApointmentsHistoryTmpFill.Physician         = "";
                    hmOPApointmentsHistoryTmpFill.WaitNumber        = hmWaitingList.WaitNumber;
                    hmOPApointmentsHistoryTmpFill.WaitStatus        = enum2str(hmWaitingList.Status);
                    hmOPApointmentsHistoryTmpFill.AppointmentStatus = "";
                    hmOPApointmentsHistoryTmpFill.insert();
                }
            }
            else
            {
                if (AppointmentStatus.selection() == HMResourceSchedulingAppointmentStatus::Open)
                {
                    while select * from  hmWaitingList
                        where hmWaitingList.HMPatient == patientId
                        && hmWaitingList.Status == HMWaitingListStatus::Open
                        && (hmWaitingList.WaitType != HMWaitType::Admission && hmWaitingList.WaitType != HMWaitType::Transfer)
                    {
                        hmOPApointmentsHistoryTmpFill.Date              = hmWaitingList.ExpectedDate;
                        hmOPApointmentsHistoryTmpFill.Time              = "";
                        hmOPApointmentsHistoryTmpFill.Physician         = "";
                        hmOPApointmentsHistoryTmpFill.WaitNumber        = hmWaitingList.WaitNumber;
                        hmOPApointmentsHistoryTmpFill.WaitStatus        = enum2str(hmWaitingList.Status);
                        hmOPApointmentsHistoryTmpFill.AppointmentStatus = "";
                        hmOPApointmentsHistoryTmpFill.insert();
                    }
                }
                else if (AppointmentStatus.selection() == HMResourceSchedulingAppointmentStatus::Cancelled)
                {
                    while select * from  hmWaitingList
                        where hmWaitingList.HMPatient == patientId
                        && hmWaitingList.Status == HMWaitingListStatus::Cancelled
                        && (hmWaitingList.WaitType != HMWaitType::Admission && hmWaitingList.WaitType != HMWaitType::Transfer)
                    {
                        hmOPApointmentsHistoryTmpFill.Date              = hmWaitingList.ExpectedDate;
                        hmOPApointmentsHistoryTmpFill.Time              = "";
                        hmOPApointmentsHistoryTmpFill.Physician         = "";
                        hmOPApointmentsHistoryTmpFill.WaitNumber        = hmWaitingList.WaitNumber;
                        hmOPApointmentsHistoryTmpFill.WaitStatus        = enum2str(hmWaitingList.Status);
                        hmOPApointmentsHistoryTmpFill.AppointmentStatus = "";
                        hmOPApointmentsHistoryTmpFill.insert();
                    }
                }
            }
    
            HMOPApointmentsHistoryTmp.setTmpData(hmOPApointmentsHistoryTmpFill);
            HMOPApointmentsHistoryTmp_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPatient</Name>
				<Source><![CDATA[
    public void getPatient(Common _record)
    {
        patientId   = _record.RecId;
    
        Patient.text(HMPatient::find(patientId).PatientName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        allStatus = true;
        this.getPatient(element.args().record());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMOPApointmentsHistoryTmp</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(tableNum(HMOPApointmentsHistoryTmp)).addSortField(fieldNum(HMOPApointmentsHistoryTmp,Date),SortOrder::Descending);
            this.query().dataSourceTable(tableNum(HMOPApointmentsHistoryTmp)).addSortField(fieldNum(HMOPApointmentsHistoryTmp,Time),SortOrder::Descending);
        
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Search</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.applyFilter(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Reset</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            HMOPApointmentsHistoryTmp.clear();
            AppointmentStatus.selection(0);
            element.applyFilter(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Patient</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMPatientAdvanceLookup));
            args.caller(element);
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HMPatient           hmPatientLocal;
            DirPartyTable       dirPartyTableLocal;
            CustTable           custTableLocal;
            ret = super();
        
            if(ret)
            {
                if (this.valueStr() != "")
                {
                    select * from hmPatientLocal
                        join * from custTableLocal
                        join * from dirPartyTableLocal
                        where hmPatientLocal.CustTable == custTableLocal.RecId
                        && custTableLocal.Party == dirPartyTableLocal.RecId
                        && dirPartyTableLocal.Name == this.valueStr();
        
                    if (hmPatientLocal.RecId)
                    {
                        //flag = true;
                        element.getPatient(hmPatientLocal);
                    }
                    else
                    {
                        warning(strFmt("@SYS316757",'patient'));
                        this.text(HMPatient::find(patientId).PatientName());
                    }
                }
                else
                {
                    element.getPatient(hmPatientLocal);
        
                }
        
        
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AppointmentStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
        
            // info((AppointmentStatus.valueStr()));
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMOPApointmentsHistoryTmp</Name>
			<Table>HMOPApointmentsHistoryTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AppointmentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MRN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Physician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Time</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WaitNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WaitStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MAZ8247</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Search</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ6421</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS60181</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Reset</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ3443</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@PRO1821</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Patient</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@MAZ1881</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Label>@MAZ9</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>AppointmentStatus</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<EnumType>HMResourceSchedulingAppointmentStatus</EnumType>
						<Label>@MAZ1702</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group_</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>HMOPApointmentsHistoryTmp_Date</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Date</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMOPApointmentsHistoryTmp_Time</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Time</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMOPApointmentsHistoryTmp_WaitNumber</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WaitNumber</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMOPApointmentsHistoryTmp_WaitStatus</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WaitStatus</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMOPApointmentsHistoryTmp_AppointmentStatus</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AppointmentStatus</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMOPApointmentsHistoryTmp_AppointmentPhysician</Name>
										<ElementPosition>1994091957</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Physician</DataField>
										<DataSource>HMOPApointmentsHistoryTmp</DataSource>
										<Label>@MAZ65</Label>
									</AxFormControl>
								</Controls>
								<DataSource>HMOPApointmentsHistoryTmp</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<LeftMargin>1</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>1</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<Style>DialogContent</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>