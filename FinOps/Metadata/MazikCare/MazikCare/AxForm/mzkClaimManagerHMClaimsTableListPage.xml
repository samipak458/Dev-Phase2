<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>mzkClaimManagerHMClaimsTableListPage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class mzkClaimManagerHMClaimsTableListPage extends FormRun 
{              
    CustCollectionsAgent mzkCustCollectionsAgent = CustCollectionsAgent::findCurrentAgent();
    boolean              isMultiSelectPoolFilterEnabled = true;

}
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void run()
    {
        HMClaimTable_ds.queryBuildDataSource().firstFast(true);
        
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterPoolOnClaims</Name>
				<Source><![CDATA[
    /// <summary>
    /// filter the pool on claims.
    /// </summary>
    public void filterPoolOnClaims()
    {
        str                 pools = MultiSelectPoolFilter.text() != "" ? MultiSelectPoolFilter.text() : CurrentUserPools.text();
        container           poolCon = str2con(pools, ";");
        int                 i;
        CustCollectionsPool custCollectionsPool;
        str                 pool;

        HMClaimTable_ds.queryBuildDataSource().clearRange(fieldNum(HMClaimTable, ClaimPool));

        for (i = 1; i <= conLen(poolCon); i++)
        {
            select firstonly RecId from custCollectionsPool
                where custCollectionsPool.Name == conPeek(poolCon, i);

            pool += strFmt("%1,", custCollectionsPool.RecId);
        }

        HMClaimTable_ds.queryBuildDataSource().addRange(fieldNum(HMClaimTable, ClaimPool)).value(pool);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMClaimTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Apply ranges.
        /// </summary>
        public void init()
        {
            QueryBuildDataSource        qbds;
            QueryBuildRange             qbr;
            CustCollectionsAgentPool    CustCollectionsAgentPool;
            str                         DefaulPoolFiters;

            super();
            
            if(!mzkCustCollectionsAgent)
            {
                isMultiSelectPoolFilterEnabled = false;
            }
            else
            {
                select firstonly RecId from custCollectionsAgentPool
                    where custCollectionsAgentPool.CustCollectionsAgent == mzkCustCollectionsAgent.RecId;

                if(custCollectionsAgentPool.RecId == 0)
                {
                    isMultiSelectPoolFilterEnabled = false;
                }
                else
                {
                    while select CustomerPoolId from custCollectionsAgentPool
                        where custCollectionsAgentPool.CustCollectionsAgent == mzkCustCollectionsAgent.RecId
                    {
                        DefaulPoolFiters += strFmt("%1;",custCollectionsAgentPool.CustomerPoolId);
                    }

                    DefaulPoolFiters = strDel(DefaulPoolFiters, strLen(DefaulPoolFiters) -0, 1);

                    MultiSelectPoolFilter.text(DefaulPoolFiters);
                    CurrentUserPools.text(DefaulPoolFiters);
                    
                }

            }

            qbds = this.queryBuildDataSource();

            if(!isMultiSelectPoolFilterEnabled || element.args().menuItemName() == menuitemDisplayStr(HMClaimManagerCWNAssignedPool))
            {
                MultiSelectPoolFilter.enabled(false);

                SysQuery::findOrCreateRange(qbds,fieldNum(HMClaimTable, ClaimPool)).value(queryValue(-1));
            }
            else
            {
                MultiSelectPoolFilter.enabled(isMultiSelectPoolFilterEnabled);

                element.filterPoolOnClaims();

                qbds.addRange(fieldNum(HMClaimTable, HMBalanceAmount)).value(SysQuery::valueNot(0));

                if (element.args().menuItemName() == menuitemDisplayStr(HMClaimManagerCWNAssignedAgent))
                {
                    qbds.addRange(fieldNum(HMClaimTable, ClaimAgent)).value(SysQuery::value(0));
                }
                else if (element.args().menuItemName() == menuitemDisplayStr(HMClaimAging30To60Days))
                {
                    qbds.addRange(fieldNum(HMClaimTable, MzkClaimAgingDays)).value(queryRange(30,60));
                }
                else if (element.args().menuItemName() == menuitemDisplayStr(HMClaimAging61To90Days))
                {
                    qbds.addRange(fieldNum(HMClaimTable, MzkClaimAgingDays)).value(queryRange(61,90));
                }
                else if (element.args().menuItemName() == menuitemDisplayStr(HMClaimAging91To120Days))
                {
                    qbds.addRange(fieldNum(HMClaimTable, MzkClaimAgingDays)).value(queryRange(91,120));
                }
                else if (element.args().menuItemName() == menuitemDisplayStr(HMClaimAging120PlusDays))
                {
                    qbds.addRange(fieldNum(HMClaimTable, MzkClaimAgingDays)).value(queryRange(121,""));
                }

            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>MultiSelectPoolFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// 
        /// </summary>
        public void lookup()
        {
            Query                       query = new Query();
            QueryBuildDataSource        qbdsCustCollectionsPool;
            QueryBuildRange             qbr;
            container                   con, selectFields;
            CustCollectionsAgentPool    custCollectionsAgentPool;
            CustCollectionsPool         custCollectionsPool;

            qbdsCustCollectionsPool = query.addDataSource(tableNum(CustCollectionsPool));
            qbdsCustCollectionsPool.addSelectionField(fieldNum(CustCollectionsPool, Name));
            qbdsCustCollectionsPool.addSelectionField(fieldNum(CustCollectionsPool, Description));

            qbr = qbdsCustCollectionsPool.addRange(fieldNum(CustCollectionsPool, Name));

            while select Name from custCollectionsPool
                where custCollectionsPool.Type == CustPoolType::Collection
                join custCollectionsAgentPool
                    where custCollectionsAgentPool.CustCollectionsAgent == mzkCustCollectionsAgent.RecId
                        && custCollectionsAgentPool.CustomerPoolId == custCollectionsPool.Name
            {
                con += queryValue(custCollectionsPool.Name);
            }

            qbr.value(con2str(con));

            selectFields = [tableNum(CustCollectionsPool), fieldNum(CustCollectionsPool, RecId)];

            SysLookupMultiSelectGrid::lookup(query, this, MultiSelectPoolFilter, this, selectFields);

            MultiSelectPoolFilter.modified();

        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret = super();

            element.filterPoolOnClaims();

            HMClaimTable_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AssignToMyQueue</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            MultiSelectionHelper	multiSelectionHelper;
            HMClaimTable		    claimTable;
            DirPartyTable           dirParty;
            DirPartyRelationship    dirPartyRelationship;
            Set                     strRecordSet = new Set(Types::String);

            multiSelectionHelper = MultiSelectionHelper::construct();
            multiSelectionHelper.parmDatasource(HMClaimTable_ds);
        
            claimTable = multiSelectionHelper.getFirst();

            while (claimTable)
            {
                strRecordSet.add(claimTable.PatientAccountNum);
           
                if(strRecordSet.elements() > 1)
                {
                    throw error("@Optum:ClaimsFromMultiplePatientsAreSelectedErrorMsg");
                }
            
                claimTable = multiSelectionHelper.getNext();
            }

            claimTable = multiSelectionHelper.getFirst();
            strRecordSet = new Set(Types::String);

            while (claimTable)
            {
                strRecordSet.add(claimTable.PoolName);
           
                if(strRecordSet.elements() > 1)
                {
                    throw error("@Optum:ClaimsFromMultiplePoolsAreSelectedErrorMsg");
                }
            
                claimTable = multiSelectionHelper.getNext();
            }

            claimTable = multiSelectionHelper.getFirst();

            while(claimTable)
            {
                ttsbegin;
        
                this.assignAgent(claimTable.RecId, mzkCustCollectionsAgent.RecId, claimTable.PoolName);
        
                ttscommit;
        
                claimTable = multiSelectionHelper.getNext();
            }

        }

]]></Source>
					</Method>
					<Method>
						<Name>assignAgent</Name>
						<Source><![CDATA[
        /// <summary>
        /// 
        /// </summary>
        /// <param name = "_hmClaimTable"></param>
        /// <param name = "_agentId"></param>
        /// <param name = "_poolId"></param>
        public void assignAgent(RecId _hmClaimTable, RecId _agentId, CustCollectionsPoolId _poolId)
        {
            HMClaimTable                claimTable;
            DirPartyTable               dirParty;
            DirPartyRelationship        dirPartyRelationship;
            CustCollectionsAgent        custCollectionsAgent;
            CustCollectionsAgentPool    custCollectionsAgentPool;

            select firstonly forupdate claimTable
                where claimTable.RecId ==  _hmClaimTable;

            select firstonly Name from dirParty
                join RecId from dirPartyRelationship
                    where dirPartyRelationship.ChildParty == dirParty.RecId
                join RecId from custCollectionsAgent
                    where custCollectionsAgent.DirPartyRelationship == dirPartyRelationship.RecId
                join RecId from custCollectionsAgentPool
                    where custCollectionsAgentPool.CustCollectionsAgent == custCollectionsAgent.RecId
                        && custCollectionsAgentPool.CustomerPoolId == _poolId
                        && custCollectionsAgent.RecId == _agentId;

            if(dirParty.RecId == 0)
            {
                throw error("@Optum:HMAgentDoesnotExistError");
            }
            else
            {
                claimTable.ClaimAgent = _agentId;
                claimTable.AgentName  = dirParty.Name;

                claimTable.update();
            }

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateMenuButton</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            //if(!HMClaimListPageInteraction::allRecordsHasSameStatus(HMClaimVersion_1.dataSource()))
            //{
            //warning("@MAZ13628");
            //return;
            //}
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_ClaimID</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args            args = new Args();
            HMClaimTable	claimTable;
            MenuFunction    menuFunction;
            
            select firstonly claimTable
                where claimTable.ClaimID == this.text();
            
            args.lookupRecord(claimTable);
            args.caller(element);
            
            menuFunction = new MenuFunction(menuItemDisplayStr(HMAllClaims), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_CaseNo</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args            args = new Args();
            HMCase          hmCase;
            MenuFunction    menuFunction;
    
            select firstonly hmCase
                where hmCase.CaseNo == this.text();
    
            args.record(hmCase);
            args.lookupRecord(hmCase);
            args.caller(element);
    
            menuFunction = new MenuFunction(menuItemDisplayStr(HMAllCaseListPage), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_PatientAccountNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args            args = new Args();
            MenuFunction    menuFunction;
            HMPatient       patient;
            CustTable       customer;
    
            select firstonly CustTable from patient
                join AccountNum from customer
                    where customer.RecId == patient.CustTable
                        && customer.AccountNum == this.text();
    
            args.record(patient);
            args.lookupRecord(patient);
            args.caller(element);
    
            menuFunction = new MenuFunction(menuItemDisplayStr(HMAllPatientsListPage), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_PatientName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args            args = new Args();
            MenuFunction    menuFunction;
            HMPatient       patient;
            CustTable       customer;

            select firstonly CustTable from patient
                join AccountNum from customer
                    where customer.RecId == patient.CustTable
                        && customer.AccountNum == HMClaimTable_PatientAccountNum.text();

            args.record(patient);
            args.lookupRecord(patient);
            args.caller(element);

            menuFunction = new MenuFunction(menuItemDisplayStr(HMAllPatientsListPage), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_PayorName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args                args = new Args();
            HMInsuranceCarrier	hmInsuranceCarrier1;
            MenuFunction        menuFunction;
    
            select firstonly hmInsuranceCarrier1
                where hmInsuranceCarrier1.Name == this.text();
    
            args.lookupRecord(hmInsuranceCarrier1);
            args.caller(element);
    
            menuFunction = new MenuFunction(menuItemDisplayStr(HMPayor), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMClaimTable_PoolName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            Args                args = new Args();
            CustCollectionsPool	custCollectionsPool;
            MenuFunction        menuFunction;
    
            select firstonly custCollectionsPool
                where custCollectionsPool.Name == this.text();
    
            args.lookupRecord(custCollectionsPool);
            args.caller(element);
    
            menuFunction = new MenuFunction(menuItemDisplayStr(CustCollectionsPool), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMClaimTable</Name>
			<Table>HMClaimTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgentName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClaimAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClaimAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClaimID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClaimPool</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBalanceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimLatestNoteCreatedBy_Internal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimLatestNoteDate_Internal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimLatestNote_Internal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMDenialDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMICDCode1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMICDCode2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMICDCode3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMICDCode4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLastApprovalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLastEdiGeneratedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRegionDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsClaimModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MzkClaimAgingDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayorClaimStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayorName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterPane</Name>
				<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
				<Pattern>FiltersAndToolbarInline</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>QuickFilter</Name>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>ContentGrid</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
											<Value>HMClaimTable_1_ClaimID</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MultiSelectPoolFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS10507</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CurrentUserPools</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Label>pool</Label>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ReassignClaimsGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>AssignToMyQueue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CommandButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@MAZ:HMAssignToMyWorkspaceLabel</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ReassignedClaims</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>HMClaimTable</DataSource>
										<MenuItemName>HMReassignedClaims</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<Text>@MAZ:HMPoolAgentAssign</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>UpdateMenuButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ7587</HelpText>
										<Type>MenuButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_InReview</Name>
												<ElementPosition>477218588</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimStatusInReview</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<Text>In Review</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_Submitted</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimStatusSubmit</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<Text>Submitted</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_Denied</Name>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimReasonDropDialogDenial</MenuItemName>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<Text>Denied</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_SubmitReady</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimStatusSubmitReady</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<Text>On-Hold</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_Paid</Name>
												<ElementPosition>1670265058</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimStatusPaid</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<ShowShortCut>No</ShowShortCut>
												<Text>Paid</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ClaimStatus_Approved</Name>
												<ElementPosition>1908874352</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<DataSource>HMClaimTable</DataSource>
												<MenuItemName>HMClaimStatusApproved</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Parameters>RefreshQuery</Parameters>
												<Text>Approved</Text>
											</AxFormControl>
										</Controls>
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS314354</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>ContentGrid</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Grid</Type>
				<WidthMode>SizeToContent</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_ClaimID</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ClaimID</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_CaseNo</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CaseNo</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_PatientAccountNum</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PatientAccountNum</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_PatientName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PatientName</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_PayorName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PayorName</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>HMClaimTable_HMBalanceAmount</Name>
						<Type>Real</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>HMBalanceAmount</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_PoolName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PoolName</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HMClaimTable_AgentName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>AgentName</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormInt64Control">
						<Name>HMClaimTable_MzkClaimAgingDays</Name>
						<Type>Int64</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>MzkClaimAgingDays</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>HMClaimTable_HMClaimDate</Name>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>HMClaimDate</DataField>
						<DataSource>HMClaimTable</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>HMClaimTable</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>