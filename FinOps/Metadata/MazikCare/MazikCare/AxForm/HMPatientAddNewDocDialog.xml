<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMPatientAddNewDocDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMPatientAddNewDocDialog extends FormRun
{
    #define.JPG(".JPG")
    #define.jpg(".jpg")
    #define.BMP(".BMP")
    #define.bmp(".bmp")

    HMPatient   patient;

    HMMemo        selectedFile;
    boolean         isNewRec;
    str             parm;

}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        Object                                  formRunObject;
        FormRun                                 formRun;
    
        super();
    
        formRun = element.args().caller();
    
        if (formHasMethod(formRun,identifierstr(refreshDocumentsGrid)))
        {
            formRunObject = formRun;
            formRunObject.refreshDocumentsGrid();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedDocuTypeId</Name>
				<Source><![CDATA[
    public DocuTypeId getSelectedDocuTypeId()
    {
        DocuType        docuType;
    
        if(cbxDocuTypeId.selection() == HMAttachmentDocType::CDSA)
        {
            docutype = DocuType::find(hmParameters::getCDSADocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::Document)
        {
            docutype = DocuType::find(hmParameters::getMedicalDocumentsDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::Other)
        {
            docutype = DocuType::find(hmParameters::getOtherDocumentsDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::Radiology)
        {
            docutype = DocuType::find(hmParameters::getRadiologyImagesDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::Patient)
        {
            docutype = DocuType::find(hmParameters::getPatientImageDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::CCD)
        {
            docutype = DocuType::find(hmParameters::getCCDDocumentDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::EducationalDocument)
        {
            docutype = DocuType::find(hmParameters::getEducationalDocumentsDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::EducationalURL)
        {
            docutype = DocuType::find(hmParameters::getEducationalURLDocuTypeId());
        }
        else if(cbxDocuTypeId.selection() == HMAttachmentDocType::Weblink)
        {
            docutype = DocuType::find(hmParameters::getWebLinkTypeId());
        }
        return docuType.TypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        parm = element.args().parm();
    
        // get patient record
        patient = element.args().record();

        // get file name
        str myFileName = element.args().parm();
        
        isNewRec = false;
    
        super();
    
    
        if(parm == 'OutStanding' || parm == 'Chart')
        {
            ButtonOpen.visible(true);
        }
        else
        {
            ButtonOpen.visible(false);
        }
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFileNameOk</Name>
				<Source><![CDATA[
    public boolean isFileNameOk()
    {
        Filename    onlyname;
        str 1       dummy;
        str         ext;
    
        [dummy, onlyname, ext] = fileNameSplit(Filename.text());
    
        return onlyname != '' && ext != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFileTypeOk</Name>
				<Source><![CDATA[
    public boolean isFileTypeOk()
    {
        DocuFileTypes   docuFileTypes;
        Filename        onlyname;
        str 1           dummy;
        str             ext;
    
        [dummy, onlyname, ext] = fileNameSplit(Filename.text());
    
        return !docuFileTypes.isEnabled(Global::strReplace(ext, '.', ''));
    
        //return onlyname != '' && ext != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLinkGroupControl</Name>
				<Source><![CDATA[
    public void updateLinkGroupControl(boolean _mandatory)
    {
        DocuRef_ds.object(fieldNum(DocuRef,Description)).mandatory(_mandatory);
        DocuRef_ds.object(fieldNum(DocuRef,Name)).mandatory(_mandatory);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocuRef</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
        
            docuRef.RefTableId = tableNum(HMPatient); //TableId, for which the attachement should be attached.
            docuRef.RefRecId = patient.RecId; //RecId, for which the attachement should be attached.
            docuRef.RefCompanyId = patient.dataAreaId; //CompanyId
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;
            DocuType    docuType;
        
            if(DocuRef.isNewRecord())
            {
                isNewRec = true;
        
                //if(cbxDocuTypeId.selection() == 0)
                //{
                    //warning("@MAZ2961");
                    //ret = false;
                //}
                if(FileSelection.visible() && Filename.visible())
                {
                    if(ret && Filename.text() == "")
                    {
                        warning("@MAZ2962");
                        ret = false;
                    }
        
                    if(ret && !(element.isFileNameOk()))
                    {
                        warning("@MAZ2963");
                        ret = false;
                    }
        
                    if(ret && !(element.isFileTypeOk()))
                    {
                        warning("@MAZ1317");
                        ret = false;
                    }
                }
        
                if(ret)
                {
                    if(!DocuRef.TypeId)
                    {
                        docuRef.TypeId = element.getSelectedDocuTypeId();
                    }
        
                    ret = super();
        
                    if(ret)
                    {
                        docuType = DocuType::find(docuRef.TypeId);
        
                        if(docuType.FilePlace == DocuFilePlace::Archive)
                        {
                            //todo: ax7 docuref
                            /*
                            if(!HMDocuAction::checkDirectoryPermission(docuType.getArchivePath()))
                            {
                                warning("@MAZ3859");
                                ret = false;
                            }
                            */
                        }
        
                    }
        
                }
            }
            else
            {
                ret = super();
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
        
            //cbxDocuTypeId.selection(0);
            Filename.text("");
            selectedFile = "";
        
            if(parm == 'OutStanding' || parm == 'Chart')
            {
                docuRef.HMAttachmentType = HMAttachmentDocType::Document;
                docuRef.TypeId = element.getSelectedDocuTypeId();
                cbxDocuTypeId.selection(HMAttachmentDocType::Document);
                cbxdocutypeid.allowedit(false);
                fileselection.enabled(true);
                filename.allowedit(true);
            }
            else if(parm == 'WebLink')
            {
                docuRef.HMAttachmentType = HMAttachmentDocType::Weblink;
                docuRef.TypeId = element.getSelectedDocuTypeId();
                cbxdocutypeid.allowEdit(false);
                fileselection.enabled(true);
                filename.allowedit(true);
            }
            else
            {
                cbxDocuTypeId.selection(0);
                cbxdocutypeid.allowedit(true);
                fileselection.enabled(true);
                filename.allowedit(true);
            }
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            HMPatient                           hmPatient;
            CustTable                           custTable;
            DocuActionArchive                   docuActionArchive;// Class that handles file attachment and archiving
            DocuRef                             docuRefUpdate;
            Object                              formRunObject;
            FormRun                             formRun;
           //HMSHA256   sha = new HMSHA256();
        
            if(parm == '')
            {
                hmPatient = HMPatient::find(element.args().record().RecId);
                custTable = CustTable::findRecId(hmPatient.CustTable);
            }
        
            ttsBegin;
        
            if(isNewRec)
            {
                docuRef.Restriction = DocuRestriction::Internal;
                docuRef.smmTable = boolean::true;
                if(parm == '')
                {
                    docuRef.Party = custTable.Party;
                }
        
                if(parm == 'OutStanding' || parm == 'Chart')
                {
                    docuRef.HMAttachmentType = HMAttachmentDocType::Document;
                }
        
                //docuRef.HMHashValue    = sha.getHash(selectedFile);
        
                super();
                if(FileSelection.visible() && Filename.visible())
                {
                    docuRefUpdate = DocuRef::findRecId(docuRef.RecId, true);
                    docuActionArchive = new DocuActionArchive();
                    // This action first displays a file selection dialog.
                    // After the file is selected designates a number sequence and stores the file to document archive.
                    //docuActionArchive.setDocuType(docuRefUpdate.TypeId);
                    //docuActionArchive.add(docuRefUpdate, selectedFile);
                }
        
                isNewRec = false;
        
                ttsCommit;
        
            }
            else
            {
                super();
        
                ttsCommit;
            }
        
            docuRef_ds.executeQuery();
        
            formRun = element.args().caller();
        
            if (formHasMethod(formRun,identifierstr(refreshDocumentsGrid)))
            {
                formRunObject = formRun;
                formRunObject.refreshDocumentsGrid();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if(ret)
            {
                if(docuRef.HMAttachmentType == HMAttachmentDocType::Weblink)
                {
                    Linkgroup.visible(true);
                    element.updateLinkGroupControl(true);
                }
                else
                {
                    Linkgroup.visible(false);
                    element.updateLinkGroupControl(false);
                }
                Filename.visible(!Linkgroup.visible());
                DocuRef_HMHashValue.visible(!Linkgroup.visible());
                Comments.visible(!Linkgroup.visible());
                if(DocuRef.RecId)
                {
                    Filename.allowEdit(false);
                    Filename.text(DocuRef.Name);
                    //cbxDocuTypeId.selection(0);
                    cbxDocuTypeId.allowEdit(false);
                    FileSelection.enabled(true);
                    ButtonOpen.enabled(true);
        
                }
                else
                {
                    ButtonOpen.enabled(false);
                    if(parm == 'OutStanding' || parm == 'Chart')
                    {
                        cbxDocuTypeId.selection(HMAttachmentDocType::Document);
                        cbxdocutypeid.allowedit(false);
                        fileselection.enabled(true);
                        filename.allowedit(true);
        
                    }
                    else if(parm == 'WebLink')
                    {
                        docuRef.HMAttachmentType = HMAttachmentDocType::Weblink;
                        docuRef.TypeId = element.getSelectedDocuTypeId();
                        cbxdocutypeid.allowEdit(false);
                        fileselection.enabled(true);
                        filename.allowedit(true);
                    }
                    else
                    {
                        cbxDocuTypeId.selection(0);
                        cbxdocutypeid.allowedit(true);
                        fileselection.enabled(true);
                        filename.allowedit(true);
                    }
        
                    filename.text("");
                    selectedfile = "";
        
        
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            if(parm == '' || parm == 'WebLink')
            {
                this.query().dataSourceTable(tableNum(DocuRef)).clearDynalinks();
                this.query().dataSourceTable(tableNum(DocuRef)).addRange(fieldNum(DocuRef,RefRecId)).value(SysQuery::value(patient.RecId));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            super();

            DocuRef docuRefForNewButton = DocuRef::findRecId(docuRef.RecId, true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            DialogButton                        dialogButton;
            DocuRef                             docuRefDelete;
            DocuRef                             docuRefLocal;
            Object                              formRunObject;
            FormRun                             formRun;
            boolean                             isMarked = false;
        
            super();
        
        
            dialogButton=Box::yesNo("@MAZ2964",DialogButton::No);
        
        
            if(dialogButton==DialogButton::Yes)
            {
                docuRefLocal = DocuRef_DS.getFirst(1);
        
                ttsbegin;
                while (docuRefLocal)
                {
                    isMarked = true;
        
                    docuRefDelete=DocuRef::findRecId(docuRefLocal.recId,true);
                    docuRefDelete.delete();
                    docuRefLocal = DocuRef_DS.getNext();
                }
                ttsCommit;
        
                if(DocuRef.RecId && !(isMarked))
                {
                    ttsbegin;
                    docuRefDelete=DocuRef::findRecId(DocuRef.recId,true);
                    docuRefDelete.delete();
                    ttsCommit;
                }
            }
        
            DocuRef_DS.executeQuery();
        
            if(DocuRef.RecId == 0)
            {
                if(parm == 'OutStanding' || parm == 'Chart')
                {
                    cbxDocuTypeId.selection(HMAttachmentDocType::Document);
                }
                else
                {
                    cbxDocuTypeId.selection(0);
                }
                Filename.text("");
                selectedFile = "";
                //Filename.allowEdit(false);
                //cbxDocuTypeId.allowEdit(false);
                //FileSelection.enabled(false);
            }
        
            formRun = element.args().caller();
        
            if (formHasMethod(formRun,identifierstr(refreshDocumentsGrid)))
            {
                formRunObject = formRun;
                formRunObject.refreshDocumentsGrid();
            }
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonOpen</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            DocuRef         docuRefLocal=DocuRef::findRecId(DocuRef.RecId);
            DocuAction      docuActionLocal=DocuAction::newDocuType(docuRefLocal.docuType());
            Args            args=new Args();
        
            args.record(docuRef);
            args.parmEnumType(enumNum(DocuCode));
            args.parmEnum(DocuCode::Open);
            //todo: ax7 docuref
        /*
            docuActionLocal.findDocuTable(docuRefLocal.RefTableId);
            docuActionLocal.run(args);
        */
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>cbxDocuTypeId</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if(ret && cbxDocuTypeId.selection()!=0)
            {
                FileSelection.enabled(true);
                filename.allowedit(true);
            }
            else if(cbxDocuTypeId.selection()==0)
            {
                //FileSelection.enabled(false);
                //filename.allowedit(false);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocuRef</Name>
			<Table>DocuRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Author</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncyclopediaItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAttachmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMHashValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Restriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailEntryID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailStoreID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MAZ2537</Caption>
		<ColumnSpace xmlns="">0</ColumnSpace>
		<ColumnSpaceMode xmlns="">Fixed</ColumnSpaceMode>
		<Columns xmlns="">3</Columns>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Scrollbars xmlns="">No</Scrollbars>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<TitleDataSource xmlns="">DocuRef</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DocuRef_Name</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>DocuRef</DataSource>
								<Label>@SYS53125</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DocuRef_TypeId</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TypeId</DataField>
								<DataSource>DocuRef</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>DocuRef</DataSource>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<FramePosition>Inside</FramePosition>
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPane</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneTabControl">
								<Name>ActionPaneTab</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPaneTab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>NewDelete</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>NewButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<Command>New</Command>
												<NormalImage>New</NormalImage>
												<Primary>Yes</Primary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>DeleteButton</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Delete</NormalImage>
												<Text>@SYS14425</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonOpen</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ2293</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<ImageLocation>AOTResource</ImageLocation>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>HM_Open_document_16x16_png</NormalImage>
												<Text>@SYS80095</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DialogContent</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupMain</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>cbxDocuTypeId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>HMAttachmentType</DataField>
										<DataSource>DocuRef</DataSource>
										<Label>Cbx document type</Label>
										<Items />
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FileSelection</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_TypeId1</Name>
										<ElementPosition>572662304</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TypeId</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Filename</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DisplayHeight>1</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
										<ExtendedDataType>Filename</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_HMHashValue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>HMHashValue</DataField>
										<DataSource>DocuRef</DataSource>
										<DisplayHeight>3</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
										<Label>@MAZ5014</Label>
										<MultiLine>Yes</MultiLine>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Comments</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>DocuRef</DataSource>
										<DisplayHeight>3</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
									</AxFormControl>
								</Controls>
								<TopMargin>0</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LinkGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_Description</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>DocuRef</DataSource>
										<Label>@SYS81325</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Link</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>DocuRef</DataSource>
										<Label>@SYS26290</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_Notes</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>