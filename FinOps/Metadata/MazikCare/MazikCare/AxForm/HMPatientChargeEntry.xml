<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMPatientChargeEntry</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMPatientChargeEntry extends FormRun
{
    date currentDate;
    boolean resetCliciked;
    HMChargeEntryClass                  objChargeEntryClass;
    HMCase                              hmCase;
    QueryBuildRange                     qbrDateHead;
    Notes                               dateValStr,dtrvalue;
    InventDimCtrl_Frm_EditDimensions    inventDimFormSetup;
    RecId                               HMOrganizationalUnit;
    //Zain  MazikCare
    //RefRecId                            selectedHMFinancialCase;
    InventBatchId                       selectedInventBatchId;
    AmountMST                           enteredDeductible;




}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    //Zain  MAzikcare
    public void activate(boolean _active)
    {
        super(_active);
        hmpatientcase_ds.research(true);
        hmpatientcase_ds.reread();
        HMPatientChargeEntryTable_DS.active();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRecord</Name>
				<Source><![CDATA[
    public void createRecord(str _formDataSourceName, boolean _append = false)
    {
        super(_formDataSourceName, _append);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateSearchClick</Name>
				<Source><![CDATA[
    public void dateSearchClick()
    {
        DateSearch.clicked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateHeaderDateRanges</Name>
				<Source><![CDATA[
    public boolean generateHeaderDateRanges()
    {
        str dateFromStr;
        str dateToStr;
    
    
        if (FromDate.valueStr() != '' || ToDate.valueStr() != '' )
        {
            if (ToDate.Datevalue() > dateNull() && FromDate.dateValue() > ToDate.Datevalue())
            {
                warning("@MAZ7069");
                FromDate.dateValue(dateNull());
                ToDate.dateValue(dateNull());
                DateSearch.enabled(false);
                return false;
            }
    
            if (FromDate.dateValue() > dateNull())
                dateFromStr = date2StrXpp(FromDate.dateValue());
            if (ToDate.dateValue() > dateNull())
                dateToStr = date2StrXpp(ToDate.dateValue());
    
            //if (FromDate.dateValue() > dateNull() && ToDate.dateValue() > dateNull())
            //dtrvalue=SysQuery::range(FromDate.dateValue(),ToDate.dateValue());
    
            //if (qbrDateHead == null)
            //{
            qbrDateHead = null;
            qbrDateHead = element.initHeaderDateRange();
            //}
            if (dateFromStr != '' && dateToStr == '')
            {
                dateValStr = strFmt('((AddmisionDate >= %1))', dateFromStr);
            }
            else if (dateToStr != '' && dateFromStr == '')
            {
                dateValStr = strFmt('((AddmisionDate <= %1))', dateToStr);
            }
            else if (dateFromStr != '' && dateToStr != '')
            {
                dateValStr = strFmt('((AddmisionDate >= %1) && (AddmisionDate <= %2))',
                dateFromStr, dateToStr);
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeEntryHeaderMap</Name>
				<Source><![CDATA[
    public Map getChargeEntryHeaderMap()
    {
        Map markedChargeEntry = new Map(Types::Int64,Types::Record);
        markedChargeEntry.insert(HMPatientChargeEntryTable.RecId,HMPatientChargeEntryTable);
        return markedChargeEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargeEntryLinesTmp</Name>
				<Source><![CDATA[
    public HMPatientChargeEntryLinesTmp getChargeEntryLinesTmp()
    {
        HMPatientChargeEntryLinesTmp HMPatientChargeEntryLineTmp;
        HMPatientChargeEntryLine    HMPatientChargeEntryLineLocal;
        HMCaseTrans                 hmCaseTransLocal;
    
        while select RecId from HMPatientChargeEntryLineLocal
            join hmCaseTransLocal
            where hmCaseTransLocal.recid == HMPatientChargeEntryLineLocal.HMCaseTrans
            && hmCaseTransLocal.CashAmount > 0
            && HMPatientChargeEntryLineLocal.HMPatientChargeEntryTable == HMPatientChargeEntryTable.RecId
            && HMPatientChargeEntryLineLocal.CustInvoiceLine == 0
        {
            HMPatientChargeEntryLineTmp.clear();
            HMPatientChargeEntryLineTmp.HMPatientChargeEntryLine = HMPatientChargeEntryLineLocal.RecId;
            HMPatientChargeEntryLineTmp.HMPatientChargeEntryTable = HMPatientChargeEntryTable.RecId;
            HMPatientChargeEntryLineTmp.Marked = NoYes::Yes;
            HMPatientChargeEntryLineTmp.insert();
        }
        return HMPatientChargeEntryLineTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPatient</Name>
				<Source><![CDATA[
    public  void getPatient(Common _record)
    {
        HMPatientChargeEntryTable.HMPatient = _record.RecId;
        Patient.text(HMPatient::find(_record.RecId).PatientName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCaseTransInvetoryStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Created by Zain
    /// </summary>
    /// <param name = "_caseTrans"></param>
    /// <param name = "_hmserviceStatus"></param>
    public void updateCaseTransInvetoryStatus(List _caseTransList, HMServiceStatus _hmserviceStatus)
    {
        HMCaseTrans caseTransLocal, caseTransUpdate;
        ListEnumerator    enumerator;
        HMPatientChargeEntryLine    hmPatientChargeEntryLineLocal;

        enumerator = _caseTransList.getEnumerator();
        try
        {
            while (enumerator.moveNext())
            {
                caseTransLocal = enumerator.current();
                caseTransUpdate = HMCaseTrans::find(caseTransLocal.RecId,true);

    
                if (inventTable::find(caseTransUpdate.ItemId).ItemType == ItemType::Service)
                {
                    caseTransUpdate.HMServiceStatus = _hmserviceStatus;
                    //Musab
                    hmPatientChargeEntryLineLocal = HMPatientChargeEntryLine::findByCaseTrans(caseTransUpdate.RecId, true);
                    hmPatientChargeEntryLineLocal.PerformedDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
                    ttsBegin;
                    caseTransUpdate.doUpdate();
                    // Musab.
                    hmPatientChargeEntryLineLocal.doUpdate();
                    ttsCommit;
                }
                
            }
            
        }
        catch 
        {
            throw warning("Error in changing status");
        }
       
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPricefromRule</Name>
				<Source><![CDATA[
    public container getPricefromRule(RecId  _contractRecId, ItemId _item, ItemGroupId _itemGroup, LogisticsAddressStateId _state, 
                        LogisticsAddressStateId _stateGroup, InventDimId           _inventDimId, UnitOfMeasureSymbol   _unitID         = '',
                              HMCaseType            _hmCaseType = HMCaseType::All,
                              HMCode                 _revenueCode = '',
                              HMCode                 _CPTCode = '',
                              RecId                 _modifier1 = 0,
                              RecId                 _modifier2 = 0,
                              RecId                 _modifier3 = 0,
                              RecId                 _modifier4 = 0)
    {
        TableGroupAll       stateCode = TableGroupAll::GroupId;
        str stateGroup = "";
        TableGroupAll       productCode = TableGroupAll::GroupId;
        str productGroup = "";
        
        HMPriceMatrix       priceMatrix;
        HMPriceRuleTypeDetails  priceRuleTypeDetails;
        HMPriceListMatrix   priceListMatrix;
        PriceDiscAdmTable   priceDiscAdmTable;
        PriceDiscAdmTrans   priceDiscAdmTrans;

        Integer             idx;
        Map priceMap = new Map(Types::Real, Types::Real);
        AmountMST finalPrice = 0, expectedPrice = 0;
        MapEnumerator   mapEnmr;

        idx = 0;

        while (idx < 9)
        {
            productCode         = idx mod 3;
            stateCode           = idx div 3;

            switch(productCode)
            {
                case TableGroupAll::Table:
                    productGroup = _item;
                    break;
                case TableGroupAll::GroupId:
                    productGroup = _itemGroup;
                    break;
                case TableGroupAll::All:
                    productGroup = "";
                    break;
            }

            switch(stateCode)
            {
                case TableGroupAll::Table:
                    stateGroup = _state;
                    break;
                case TableGroupAll::GroupId:
                    stateGroup = _stateGroup;
                    break;
                case TableGroupAll::All:
                    stateGroup = "";
                    break;
            }

            select RecId, HMPriceRuleType from priceMatrix
                where priceMatrix.HMInsuranceContract == _contractRecId
                && priceMatrix.ProductCode == productCode
                && priceMatrix.Product == productGroup
                && priceMatrix.State == stateGroup
                && priceMatrix.StateCode == stateCode
                && priceMatrix.StartDate <= DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
                && priceMatrix.EndDate >= DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());

            if(priceMatrix.RecId)
            {
                while select * from priceRuleTypeDetails
                    order by priceRuleTypeDetails.Priority
                    where priceRuleTypeDetails.HMPriceRuleType == priceMatrix.HMPriceRuleType
                {                    
                    int priceGroup = 1;

                    while(priceGroup)
                    {
                        while select * from priceListMatrix
                        order by  priceListMatrix.Priority
                        where priceListMatrix.HMPriceMatrix == priceMatrix.RecId
                            && priceListMatrix.PriceGroup == priceGroup
                            join * from priceDiscAdmTrans
                            join RecId from priceDiscAdmTable
                            where priceDiscAdmTrans.JournalNum == priceDiscAdmTable.JournalNum
                            && priceDiscAdmTable.RecId == priceListMatrix.PriceDiscAdmTable
                            && priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table//TableGroupAll::Table
                            && priceDiscAdmTrans.ItemRelation == _item
                            && priceDiscAdmTrans.InventDimId == _inventDimId
                            && priceDiscAdmTrans.UnitId       == _unitID
                            && priceDiscAdmTrans.HMCaseType == _hmCaseType
                          //  && priceDiscAdmTrans.HMCPTHCPCCode == _CPTCode
                            && priceDiscAdmTrans.HMRevenueCode == _revenueCode
                            && priceDiscAdmTrans.Modifier1 == _modifier1
                            && priceDiscAdmTrans.Modifier2 == _modifier2
                            && priceDiscAdmTrans.Modifier3 == _modifier3
                            && priceDiscAdmTrans.Modifier4 == _modifier4
                        { 
                            Amount priceTmp = priceDiscAdmTrans.Amount;
                            Amount expectedPriceTmp = priceDiscAdmTrans.HMExpectedAmount;

                            switch(priceListMatrix.Operator)
                            {
                                case HMPriceOperator::Multiplication:
                                    priceTmp = priceTmp * priceListMatrix.OperatorValue;
                                    break;
                                case HMPriceOperator::Division:
                                    priceTmp = priceTmp / priceListMatrix.OperatorValue;
                                    break;
                                case HMPriceOperator::Minus:
                                    priceTmp -= priceListMatrix.OperatorValue;
                                    break;
                                case HMPriceOperator::Plus:
                                    priceTmp += priceListMatrix.OperatorValue;
                                    break;                                
                            }

                            if(priceRuleTypeDetails.PricingRule == HMPricingRule::HigherThan)
                            {
                                if(priceTmp >= priceRuleTypeDetails.Values)
                                {                                    
                                    priceMap.insert(priceTmp, expectedPriceTmp);
                                    finalPrice = priceTmp;
                                    expectedPrice = expectedPriceTmp;
                                }
                            }
                            else
                            {
                                priceMap.insert(priceTmp, expectedPriceTmp);
                            }
                        }

                        if(priceRuleTypeDetails.Evaluate == HMEvaluate::IntraPriceGroup)                            
                        {
                            if(priceMap.empty())
                            {
                                priceGroup++;

                                select count(recId) from priceListMatrix
                                    order by  priceListMatrix.Priority
                                    where priceListMatrix.HMPriceMatrix == priceMatrix.RecId
                                        && priceListMatrix.PriceGroup == priceGroup;

                                if(!priceListMatrix.RecId)
                                {
                                    break;
                                }
                            }
                            else
                            {
                                break;
                            }
                        }
                        else
                        {
                            break;
                        }
                    }
                    
                    if(priceRuleTypeDetails.PricingRule == HMPricingRule::Lowest)
                    {
                        mapEnmr = priceMap.getEnumerator();
                        AmountMST priceTmp = 0, expectedPriceTmp = 0;
                        
                        while(mapEnmr.moveNext())
                        {
                            if(priceTmp == 0)
                            {
                                priceTmp = mapEnmr.currentKey();
                                expectedPriceTmp = mapEnmr.currentValue();
                            }
                            else if(mapEnmr.current() < priceTmp)
                            {
                                priceTmp = mapEnmr.currentKey();
                                expectedPriceTmp = mapEnmr.currentValue();
                            }
                        }

                        finalPrice = priceTmp;
                        expectedPrice = expectedPriceTmp;
                    }

                    if(finalPrice)
                    {
                        break;
                    }
                }

                break;
            }
            else
            {
                idx++;
            }
        }

        return [finalPrice, expectedPrice];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrice</Name>
				<Source><![CDATA[
    public AmountMST getPrice()
    {
        AmountMST               price;
        boolean                 isValid = true;
        HMParameters            parameters;
        HMItemCptPcsCodes       pcsCodes;
        HMProcedureCodeMaster   procedureCode;
        
        
        // Marij
        Price           myPrice;
        container       priceContainer;
        InventDim       inventDimLocal;
        HMCase          hmCaseBuffer          = HMCase::find(HMPatientChargeEntryTable.HMCase);
        InventDim       inventDimBuffer       = InventDim::find(HMCaseTrans.InventDim);
        InventTable     inventTableBuffer     = InventTable::find(HMCaseTrans.ItemId);
        HMCaseInsurance hmCaseInsuranceBuffer = HMCaseInsurance::findByCase(hmCaseBuffer.RecId);
        HMPatientInsurance hmPatientInsuranceLocal = HMPatientInsurance::find(hmCaseInsuranceBuffer.HMPatientInsurance);
        HMInsuranceContract hmInsuranceContract = HMInsuranceContract::find(hmPatientInsuranceLocal.HMInsuranceContract, false, ConcurrencyModel::Auto);
        //HMInsuranceContract hmInsuranceContract = HMInsuranceContract::findByCarrierCombo(HMInsuranceContractCarrierCombination::findByInsCarrier(HMInsuranceCarrier::findByCode(hmPatientInsuranceLocal.InsuranceCarrier).RecId).RecId);
        HMInsuranceContractClassOrPlans contractClassOrPlans = HMInsuranceContractClassOrPlans::find(hmPatientInsuranceLocal.HMInsuranceContractClassOrPlans, false, ConcurrencyModel::Auto);
        HMInsuranceNetwork insuranceNetworkBuffer = HMInsuranceNetwork::find(contractClassOrPlans.HMContractClassNetwork);
        container   priceAgreementContainer;
        container   discContainer;
        //PriceDisc   PriceDisc;
        //Zain
        HMPriceDisc priceDisc;
        DiscAmountMST   discAmount;
        DiscPct         discPct;
        //Zain
        // Marij
        
        parameters = HMParameters::find();

        if (parameters.isAllowChargeCodeEditing)
        {
            select RecId from pcsCodes
                where pcsCodes.ItemId == HMCaseTrans.ItemId
                join procedureCode
                    where procedureCode.RecId == pcsCodes.HMProcedureCodeMaster
                    && procedureCode.Type == HMProcCodeSearchType::CPT_HCPS;

            if (pcsCodes.RecId)
            {
                isValid = true;
            }
            else
            {
                isValid = false;
            }
        }
        else
        {
            isValid = true;
        }

        if (isValid)
        {
            // Marij
            if(!hmCaseInsuranceBuffer) //self-pay
            {
                inventDimLocal.InventSiteId = inventDimBuffer.InventSiteId;
                inventDimLocal.InventLocationId = inventDimBuffer.InventLocationId;
                //inventDimLocal.wMSLocationId = inventDimBuffer.wMSLocationId;
                inventDimLocal.inventBatchId = (inventDimBuffer.inventBatchId == "") ? selectedInventBatchId : inventDimBuffer.inventBatchId;
                inventDimLocal = InventDim::findOrCreate(inventDimLocal);

                priceDisc = new HMPriceDisc(ModuleInventPurchSales::Sales, inventTableBuffer.ItemId,
                    inventDimLocal,
                    HMCaseTrans.salesUnitId(),
                    DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                    1,
                    CustTable.AccountNum,
                    CustTable::find(CustTable.AccountNum).Currency);

                if (priceDisc.findPrice(CustTable.PriceGroup, 0, 0, 0, hmCaseBuffer.HMCaseType))
                    price = priceDisc.price();
                else if (priceDisc.findItemPrice())
                    price = priceDisc.price();
            }
            // Marij
            else //insurance
            {
                //Zain
                inventDimLocal.InventSiteId = inventDimBuffer.InventSiteId;
                inventDimLocal.InventLocationId = inventDimBuffer.InventLocationId;
                //inventDimLocal.wMSLocationId = inventDimBuffer.wMSLocationId;
                inventDimLocal.inventBatchId = (inventDimBuffer.inventBatchId == "") ? selectedInventBatchId : inventDimBuffer.inventBatchId;
                inventDimLocal = InventDim::findOrCreate(inventDimLocal);

              /*  priceAgreementContainer = HMPriceDisc::findItemPriceAgreement(ModuleInventPurchSales::Sales,
                                                                              inventTableBuffer.ItemId,
                                                                              inventDimLocal,//inventDimBuffer,
                                                                              HMCaseTrans.salesUnitId(),
                                                                              DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                                                                              (HMCaseTrans.Qty == 0) ? 1 : HMCaseTrans.Qty,
                                                                              CustTable::find(HMCaseInsurance::findByCase(hmCase.RecId).InsuranceCarrier).AccountNum,//CustTable::findRecId(HMInsuranceCarrier::findByCode(HMPatientInsurance::getPrimaryInsurance(hmPatientInsurance.HMPatient)).CustTable).AccountNum,
                                                                              CustTable::find(CustTable.AccountNum).Currency,
                                                                              '', //PriceGroup
                                                                              hmInsuranceContract.RecId,
                                                                              contractClassOrPlans.RecId,
                                                                              insuranceNetworkBuffer.RecId,
                                                                              hmCaseBuffer.HMCaseType,
                                                                              HMPatientChargeEntryLine.RevenueCode,
                                                                              HMPatientChargeEntryLine.CPTCodes,
                                                                              HMPatientChargeEntryLine.Modifier1,
                                                                              HMPatientChargeEntryLine.Modifier2,
                                                                              HMPatientChargeEntryLine.Modifier3,
                                                                              HMPatientChargeEntryLine.Modifier4);
                                                                              
                                                  
                price = conPeek(priceAgreementContainer, 1);*/

                [price, HMCaseTrans.ExpectedAmount] = this.getPricefromRule(hmInsuranceContract.RecId, inventTableBuffer.ItemId, inventTableBuffer.inventItemGroupItem().ItemGroupId,
                    hmpatientcase.StateId, (select StateGroupId from logisticsAddressState where logisticsAddressState.StateId == hmpatientcase.StateId).StateGroupId,
                     inventDimLocal.inventDimId,HMCaseTrans.salesUnitId(),
                        hmCaseBuffer.HMCaseType, HMProcedureCodeMaster::find(HMPatientChargeEntryLine.RevenueCode).Code, 
                        HMProcedureCodeMaster::find(HMPatientChargeEntryLine.CPTCodes).Code, HMPatientChargeEntryLine.Modifier1,
                            HMPatientChargeEntryLine.Modifier2, HMPatientChargeEntryLine.Modifier3, HMPatientChargeEntryLine.Modifier4);

                //Zain
                
                if(price == 0)
                {
                    InventTable::find(hmcaseTrans.itemId).salesPcsPrice();
                }
                
                HMCaseTrans.SalesPrice = price;
            }
            

            discContainer = element.getDiscount();
            discAmount = conPeek(discContainer, 1);
            discPct = conPeek(discContainer, 2);

            if (discPct > 0)
                    discAmount = price * (discPct/100);
            else
                    discAmount = discAmount;

            if (price > 0)
            {
                
                
                HMCaseTrans.DiscountAmount = discAmount * HMCaseTrans.Qty;
                //fix: Charge entry line price not updated on item change by Ammar
                HMCaseTrans.SalesPrice = price;
                //fix: Charge entry line price not updated on item change by Ammar
                HMCaseTrans.InsuranceAmount = HMCaseTrans.SalesPrice * HMCaseTrans.Qty;
                HMCaseTrans.TotalAmount =  (HMCaseTrans.SalesPrice - HMCaseTrans.DiscountAmount) * HMCaseTrans.Qty;
                HMCaseTrans.RemainingBillAmount = HMCaseTrans.TotalAmount;
            }
            else
            {
                HMCaseTrans.DiscountAmount = discAmount * HMCaseTrans.Qty;
                price = HMCaseTrans.getItemSalesPrice();
                HMCaseTrans.SalesPrice = price;
                HMCaseTrans.InsuranceAmount = price * HMCaseTrans.Qty;
                HMCaseTrans.TotalAmount =  (price - HMCaseTrans.DiscountAmount) * HMCaseTrans.Qty;
                HMCaseTrans.RemainingBillAmount = HMCaseTrans.TotalAmount;
            }

        }

        return price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Created by Zain
    /// </summary>
    /// <returns></returns>
    public container getDiscount()
    {
        DiscAmountMST discValue;
        DiscPct       discPct;
        boolean                 isValid = true;
        HMParameters            parameters;
        HMItemCptPcsCodes       pcsCodes;
        HMProcedureCodeMaster   procedureCode;
        
        Price           myPrice;
        container       priceContainer;
        InventDim       inventDimLocal;
        HMCase          hmCaseBuffer          = HMCase::find(HMPatientChargeEntryTable.HMCase);
        InventDim       inventDimBuffer       = InventDim::find(HMCaseTrans.InventDim);
        InventTable     inventTableBuffer     = InventTable::find(HMCaseTrans.ItemId);
        HMCaseInsurance hmCaseInsuranceBuffer = HMCaseInsurance::findByCase(hmCaseBuffer.RecId);
        HMPatientInsurance hmPatientInsuranceLocal = HMPatientInsurance::find(hmCaseInsuranceBuffer.HMPatientInsurance);
        HMInsuranceContract hmInsuranceContract = HMInsuranceContract::find(hmPatientInsuranceLocal.HMInsuranceContract, false, ConcurrencyModel::Auto);
        //HMInsuranceContract hmInsuranceContract = HMInsuranceContract::findByCarrierCombo(HMInsuranceContractCarrierCombination::findByInsCarrier(HMInsuranceCarrier::findByCode	(hmPatientInsuranceLocal.InsuranceCarrier).RecId).RecId);
        HMInsuranceContractClassOrPlans contractClassOrPlans = HMInsuranceContractClassOrPlans::find(hmPatientInsuranceLocal.HMInsuranceContractClassOrPlans, false, ConcurrencyModel::Auto);
        HMInsuranceNetwork insuranceNetworkBuffer = HMInsuranceNetwork::find(contractClassOrPlans.HMContractClassNetwork);
        container   lineDiscAgreementContainer;
        container   discountContainer;
        HMPriceDisc priceDisc;

        parameters = HMParameters::find();

        if (parameters.isAllowChargeCodeEditing)
        {
            select RecId from pcsCodes
                where pcsCodes.ItemId == HMCaseTrans.ItemId
                join procedureCode
                    where procedureCode.RecId == pcsCodes.HMProcedureCodeMaster
                    && procedureCode.Type == HMProcCodeSearchType::CPT_HCPS;

            if (pcsCodes.RecId)
            {
                isValid = true;
            }
            else
            {
                isValid = false;
            }
        }
        else
        {
            isValid = true;
        }

        if (isValid)
        {
            if (!hmCaseInsuranceBuffer)
            {
                inventDimLocal.InventSiteId = inventDimBuffer.InventSiteId;
                inventDimLocal.InventLocationId = inventDimBuffer.InventLocationId;
                //inventDimLocal.wMSLocationId = inventDimBuffer.wMSLocationId;
                inventDimLocal.inventBatchId = (inventDimBuffer.inventBatchId == "") ? selectedInventBatchId : inventDimBuffer.inventBatchId;
                inventDimLocal = InventDim::findOrCreate(inventDimLocal);

                priceDisc = new HMPriceDisc(ModuleInventPurchSales::Sales, inventTableBuffer.ItemId,
                    inventDimLocal,
                    HMCaseTrans.salesUnitId(),
                    DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                    1,
                    CustTable.AccountNum,
                    CustTable::find(CustTable.AccountNum).Currency);

                if (priceDisc.findLineDisc(inventTableBuffer.ItemId, CustTable.LineDisc, 0, 0, 0, hmCaseBuffer.HMCaseType))
                {
                    discValue = priceDisc.lineDiscAmount();
                    discPct = pricedisc.lineDiscPct();

                    discountContainer = [discValue, discPct];
                }
                else 
                    discountContainer = [0, 0];
            }
            else
            {
                inventDimLocal.InventSiteId = inventDimBuffer.InventSiteId;
                inventDimLocal.InventLocationId = inventDimBuffer.InventLocationId;
                inventDimLocal.inventBatchId = inventDimBuffer.inventBatchId;
                inventDimLocal = InventDim::findOrCreate(inventDimLocal);

                lineDiscAgreementContainer = HMPriceDisc::findItemLineDiscAgreement(ModuleInventPurchSales::Sales,
                                                                              inventTableBuffer.ItemId,
                                                                              inventDimLocal,//inventDimBuffer,
                                                                              HMCaseTrans.salesUnitId(),
                                                                              DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),
                                                                              (HMCaseTrans.Qty == 0) ? 1 : HMCaseTrans.Qty,
                                                                              CustTable::find(HMCaseInsurance::findByCase(hmCase.RecId).InsuranceCarrier).AccountNum,//CustTable::findRecId(HMInsuranceCarrier::findByCode(HMPatientInsurance::getPrimaryInsurance(hmPatientInsurance.HMPatient)).CustTable).AccountNum,
                                                                              CustTable::find(CustTable.AccountNum).Currency,
                                                                              CustTable::find(HMCaseInsurance::findByCase(hmCase.RecId).InsuranceCarrier).AccountNum, //LineDiscGroup
                                                                              inventTableBuffer.ItemId,
                                                                              hmInsuranceContract.RecId,
                                                                              contractClassOrPlans.RecId,
                                                                              insuranceNetworkBuffer.RecId,
                                                                              hmCaseBuffer.HMCaseType,
                                                                              HMPatientChargeEntryLine.RevenueCode,
                                                                              HMPatientChargeEntryLine.CPTCodes,
                                                                              HMPatientChargeEntryLine.Modifier1,
                                                                              HMPatientChargeEntryLine.Modifier2,
                                                                              HMPatientChargeEntryLine.Modifier3,
                                                                              HMPatientChargeEntryLine.Modifier4,
                                                                              0,
                                                                              '',
                                                                              NoYes::Yes);

                discValue = conPeek(lineDiscAgreementContainer, 1);
                discPct = conPeek(lineDiscAgreementContainer, 2);
                discountContainer = [discValue, discPct];
            }
        }

        return discountContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceChargeFromCombination</Name>
				<Source><![CDATA[
    public AmountMST getPriceChargeFromCombination(RecId _revenueCode,
                                         RecId _hcpcscode,
                                         Recid _modifier1,
                                         Recid _modifier2,
                                         Recid _modifier3,
                                         Recid _modifier4,
                                         Recid _modifier5)
    {
        Query                       query;
        QueryBuildDataSource        qbds;
        QueryBuildRange             qbr;
        QueryRun                    qr;
        HMPatientChargeCombination  combination;
    
        query = new query();
    
        qbds  = query.addDataSource(tablenum(HMPatientChargeCombination));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, ItemId));
        qbr.value(queryValue(HMCaseTrans.ItemId));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, RevenueCode));
        qbr.value(queryValue(_revenueCode));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, HCPCSCode));
        qbr.value(queryValue(_hcpcscode));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, Modifier1));
        qbr.value(queryValue(_modifier1));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, Modifier2));
        qbr.value(queryValue(_modifier2));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, Modifier3));
        qbr.value(queryValue(_modifier3));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, Modifier4));
        qbr.value(queryValue(_modifier4));
    
        qbr   = qbds.addRange(fieldnum(HMPatientChargeCombination, Modifier5));
        qbr.value(queryValue(_modifier5));
    
        qr = new QueryRun(query);
        qr.next();
        combination = qr.getNo(1);
    
        return combination.AmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSearchCriteria</Name>
				<Source><![CDATA[
    private void getSearchCriteria(TransDate  _serachDate)
    {
        if (resetCliciked)
        {
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,RecId));
            resetCliciked = false;
        }
    
        if (_serachDate !=  dateNull())
        {
    
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime));
            // HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff));
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime)).value(SysQuery::value(_serachDate));
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff)).value(SysQuery::value( _physicianRecId));
            HMPatientChargeEntryTable_DS.executeQuery();
            HMPatient_ds.refresh();
            HMPatient_ds.executeQuery();
            this.setCurrentDate(_serachDate);
        }
        else if (_serachDate ==  dateNull())
        {
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime));
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff));
            HMPatientChargeEntryTable_DS.executeQuery();
            HMPatient_ds.refresh();
            HMPatient_ds.executeQuery();
        }
    
        else
        {
            if (_serachDate != dateNull())
            {
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime));
                //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff));
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime)).value(SysQuery::value( _serachDate));
                HMPatientChargeEntryTable_DS.executeQuery();
                HMPatient_ds.refresh();
                HMPatient_ds.executeQuery();
                this.setCurrentDate(_serachDate);
            }
    
            //if (_physicianRecId != 0)
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,CreatedDateTime));
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff));
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,HMClinicStaff)).value(SysQuery::value( _physicianRecId));
            //HMPatientChargeEntryTable_DS.executeQuery();
            //}
    
            /* else if (_serachDate ==  dateNull() && _physicianRecId == 0)
            {
                HMResourceSchedulingAppointment_ds.query().dataSourceTable(tableNum(HMResourceSchedulingAppointment)).clearRanges();
                HMResourceSchedulingPlanningObject_ds.query().dataSourceTable(tableNum(HMResourceSchedulingPlanningObject)).clearRanges();
                HMResourceSchedulingAppointment_ds.executeQuery();
            }
           */
        }
    
        element.updateImportButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>importOutpatientAppointmentServices</Name>
				<Source><![CDATA[
    public void importOutpatientAppointmentServices()
    {
        HMChargeEntryClass::importOutpatientAppointmentServices(HMPatientChargeEntryTable.RecId);
        /*HMResourceSchedulingAppointmentInvent hmResourceSchedulingAppointmentInvent;
        HMPatientChargeEntryLine        hmPatientChargeEntryLineLocal, hmPatientChargeEntryLineNew;
        int counts = 0;
    
        while select InventTable, PatientResponsibility from hmResourceSchedulingAppointmentInvent
            where hmResourceSchedulingAppointmentInvent.HMResourceSchedulingAppointment == HMPatientChargeEntryTable.HMResourceSchedulingAppointment
        {
            select count (RecId) from hmPatientChargeEntryLineLocal
                where hmPatientChargeEntryLineLocal.HMPatientChargeEntryTable == HMPatientChargeEntryTable.RecId
                && hmPatientChargeEntryLineLocal.InventTable == hmResourceSchedulingAppointmentInvent.InventTable;
    
            // If encounter procedure is not already added in charge entry
            if (hmPatientChargeEntryLineLocal.RecId == 0)
            {
                hmPatientChargeEntryLineNew.initValue();
    
                switch(hmResourceSchedulingAppointmentInvent.PatientResponsibility)
                {
                    case HMPatientPaymentResponsibility::Client:
                        hmPatientChargeEntryLineNew.PatientResponsibility = HMPatientPaymentResponsibility::Client;
                        hmPatientChargeEntryLineNew.Fee = HMSalesOrderInvoiceGenerator::getItemPricePrice(hmResourceSchedulingAppointmentInvent.InventTable,
                            CustTable::findRecId(HMPatient::find(HMPatientChargeEntryTable.HMPatient).Client).AccountNum);
                        break;
                    case HMPatientPaymentResponsibility::Government:
                        hmPatientChargeEntryLineNew.PatientResponsibility = HMPatientPaymentResponsibility::Government;
                        hmPatientChargeEntryLineNew.Fee = HMSalesOrderInvoiceGenerator::getItemPricePrice(hmResourceSchedulingAppointmentInvent.InventTable,
                            CustTable::findRecId(HMInsuranceCarrier::find(HMPatient::find(HMPatientChargeEntryTable.HMPatient).getPrimaryInsurance()).CustTable).AccountNum);
                        break;
                    case HMPatientPaymentResponsibility::Patient:
                        hmPatientChargeEntryLineNew.PatientResponsibility = HMPatientPaymentResponsibility::Patient;
                        hmPatientChargeEntryLineNew.Fee = HMSalesOrderInvoiceGenerator::getItemPricePrice(hmResourceSchedulingAppointmentInvent.InventTable,
                            HMPatient::find(HMPatientChargeEntryTable.HMPatient).patientChartNum());
                        break;
                }
    
                hmPatientChargeEntryLineNew.Units           = 1;
                hmPatientChargeEntryLineNew.Charge          = hmPatientChargeEntryLineNew.Units * hmPatientChargeEntryLineNew.Fee;
    
                hmPatientChargeEntryLineNew.HMPatientChargeEntryTable     = HMPatientChargeEntryTable.RecId;
                hmPatientChargeEntryLineNew.InventTable     = hmResourceSchedulingAppointmentInvent.InventTable;
                hmPatientChargeEntryLineNew.ProcedureOrder  = HMPatientChargeEntryTable::getNextInventOrderNumber(HMPatientChargeEntryTable.RecId);
                hmPatientChargeEntryLineNew.FromDate        = HMResourceSchedulingAppointment::find(HMPatientChargeEntryTable.HMResourceSchedulingAppointment).AppointmentDate;
                hmPatientChargeEntryLineNew.TODate          = hmPatientChargeEntryLineNew.FromDate;
                hmPatientChargeEntryLineNew.TypeOfService   = HMInventTable::findByItemId(hmResourceSchedulingAppointmentInvent.InventTable).HMTypeOfService != 0 ?
                HMInventTable::findByItemId(hmResourceSchedulingAppointmentInvent.InventTable).HMTypeOfService : HMBillParameters::find().HMTypeOfService;
                hmPatientChargeEntryLineNew.PlaceOfService  = HMInventTable::findByItemId(hmResourceSchedulingAppointmentInvent.InventTable).HMPlaceOfService != 0 ?
                HMInventTable::findByItemId(hmResourceSchedulingAppointmentInvent.InventTable).HMPlaceOfService : HMBillParameters::find().HMPlaceOfService;
    
                //while select HMPatientEncounter, RecId, HMDiagnosisDictionary from hmPatientEncounterDiagnosis order by HMPatientEncounterDiagnosisPriority
                    //where hmPatientEncounterDiagnosis.HMPatientEncounter == HMPatientChargeEntryTable.HMPatientEncounter
                //{
                    //if(hmPatientEncounterDiagnosis.RecId > 0 && counts == 0)
                    //{
                        //hmPatientChargeEntryLineNew.Diagnosis1 = hmPatientEncounterDiagnosis.HMDiagnosisDictionary;
                        //counts = 1;
                        //continue;
                    //}
                    //else if (hmPatientEncounterDiagnosis.RecId > 0 && counts == 1)
                    //{
                        //hmPatientChargeEntryLineNew.Diagnosis2 = hmPatientEncounterDiagnosis.HMDiagnosisDictionary;
                        //counts = 2;
                        //continue;
                    //}
                    //else if (hmPatientEncounterDiagnosis.RecId > 0 && counts == 2)
                    //{
                        //hmPatientChargeEntryLineNew.Diagnosis3 = hmPatientEncounterDiagnosis.HMDiagnosisDictionary;
                        //counts = 3;
                        //continue;
                    //}
                    //else if (hmPatientEncounterDiagnosis.RecId > 0 && counts == 3)
                    //{
                       //hmPatientChargeEntryLineNew.Diagnosis4 = hmPatientEncounterDiagnosis.HMDiagnosisDictionary;
                       //break;
                    //}
                //}
                counts = 0;
                setPrefix("@SYS8500");
                setPrefix(strFmt(SysLabel::labelId2String2('@MAZ11056'),HMInventTableClass::showDescription(hmResourceSchedulingAppointmentInvent.InventTable)+'('+hmResourceSchedulingAppointmentInvent.InventTable+')',HMResourceSchedulingAppointment::find(HMPatientChargeEntryTable.HMResourceSchedulingAppointment).AppointmentNumber));
                if (hmPatientChargeEntryLineNew.validateWrite())
                {
                    hmPatientChargeEntryLineNew.write();
                }
                hmPatientChargeEntryLineNew = null;
               // info(hmProcedureCodeLocal.Description);
            }
        }*/
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        HMPatientChargeEntryTable chargeEntryTable;
    
        super();
    
        element.updateDesign(InventDimFormDesignUpdate::Init);
    
        //Initialize splitter
        objChargeEntryClass =  new HMChargeEntryClass();
        element.refreshData();
        if(element.args().menuItemName() == menuitemDisplayStr(HMPatientChargeEntryCaseSpecific))
        {
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,RecId)).value(SysQuery::value(HMPatientChargeEntryTable::findByCase(element.args().record().RecId).RecId));
            GridContainer.visible(false);
            HMPatientChargeEntryTable_DS.executeQuery();
        }
        else
        {
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
            HMPatientChargeEntryTable_DS.executeQuery();

            element.setDefaultSearchRange();

            //Zain
            HMPatientCaseStatus.selection(HMCaseStatus::All);
            //Zain
        }
    
        
    
    
        //if (element.args().parm() == 'OpenClaim')
        //{
        //RecordBasics.enabled(false);
        //}
        //
        //if (element.args().parm() == 'Patient' || element.args().parm() == 'OpenClaim')
        //{
        //PreviousBtn.enabled(false);
        //NextBtn.enabled(false);
        //DateCtrl.visible(false);
        //HMPatientChargeEntryTable_createdDateTime.visible(true);
        //}
        //else
        //{
        //PreviousBtn.enabled(true);
        //NextBtn.enabled(true);
        //DateCtrl.visible(true);
        //HMPatientChargeEntryTable_createdDateTime.visible(false);
        //resetCliciked = false;
        //}
        //
        //if(element.args().parmEnum() == HMCaseType::OutPatient || element.args().parmEnum() == HMCaseType::Surgery)
        //{
        //NewDelete.visible(true);
        //DetailsHeaderEdit.visible(false);
        ////CreateFromEncounter.visible(true);
        //}
        //else if(element.args().parmEnum() == HMCaseType::InPatient)
        //{
        ////AppointmentDate.visible(false);
        //TitleText.visible(false);
        //PreviousBtn.visible(false);
        //Search.visible(false);
        //NextBtn.visible(false);
        //Reset.visible(false);
        //NewDelete.visible(true);
        //DetailsHeaderEdit.visible(false);
        //}
        //else if(element.args().parmEnum() == HMCaseType::Emergency)
        //{
        ////AppointmentDate.visible(false);
        //TitleText.visible(false);
        //NewDelete.visible(true);
        //DetailsHeaderEdit.visible(false);
        //}
        //else if(element.args().parmEnum() == HMCaseType::All)
        //{
        ////AppointmentDate.visible(false);
        //HMPatientChargeEntryTable_createdDateTime.visible(true);
        //TitleText.visible(false);
        //PreviousBtn.visible(false);
        //Search.visible(false);
        //NextBtn.visible(false);
        //Reset.visible(false);
        //Import.visible(false);
        //HMPatientChargeEntryTable_ds.allowCreate(true);
        //HMPatientChargeEntryTable_ds.allowDelete(true);
        //HMPatientChargeEntryTable_ds.allowEdit(true);
        //DetailsHeaderView.visible(false);
        //}
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>initHeaderDateRange</Name>
				<Source><![CDATA[
    public QueryBuildRange initHeaderDateRange()
    {
        qbrDateHead = new QueryBuildRange();
    
        HMPatientChargeEntryTable_DS.queryBuildDataSource().clearRange(fieldNum(HMPatientChargeEntryTable, CreatedDateTime));
        HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).enabled(false);
        HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).clearRanges();
        HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).clearRanges();
    
        if (CaseFilter.valueStr() == enum2str(HMCaseFilter::Case))
        {
            qbrDateHead = HMPatientChargeEntryTable_DS.queryBuildDataSource().addRange
                    (fieldNum(HMPatientChargeEntryTable, CreatedDateTime));
    
            HMPatientChargeEntryTable_DS.queryBuildDataSource().addSortField
                    (fieldNum(HMPatientChargeEntryTable, CreatedDateTime),SortOrder::Descending);
        }
        if (HMOrganizationalUnit)
        {
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).enabled(true);
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).clearRanges();
            HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).clearRanges();
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addLink(fieldNum(HMPatientChargeEntryTable,RecId), fieldNum(HMChargeEntryLocationWise, ChargeEntryRecId));
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addRange(fieldNum(HMChargeEntryLocationWise, HMOrganizationalUnit)).value(queryValue(HMOrganizationalUnit));
            //HMPatientChargeEntryLine_DS.queryBuildDataSource().clearRange(fieldNum(HMPatientChargeEntryLine, FromDate));
    
            if (CaseFilter.valueStr() == enum2str(HMCaseFilter::Caseline))
            {
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addRange(fieldNum(HMChargeEntryLocationWise, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
                HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addRange(fieldNum(HMPatientChargeEntryLine, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
                HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addRange(fieldNum(HMPatientChargeEntryLine, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
            }
    
            HMCaseTrans_Ds.queryBuildDataSource().clearRanges();
            HMCaseTrans_Ds.queryBuildDataSource().addRange
                (fieldNum(HMCaseTrans, HMOrganizationalUnit)).value(queryValue(HMOrganizationalUnit));
        }
        else
        {
            if (CaseFilter.valueStr() == enum2str(HMCaseFilter::Caseline))
            {
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).clearRanges();
                HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).clearRanges();
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).enabled(true);
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addLink(fieldNum(HMPatientChargeEntryTable,RecId), fieldNum(HMChargeEntryLocationWise, ChargeEntryRecId));
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addRange(fieldNum(HMChargeEntryLocationWise, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
                HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addRange(fieldNum(HMPatientChargeEntryLine, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
                HMCaseTrans_Ds.queryBuildDataSource().clearRange(fieldNum(HMCaseTrans, HMOrganizationalUnit));
            }
            else
            {
                HMPatientChargeEntryLine_DS.queryBuildDataSource().clearRange(fieldNum(HMPatientChargeEntryLine, FromDate));
                HMCaseTrans_Ds.queryBuildDataSource().clearRange(fieldNum(HMCaseTrans, HMOrganizationalUnit));
            }
        }
    
        return qbrDateHead;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public InventDimCtrl_Frm_EditDimensions inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadInsuranceDetails</Name>
				<Source><![CDATA[
    public void loadInsuranceDetails()
    {
        str bookingNotesLocal;
        HMCase         hmCaseLocal = HMCase::find(HMPatientChargeEntryTable.hmcase);
        HMPatientInsurance                      hmPatientInsuranceLocal = HMPatientInsurance::find(hmCaseLocal.HMPatientInsurance);
        HMInsuranceContractClassOrPlans         plan = HMInsuranceContractClassOrPlans::find(hmPatientInsuranceLocal.HMInsuranceContractClassOrPlans);
        HMInsuranceCarrier                      carrier;
        HMInsuranceContract                     contract;
        HMInsuranceContractCarrierCombination   combination;
        HMPatientEmployer                       _hmpatientEmployer;
    
        //BookingNotes.text('');
        InsuranceName.text('');
        InsuranceContract.text('');
        InsuranceClass.text('');
        InsuranceExpirationDate.dateValue(dateNull());
    

    
        if (plan)
        {
            contract    = HMInsuranceContract::find(plan.HMInsuranceContract);
            combination = HMInsuranceContractCarrierCombination::find(contract.HMInsuranceContractCarrierCombination);
            carrier     = HMInsuranceCarrier::find(combination.HMInsuranceCarrier);
    
            InsuranceName.text(carrier.name);
            InsuranceContract.text(contract.HMContractName);
            InsuranceClass.text(plan.HMContractClassId);
            InsuranceExpirationDate.dateValue(hmPatientInsurance.getPatientIdentificationExpiryDate());


           
            //BookingNotes.text(bookingNotesLocal);
        }
        if(!hmPatientInsurance)
        {
            HMCaseTrans_ds.object(fieldNum(HMCaseTrans,PatientResponsibility)).allowEdit(false);
        }
        else
        {
            HMCaseTrans_ds.object(fieldNum(HMCaseTrans,PatientResponsibility)).allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>markInventDimMadatory</Name>
				<Source><![CDATA[
    public void markInventDimMadatory(ItemId _itemid)
    {
        InventTable     inventTable;
        InventDimParm   inventDimParm;
        InventDim       inventDimClinic;
        HMOrganizationalUnit unit;
        InventLocation       warehouse;
    
    
        inventTable   = InventTable::find(_itemid);
        unit = HMOrganizationalUnit::find(HMCaseTrans.HMOrganizationalUnit);
        wareHouse = InventLocation::find(unit.InventLocation);
    
        inventDimClinic.InventSiteId = wareHouse.InventLocationId;
        inventDimClinic.InventLocationId = wareHouse.InventSiteId;
    
        inventDimParm.initFromInventDim(inventDimClinic);
    
        inventDimParm =  InventDimParm::activeDimFlag(InventDimGroupSetup::newInventTable(inventTable));
    
        if(inventDimParm.InventSiteIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, InventSiteId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, InventSiteId)).mandatory(false);
        }
    
        if(inventDimParm.InventLocationIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, InventLocationId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, InventLocationId)).mandatory(false);
        }
    
        if(inventDimParm.WMSLocationIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, WMSLocationId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, WMSLocationId)).mandatory(false);
        }
    
        if(inventDimParm.WMSPalletIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, WMSPalletId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, WMSPalletId)).mandatory(false);
        }
    
        if(inventDimParm.InventSerialIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, InventSerialId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, InventSerialId)).mandatory(false);
        }

        if(inventDimParm.InventBatchIdFlag)
        {
            InventDim_ds.object(fieldNum(InventDim, inventBatchId)).mandatory(true);
        }
        else
        {
            InventDim_ds.object(fieldNum(InventDim, inventBatchId)).mandatory(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshChargeEntry</Name>
				<Source><![CDATA[
    public void refreshChargeEntry()
    {
        HMPatientChargeEntryTable_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    public void refreshData()
    {
        HMPatientChargeEntryLine_DS.executeQuery();
        HMPatientChargeEntryLineGrouped_DS.executeQuery();
        HMPatientChargeEntryTable_ds.research(true);
        PurchTable_ds.executeQuery();
        SalesTable_ds.executeQuery();
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGrid</Name>
				<Source><![CDATA[
    public void refreshGrid()
    {
        HMPatientChargeEntryTable_DS.query().dataSourceName('HMPatientCase').clearRange(fieldNum(HMCase,AddmisionDate));
        HMPatientCase_ds.query().dataSourceTable(tableNum(HMCase)).clearRange(fieldNum(HMCase,CaseStatus));
        HMPatientChargeEntryTable_DS.executeQuery();
        HMPatient_ds.refresh();
        HMPatient_ds.executeQuery();
        HMPatientCase_ds.executeQuery();
    
        if (dateValStr != '')
        {
            if (CaseFilter.valueStr() == enum2str(HMCaseFilter::Case))
            {
                HMPatientChargeEntryTable_DS.query().dataSourceName('HMPatientCase').addRange(fieldNum(HMCase,AddmisionDate)).value(SysQuery::range(FromDate.dateValue(),ToDate.dateValue()));
            }
        }
        if(HMPatientCaseStatus.selection() != HMCaseStatus::All)
            HMPatientCase_ds.query().dataSourceTable(tableNum(HMCase)).addRange(fieldNum(HMCase,CaseStatus)).value(SysQuery::value(HMPatientCaseStatus.selection()));

        HMPatientChargeEntryTable_DS.executeQuery();
        HMPatient_ds.refresh();
        HMPatient_ds.executeQuery();
        HMPatientCase_ds.executeQuery();
    
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    
        if(element.args().parmEnum() == HMCaseType::OutPatient || element.args().parmEnum() == HMCaseType::Surgery)
        {
            if (element.args().parm() == "")
            {
                this.setCurrentDate(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
            }
            else
            {
                if(HMPatientChargeEntryTable)
                {
                    this.setCurrentDate(DateTimeUtil::date(HMPatientChargeEntryTable.createdDateTime));
                }
                else
                {
                    this.setCurrentDate(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
                }
            }
        }
    
        element.updateImportButton();
        element.searchDates();
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchDates</Name>
				<Source><![CDATA[
    public void searchDates()
    {
        if (FromDate.valueStr() && ToDate.valueStr())
        {
            if (!DateSearch.enabled())
            {
                DateSearch.enabled(true);
            }
            DateSearch.clicked();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrentDate</Name>
				<Source><![CDATA[
    public void setCurrentDate(date _date)
    {
        currentDate = _date;
        //  DateCtrl.text(date2StrUsr(curentApptDate,DateFlags::None));
        DateCtrl.text(strFmt('%1: %2 %3, %4',"@MAZ8099",mthName(mthOfYr(currentDate)),dayOfMth(currentDate),year(currentDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultSearchRange</Name>
				<Source><![CDATA[
    private void setDefaultSearchRange()
    {
        date defaultFromDate, defaultToDate;
        int searchPeriod = HMParameters::find().DefaultSearchPeriod;
    
        defaultFromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        defaultToDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    
        if (searchPeriod)
        {
            defaultFromDate -= searchPeriod;
        }
    
        FromDate.dateValue(defaultFromDate);
        ToDate.dateValue(defaultToDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeOrganizationalUnit</Name>
				<Source><![CDATA[
    public void storeOrganizationalUnit(RecId _recid)
    {
        HMOrganizationalUnit = _recid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storePhysician</Name>
				<Source><![CDATA[
    private void storePhysician(RecId _RecId)
    {
        HMPatientChargeEntryTable.HMClinicStaff = _RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm inventDimParmVisible;
    
        switch (mode)
        {
            // Form Init
            case InventDimFormDesignUpdate::Init    :
                if (!inventDimFormSetup)
                    inventDimFormSetup  = InventDimCtrl_Frm_EditDimensions::newFromForm(element);
                inventDimFormSetup.parmSkipOnHandLookUp( true);
    
            // Use the methods on InventDimParm
            // to set which dimensions to show when form is initialized
            //to save setting on inventory dimension form
            //inventdimparmvisible.inventsiteidflag       = true;
            //inventdimparmvisible.InventLocationIdFlag   = true;
            //inventDimFormSetup.parmDimParmVisibleGrid(inventDimParmVisible);
    
            // Datasource Active
            case InventDimFormDesignUpdate::Active  :
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newItemId(HMCaseTrans.ItemId)); //InventDimDisplay is the datasource name.
                inventDimFormSetup.formSetControls( true);
                break;
    
            // Datasource Field change
            case InventDimFormDesignUpdate::FieldChange :
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newItemId(HMCaseTrans.ItemId)); //InventDimDisplay is the datasource name.
                InventDim.clearNotSelectedDim(inventDimFormSetup.parmDimParmEnabled()); // InventDim is referring to datasource name
                inventDimFormSetup.formSetControls( true);
                break;
    
            default :
                throw error(strFmt ("@SYS54195", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateImportButton</Name>
				<Source><![CDATA[
    public void updateImportButton()
    {
        if(HMPatientChargeEntryTable.RecId)
        {
            Import.enabled(true);
        }
        else
        {
            Import.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name = "_p1"></param>
    /// <returns></returns>
    public int task(int _p1)
    {
        #Task
        int ret;
    
        if (_p1 == #taskF5)
        {
            HMCasePaymtReceivedDetails_ds.research();
        }

        ret = super(_p1);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchOrderHeaderList</Name>
				<Source><![CDATA[
    /// <summary>
    /// createPurchOrder
    /// Created by Zain for Demo
    /// </summary>
    private NOYes createPurchOrderHeaderList(ListEnumerator _listEnmr)
    {
        NOYes				isPOCreated;
        HMCaseTrans			hmCaseTransLocal;
        PurchTable			purchTableLocal;
        PurchLine			purchLineLocal;
        VendTable			vendTable;
        NumberSeq			numberSeq;
        HMResourceMaster	hmResourceMasterLocal;

        try
        {
            ttsbegin;

			while(_listEnmr.moveNext())
            {

                hmCaseTransLocal = _listEnmr.current();
				hmResourceMasterLocal = HMResourceMaster::findByType(HMCase::find(hmCaseTransLocal.HMCase).HMResourceMaster, HMResourceType::Vendor);
				if (hmCaseTransLocal && hmResourceMasterLocal)
				{             
					select * from purchTableLocal
                        where purchTableLocal.HMCase == hmCaseTransLocal.HMCase;

                    if(!purchTableLocal.RecId)
                    {
						numberSeq = NumberSeq::newGetNum(PurchParameters::numRefPurchId());
						purchTableLocal.clear();
						purchTableLocal.initValue();
						purchTableLocal.PurchId = numberSeq.num();
                        purchTableLocal.HMCase = hmCaseTransLocal.HMCase;
						vendTable = VendTable::findRecId(hmResourceMasterLocal.RefRecId);
						purchTableLocal.initFromVendTable(vendTable);
						purchTableLocal.LanguageId = CompanyInfo::languageId();
						purchTableLocal.InvoiceAccount = vendTable.AccountNum;
						purchTableLocal.CurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());
						if (!purchTableLocal.validateWrite())
								throw Exception::Error;
						else
						{
							numberSeq.used();
							purchTableLocal.insert();
						}
                    }
					purchLineLocal.clear();
					purchLineLocal.initValue();
					purchLineLocal.PurchId = purchTableLocal.PurchId;
					purchLineLocal.initFromPurchTable(purchTableLocal);
					purchLineLocal.ItemId = hmCaseTransLocal.ItemId;
					purchLineLocal.PurchQty = hmCaseTransLocal.Qty;
                    purchLineLocal.PurchPrice = hmCaseTransLocal.SalesPrice;
                    purchLineLocal.PurchUnit = hmCaseTransLocal.salesUnitId();
                    purchLineLocal.LineDisc = hmCaseTransLocal.DiscountAmount;
                    purchLineLocal.LineAmount = hmCaseTransLocal.TotalAmount;
					purchLineLocal.InventDimId = hmCaseTransLocal.InventDim;
                    purchLineLocal.QtyOrdered = purchLineLocal.calcQtyOrdered();
                    purchLineLocal.RemainPurchPhysical            = purchLineLocal.PurchQty;
                    purchLineLocal.RemainPurchFinancial           = 0;
                    purchLineLocal.RemainInventPhysical           = purchLineLocal.QtyOrdered;
                    purchLineLocal.PdsCWRemainInventPhysical      = purchLineLocal.PdsCWQty;

                    purchLineLocal.RemainInventFinancial          = 0;
                    purchLineLocal.PdsCWRemainInventFinancial     = 0;

					if (!purchLineLocal.validateWrite())
     					throw Exception::Error;
					else
                    {
     					purchLineLocal.insert();
                        this.createPOReceipt(purchTableLocal);
                    }
               
					isPOCreated = NoYes::Yes;
				}
				else
					isPOCreated = NOyes::No;
            }

            ttscommit;

        }
        catch
        {
            ttsabort;
        }

        return isPOCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPOReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Demo of OneCall
    /// </summary>
    /// <param name = "_purchTable"></param>
    /// <returns></returns>
	private void createPOReceipt(PurchTable _purchTable)
    {
        PurchFormLetter             purchFormLetter;
        PurchFormletterParmData     purchFormLetterParmData;
        PurchParmUpdate             purchParmUpdate;
        PurchParmTable              purchParmTable;
        PurchParmLine               purchParmLine;
        PurchLine                   _purchLine;
        PurchId                     purchId;
        Num                         packingSlipId;

		try
        {
            ttsBegin;
            // Create PurchParamUpdate table
            purchFormLetterParmData = PurchFormletterParmData::newData(
			DocumentStatus::PackingSlip,
			VersioningUpdateType::Initial);
    
            purchFormLetterParmData.parmOnlyCreateParmUpdate(true);
            purchFormLetterParmData.createData(false);
            purchParmUpdate = purchFormLetterParmData.parmParmUpdate();

            // Set PurchParmTable table
            purchParmTable.clear();
            purchParmTable.TransDate                = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            purchParmTable.Ordering                 = DocumentStatus::PackingSlip;
            purchParmTable.ParmJobStatus            = ParmJobStatus::Waiting;
            purchParmTable.Num                      = packingSlipId;
            purchParmTable.PurchId                  = _purchTable.PurchId;
            purchParmTable.PurchName                = _purchTable.PurchName;
            purchParmTable.DeliveryName             = _purchTable.DeliveryName;
            purchParmTable.DeliveryPostalAddress    = _purchTable.DeliveryPostalAddress;
            purchParmTable.OrderAccount             = _purchTable.OrderAccount;
            purchParmTable.CurrencyCode             = _purchTable.CurrencyCode;
            purchParmTable.InvoiceAccount           = _purchTable.InvoiceAccount;
            purchParmTable.ParmId                   = purchParmUpdate.ParmId;
            purchParmTable.insert();

            // Set PurchParmLine table
            while select purchLine
                where purchLine.PurchId == _purchTable.purchId
            {
                purchParmLine.InitFromPurchLine(_purchLine);

                purchParmLine.ReceiveNow    = _purchLine.PurchQty;
                purchParmLine.ParmId        = purchParmTable.ParmId;
                purchParmLine.TableRefId    = purchParmTable.TableRefId;
                purchParmLine.setQty(DocumentStatus::PackingSlip, false, true);
                purchParmLine.setLineAmount();
                purchParmLine.insert();
            }

            purchFormLetter = PurchFormLetter::construct(DocumentStatus::PackingSlip);
            purchFormLetter.transDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            purchFormLetter.proforma(false);
            purchFormLetter.specQty(PurchUpdate::All);
            purchFormLetter.purchTable(_purchTable);
    
            // This is the ID we hard code as the product receipt ID, if we do the posting via UI
            // user would have the option to manually enter this value
            purchFormLetter.parmParmTableNum(purchParmTable.ParmId);
            purchFormLetter.parmId(purchParmTable.ParmId);
            purchFormLetter.purchParmUpdate(purchFormLetterParmData.parmParmUpdate());
            purchFormLetter.run();
            ttsCommit;
		}
        catch
		{
            ttsabort;
		}

       

	}

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMPatientChargeEntryLine</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            HMPatientChargeEntryLine HMPatientChargeEntryLIneLocal;
            HMInsuranceCarrierBatchDetails HMInsuranceCarrierBatchDetails;
        
            HMPatientChargeEntryLine.FromDate=DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
            HMPatientChargeEntryLine.HMInsuranceCarrierBatchDetails=HMInsuranceCarrierBatchDetails::findRecIdByCarrierAndDate(HMCase.getInsuranceCarrierRecId_US(),DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())).RecId;
            HMPatientChargeEntryLine.PerformingResource = HMCase.HMResourceMaster;//HMPatientChargeEntryTable::findByCase(HMPatientCase.RecId).getPhysician();//HMResourceMaster::find(HMpatientCase.HMResourceMaster).RefRecId;
            if(HMPatientChargeEntryTable)
            {
                HMPatientChargeEntryLIneLocal = HMPatientChargeEntryLIne::defaultChargeLine(HMPatientChargeEntryTable.RecId);
        
                if(HMPatientChargeEntryLIneLocal)
                {
                    HMPatientChargeEntryLine.PerformingResource = HMPatientChargeEntryLIneLocal.PerformingResource;
                }
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            HMPatientChargeEntryLine.HMCaseTrans = HMCaseTrans.RecId;
            //element.getPrice();
            super();

        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();

            HMPatientEncounterCharge_InventTable.setFocus();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            HMCaseTrans hmCaseTransLocal;
        
            if(this.validateDelete())
            {
                try
                {
                    hmCaseTransLocal = HMCaseTrans_ds.getFirst(true);
        
                    if (hmCaseTransLocal)
                    {
                        while(hmCaseTransLocal)
                        {
                            ttsBegin;
                            hmCaseTransLocal.selectForUpdate(true);
                            hmCaseTransLocal.delete();
                            ttsCommit;
                            hmCaseTransLocal = HMCaseTrans_ds.getNext();
                        }
                        element.refreshData();
                    }
                    else if(HMCaseTrans.RecId)
                    {
                        throw error("Please select record to delete");
                    }
                    else
                    {
                        super();
                    }
                }
                catch
                {
                    ttsAbort;
                }
                this.reread();
                HMPatientChargeEntryTable_ds.research(true);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addSortField(fieldNum(HMPatientChargeEntryLine, ProcedureOrder));
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        /* /// <summary>
        /// Added by Musab.
        /// </summary>
        public void markChanged()
        {
            super();

            if (HMPatientChargeEntryLine_ds.recordsMarked().lastIndex() > 1)
            {
                HMCaseTrans selctdCaseTrans;
                for (HMPatientChargeEntryLine selctdPatientChargeEntry = getFirstSelection(HMPatientChargeEntryLine_ds); selctdPatientChargeEntry; selctdPatientChargeEntry = HMPatientChargeEntryLine_ds.getNext())
                {
                    selctdCaseTrans = HMCAsetrans::find(selctdPatientChargeEntry.HMCaseTrans);
                    if (selctdCaseTrans.HMServiceStatus == HMServiceStatus::Complete)
                    {
                        PostMovementJournalLine.enabled(false);
                        HMCaseTrans_ds.allowEdit(false);
                        HMPatientChargeEntryLine_ds.allowEdit(false);
                        DeleteProdedure.enabled(false);
                        break;
                    }
                }
            }
            else
            {
                
            }

            
        }*/

        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean validateDelete()
        {
            boolean ret;
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <param name = "_append"></param>
        public void create(boolean _append = false)
        {
            super(_append);

            HMCaseTrans.HMPayer = HMPatientInsurance::findByPatient(hmCase.HMPatient).InsuranceCarrier;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CPTCodes</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.getPrice();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HMInsuranceCarrierBatchDetails</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                SysReferenceTableLookup     sysRefTableLookup;
                Query                       lookupQuery = new Query();
                QueryBuildDataSource        lookupQueryDataSource;
            
                // Construct the SysRefTableLookup object
                sysRefTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMInsuranceCarrierBatchDetails), _formReferenceControl);
            
                // Add the field list that will be displayed on the lookup form
                sysRefTableLookup.addLookupfield(fieldNum(HMInsuranceCarrierBatchDetails, BatchNumber));
                //sysRefTableLookup.addLookupfield(fieldNum(HMInsuranceCarrierBatchDetails, Reference));
                sysRefTableLookup.addLookupfield(fieldNum(HMInsuranceCarrierBatchDetails, FromDate));
                sysRefTableLookup.addLookupfield(fieldNum(HMInsuranceCarrierBatchDetails, ToDate));
            
                // Construct the query's data source
                lookupQueryDataSource = lookupQuery.addDataSource(tableNum(HMInsuranceCarrierBatchDetails));
            
                // Add ranges to the query data source
                lookupQueryDataSource.addRange(fieldNum(HMInsuranceCarrierBatchDetails, HMInsuranceCarrier)).value(queryValue(HMCase.getInsuranceCarrierRecId_US()));
                lookupQueryDataSource.addRange(fieldNum(HMInsuranceCarrierBatchDetails, Status)).value(SysQuery::value(HMInsuranceCarrierBatchStatus::Active));
            
                // Pass the query to the lookup object
                sysRefTableLookup.parmQuery(lookupQuery);
            
                return sysRefTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventTable</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RevenueCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.getPrice();
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                HMProcedureCodeMaster procedureCodeMaster;
                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource, queryBuildDataSource2;
                QueryBuildRange queryBuildRange;
            
                SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMProcedureCodeMaster), _formReferenceControl, true);
            
                queryBuildDataSource = query.addDataSource(tableNum(HMProcedureCodeMaster));
                queryBuildDataSource2 = queryBuildDataSource.addDataSource(tableNum(HMItemCptPcsCodes));
                queryBuildDataSource2.joinMode(JoinMode::InnerJoin);
                queryBuildDataSource2.relations(true);
                queryBuildDataSource2.addRange(fieldNum(HMItemCptPcsCodes, ItemId)).value(queryValue(HMCaseTrans.ItemId));
                sysTableLookup.parmQuery(query);
                sysTableLookup.addLookupField(fieldNum(HMProcedureCodeMaster, Code));
                sysTableLookup.addLookupField(fieldNum(HMProcedureCodeMaster, Description));
            
                return sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>HMPatientChargeEntryTable</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            Patient.text(HMPatient::find(HMPatientChargeEntryTable.HMPatient).PatientName());
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            HMPatientChargeEntryTable.Status = HMBillStatus::NotPosted;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            HMCaseTrans caseTrans;
        
        
            ret = super();
        
            caseTrans = hmCaseTrans::findUnpostedCaseTrans(HMPatientChargeEntryTable.HMCase, HMServiceStatus::NotStarted);
        
            if (!caseTrans)
            {
                PostMovementJournal.enabled(false);
            }
            else
            {
                PostMovementJournal.enabled(true);
            }
        
        
        
            if (ret)
            {
                AddProcedures.enabled(HMPatientChargeEntryTable.RecId? true:false);
                element.updateImportButton();
                Patient.text(HMPatient::find(HMPatientChargeEntryTable.HMPatient).PatientName());
            }
        
            if(HMPatientChargeEntryTable.Status == HMBillStatus::Posted)
            {
                DeleteButton.enabled(false);
                HMSalesInvoiceCreate.enabled(false);
                HMSalesInvoiceCreate.enabled(false);
                charging.enabled(false);
                buttonJournalInvoice.enabled(true);
                NewPayment.enabled(false);
                DeletePayment.enabled(false);
                HMCMSClaimGenerateChargeEntry.enabled(false);
            }
            else if(HMPatientChargeEntryTable.Status == HMBillStatus::NotPosted)
            {
                DeleteButton.enabled(true);
                HMSalesInvoiceCreate.enabled(true);
                HMSalesInvoiceCreate.enabled(true);
                charging.enabled(true);
                buttonJournalInvoice.enabled(false);
                NewPayment.enabled(true);
                DeletePayment.enabled(true);
                if(HMPatientCase.CaseStatus==HMCaseStatus::OnHold)
                {
                    HMCMSClaimGenerateChargeEntry.enabled(false);
                }
                else
                {
                    HMCMSClaimGenerateChargeEntry.enabled(true);
                }
            }
            element.loadInsuranceDetails();
            //if(HMPatientChargeEntryTable.getCaseInsuranceNum() != '')
            //{
            //HMPaymentCentreCreateInvoice.enabled(false);
            //}
            //else
            //{
            //HMPaymentCentreCreateInvoice.enabled(true);
            //}
            hmCase = HMCase::find(HMPatientChargeEntryTable.hmcase);
        
            //Zain  MazikCare
            HMPatientCase_ds.active();
            //Zain  MazikCare

            //CS: Bug 3643:Total charge entry field in new case filled with previous case charge entry line's total charge
            //Ammar - MazikCAre
            Charges.text(HMPatientChargeEntryTable.getTotalChargesWithCurrency());
            //CE: Bug 3643:Total charge entry field in new case filled with previous case charge entry line's total charge
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            //info(this.query().toString());
        
            //if(element.args().parmEnum() == HMCaseType::OutPatient || element.args().parmEnum() == HMCaseType::Surgery)
            //{
            //HMPatientChargeEntryTable_DS.queryBuildDataSource().addRange(fieldNum(HMPatientChargeEntryTable,CaseType)).value(SysQuery::value(HMCaseType::OutPatient));
            //HMPatientChargeEntryTable_DS.queryBuildDataSource().addRange(fieldNum(HMPatientChargeEntryTable,CaseType)).value(SysQuery::value(HMCaseType::Surgery));
            //}
            //else if(element.args().parmEnum() == HMCaseType::InPatient)
            //{
            //HMPatientChargeEntryTable_DS.queryBuildDataSource().addRange(fieldNum(HMPatientChargeEntryTable,CaseType)).value(SysQuery::value(HMCaseType::InPatient));
            //}
            //else if(element.args().parmEnum() == HMCaseType::All)
            //{
            //HMPatientChargeEntryTable_DS.queryBuildDataSource().addRange(fieldNum(HMPatientChargeEntryTable,HMResourceSchedulingAppointment)).value(SysQuery::value(0));
            //}
            //
            //if (element.args().parm() == 'Patient')
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,HMPatient)).value(SysQuery::value(element.args().record().RecId));
            //}
            //else if (element.args().parm() == 'OpenClaim')
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,RecId)).value(SysQuery::value(element.args().record().RecId));
            //}
            //// if form is opened from Appointment calender or appointment queues
            //else if (element.args().parm() == 'Appointment')
            //{
            //HMPatientChargeEntryTable_DS.queryBuildDataSource().clearDynalinks();
            //chargeEntryTable = HMPatientChargeEntryTable::findByAppointment(element.args().record().RecId);
            //if(chargeEntryTable)
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(DateTimeUtil::date(chargeEntryTable.createdDateTime)));
            //}
            //else
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,ChargeEntryDate)).value(SysQuery::value(today()));
            //}
            //}
            //else if((element.args().parmEnum() == HMCaseType::OutPatient || element.args().parmEnum() == HMCaseType::Surgery) && element.args().parm() == '')
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(today()));
            //}
            //
            //this.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addSortField(fieldNum(HMPatientChargeEntryTable,createdDateTime));
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            HMPatientChargeEntryTable chargeEntryTable;
            HMCaseTrans caseTrans;
        
            super();
        
            //if (CaseFilter.valueStr() == enum2str(HMCaseFilter::Caseline))
            //{
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).clearRanges();
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).enabled(true);
            //HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addRange(fieldNum(HMPatientChargeEntryLine, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addLink(fieldNum(HMPatientChargeEntryTable,RecId), fieldNum(HMChargeEntryLocationWise, ChargeEntryRecId));
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMChargeEntryLocationWise)).addRange(fieldNum(HMChargeEntryLocationWise, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
            ////            HMPatientChargeEntryLine_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addRange(fieldNum(HMPatientChargeEntryLine, FromDate)).value(SysQuery::range(FromDate.dateValue(), ToDate.dateValue()));
            //HMCaseTrans_Ds.queryBuildDataSource().clearRange(fieldNum(HMCaseTrans, HMOrganizationalUnit));
            //}
            //caseTrans = hmCaseTrans::findUnpostedCaseTrans(HMPatientChargeEntryTable.HMCase, HMServiceStatus::NotStarted);
            //
            //if (!caseTrans)
            //{
            //PostMovementJournal.enabled(false);
            //}
            //else
            //{
            //PostMovementJournal.enabled(true);
            //}
        
            // HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(DateTimeUtil::date(chargeEntryTable.createdDateTime)));
        
            //info(HMPatientChargeEntryTable_DS.query().toString());
        
            if (element.args().parm() == 'Appointment')
            {
                this.positionToRecord(HMPatientChargeEntryTable::findByAppointment(element.args().record().RecId));
            }
        
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMPatientChargeEntryLineGrouped</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addGroupByField(fieldNum(HMPatientChargeEntryLine, HMPatientChargeEntryTable));
            this.query().dataSourceTable(tableNum(HMPatientChargeEntryLine)).addGroupByField(fieldNum(HMPatientChargeEntryLine, InventTable));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMCaseTrans</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            HMCaseTrans  hMCaseTranslocal;
            HMOrganizationalUnit unit;
            InventDim            inventDimLocal;
            InventLocation       warehouse;
        
            hMCaseTranslocal = HMCaseTrans::defaultHmCaseTrans(HMPatientChargeEntryTable.HMCase);
            HMCaseTrans.HMClaimTableSetup_PatientStatus = HMPatientCase.HMPatientStatus;
            if(hMCaseTranslocal)
            {
                HMCaseTrans.HMOrganizationalUnit = hMCaseTranslocal.HMOrganizationalUnit;
        
                unit = HMOrganizationalUnit::find(hMCaseTranslocal.HMOrganizationalUnit);
                wareHouse = InventLocation::find(unit.InventLocation);
                inventDimLocal.InventLocationId = wareHouse.InventLocationId;
                inventDimLocal.InventSiteId = wareHouse.InventSiteId;
                InventDimLocal.wMSLocationId = unit.WMSLocation;
                HMCaseTrans.InventDim = InventDim::findOrCreate(inventDimLocal).inventDimId;
                HMCaseTrans.HMPayer = HMPatientInsurance::findByPatient(hmCase.HMPatient).InsuranceCarrier;
        
            }
            else
            {
                HMCaseTrans.HMOrganizationalUnit =  0;
            }
            HMCaseTrans.Qty
                               =  1;
            //Changed by Musab.
            // Modification Start:
            if (HMCaseTrans.ItemId)
            {
                element.getPrice();
            }
            // Modification End
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            HMCaseTrans_ds.queryBuildDataSource().addRange(fieldNum(HMCaseTrans,isPPS)).value(SysQuery::value(NoYes::No));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            InventDimParm parm;
            InventTable inventTable;
        
            HMCaseTrans.HMCase = HMPatientChargeEntryTable.HMCase;
            //if(HMCaseTrans.Qty<1)
            //{
            //ret=checkFailed("Quantity can not be less than 1");
            //}
            //else
            //{
            ret = super();
            //}
            
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            HMFinancialDimensionHelper dimensionHelper;
            //Zain
            HMCase hmCaseBuffer          = HMCase::find(HMPatientChargeEntryTable.HMCase);
            HMCaseInsurance hmCaseInsuranceBuffer = HMCaseInsurance::findByCase(hmCaseBuffer.RecId);
            //Zain

            dimensionHelper = new HMFinancialDimensionHelper();

            HMCaseTrans.DefaultDimension = dimensionHelper.GetDefaultDimensionFoCustomerInvoice(HMCaseTrans);
            HMCaseTrans.InventDim = InventDim::findOrCreate(inventdim).inventDimId;

            element.getPrice();
            //Zain
            if(!hmCaseInsuranceBuffer)
                HMCaseTrans.PatientResponsibility = HMPatientPaymentResponsibility::Patient;
            else
                HMCaseTrans.PatientResponsibility = HMPatientPaymentResponsibility::Client;
            //Zain

            
            super();

            HMCaseTrans.updateCaseTransDeductibe(0, HMPatientChargeEntryTable.HMCase);
            HMCaseTrans.doUpdate();
            
			//Zain -- for Demo
            //this.createPurchOrder(HMCaseTrans.RecId);
            //Zain -- for Demo

           
            
            //element.getPrice();
            
            //HMCaseTrans_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            HMCaseTrans caseTrans;
        
            ret = super();
        
            element.markInventDimMadatory(HMCaseTrans.ItemId);
        
            
            if (HMCaseTrans.HMServiceStatus == HMServiceStatus::Complete)
            {
                if(HMCase::find(HMCaseTrans.HMCase).CaseStatus!=HMCaseStatus::Billed)
                {
                    PostMovementJournalLineCancel.enabled(true);
                }
                //Zain
                else
                {
                    PostMovementJournalLine.enabled(false);
                    HMCaseTrans_ds.allowEdit(false);
                    HMPatientChargeEntryLine_ds.allowEdit(false);
                    DeleteProdedure.enabled(false);
                }
                //Zain
                
            }
            else
            {
                PostMovementJournalLineCancel.enabled(false);
                if(HMCaseTrans.HMServiceStatus != HMServiceStatus::Cancelled)
                {
                    PostMovementJournalLine.enabled(true);
                }
                HMCaseTrans_ds.allowEdit(true);
                HMPatientChargeEntryLine_ds.allowEdit(true);
                DeleteProdedure.enabled(true);
            }
    
            if (HMCaseTrans.HMServiceStatus == HMServiceStatus::Cancelled)
            {
                PostMovementJournalLineCancel.enabled(false);
                PostMovementJournalLine.enabled(false);
                HMCaseTrans_ds.allowEdit(false);
                HMPatientChargeEntryLine_ds.allowEdit(false);
                DeleteProdedure.enabled(false);
            }
       
            Charges.text(HMPatientChargeEntryTable.getTotalChargesWithCurrency());
        
            element.updateDesign(InventDimFormDesignUpdate::Active);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void selectionChanged()
        {
            HMCaseTrans chargeLine;

            super();

            for (chargeLine = getFirstSelection(HMCaseTrans_ds); chargeLine; chargeLine = HMCaseTrans_ds.getNext())
            {
                if (chargeLine.HMServiceStatus == HMServiceStatus::Complete)
                {
                    PostMovementJournalLine.enabled(false);
                }
                else
                {
                    PostMovementJournalLine.enabled(true);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>createPurchOrder</Name>
						<Source><![CDATA[
        /// <summary>
        /// createPurchOrder
        /// Created by Zain for Demo
        /// </summary>
        private NOYes createPurchOrder(RecId _hmCaseTrans)
        {
            NOYes				isPOCreated;
            HMCaseTrans			hmCaseTransLocal;
            PurchTable			purchTableLocal;
            PurchLine			purchLineLocal;
            VendTable			vendTable;
            NumberSeq			numberSeq;
            HMResourceMaster	hmResourceMasterLocal;

			try
            {
                hmCaseTransLocal = HMCaseTrans::find(_hmCaseTrans, false, ConcurrencyModel::Auto);
                hmResourceMasterLocal = HMResourceMaster::findByType(HMCase::find(hmCaseTransLocal.HMCase).HMResourceMaster, HMResourceType::Vendor);
				if (hmCaseTransLocal && hmResourceMasterLocal)
                {
                    ttsbegin;
                    numberSeq = NumberSeq::newGetNum(PurchParameters::numRefPurchId());
                    purchTableLocal.clear();
                    purchTableLocal.initValue();
                    purchTableLocal.PurchId = numberSeq.num();
                    //purchTableLocal.HMCaseTrans = hmCaseTransLocal.RecId;
                    purchTableLocal.HMCase = hmCaseTransLocal.HMCase;
                    vendTable = VendTable::findRecId(hmResourceMasterLocal.RefRecId);
                    purchTableLocal.initFromVendTable(vendTable);
                    purchTableLocal.LanguageId = CompanyInfo::languageId();
                    purchTableLocal.InvoiceAccount = vendTable.AccountNum;
                    purchTableLocal.CurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());
                    if (!purchTableLocal.validateWrite())
                        throw Exception::Error;
					else
                    {
                        numberSeq.used();
                        purchTableLocal.insert();
					}

                    purchLineLocal.clear();
                    purchLineLocal.initValue();
                    purchLineLocal.PurchId = purchTableLocal.PurchId;
                    purchLineLocal.initFromPurchTable(purchTableLocal);
                    purchLineLocal.ItemId = hmCaseTransLocal.ItemId;
                    purchLineLocal.QtyOrdered = hmCaseTransLocal.Qty;
                    purchLineLocal.InventDimId = hmCaseTransLocal.InventDim;
                    if (!purchLineLocal.validateWrite())
                        throw Exception::Error;
					else
                        purchLineLocal.insert();
                    ttscommit;
                    isPOCreated = NoYes::Yes;
				}
				else
                    isPOCreated = NOyes::No;

			}
			catch
            {
                ttsabort;
			}

            return isPOCreated;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Deductible</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Created by Zain
            /// </summary>
            public void modified()
            {
                enteredDeductible = HMCaseTrans.Deductible;
                super();
                HMCaseTrans.Deductible = enteredDeductible;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HMOrganizationalUnit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                HMOrganizationalUnit unit;
                InventDim            inventDimLocal;
                InventLocation       warehouse;
            
                unit = HMOrganizationalUnit::find(HMCaseTrans.HMOrganizationalUnit);
                wareHouse = InventLocation::find(unit.InventLocation);


                InventDim.InventLocationId = warehouse.InventLocationId;
                InventDim.InventSiteId = wareHouse.InventSiteId;
                InventDim.wMSLocationId = unit.WMSLocation;
            
                super();
                element.getPrice();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                HMInventTable hmInventTable;
                select HMOrganizationalUnit_Dept from hmInventTable where hmInventTable.InventTable == HMCaseTrans.ItemId;
                HMCaseTrans.ItemName = HMInventTableClass::showDescription(HMCaseTrans.ItemId);
                if(HMCaseTrans.HMOrganizationalUnit == 0)
                {
                    HMCaseTrans.HMOrganizationalUnit =    hmInventTable.HMOrganizationalUnit_Dept;
                    HMCaseTrans_ds.object(fieldNum(HMCaseTrans,HMOrganizationalUnit)).modified();
                }
                HMPatientChargeEntryLine.RevenueCode = HMItemCptPcsCodes::getItemRevenueCode(HMCaseTrans.ItemId);
                super();
                element.updateDesign(InventDimFormDesignUpdate::FieldChange);
                InventDim.clearNotSelectedDim(element.inventDimSetupObject().parmDimParmEnabled());
                element.markInventDimMadatory(HMCaseTrans.ItemId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.getPrice();
                HMCaseTrans.TotalAmount = HMCaseTrans.SalesPrice * HMCaseTrans.Qty;
                HMCaseTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                
                HMCaseTrans.TotalAmount = HMCaseTrans.SalesPrice * HMCaseTrans.Qty;
                HMCaseTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>HMPatientCase</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            HMPatientCase_ds.queryBuildDataSource().addSortField(fieldNum(HMCase, ModifiedDateTime), SortOrder::Descending);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            //Zain  MazikCare
            HMBillParameters            billParameters;
            HMCase                      caseTable;
            HMCaseInsurance             caseInsurance;
            HMInsuranceCarrier          insuranceCarrier;
            CustTable                   custTableLocal;
            //Zain  MazikCare
        
        
            ret = super();
        
            //Zain  MazikCare
            select * from billParameters;
        
            select * from caseInsurance
                    where caseInsurance.HMCase == HMPatientCase.RecId
                    && caseInsurance.IsActive == NoYes::Yes;
        
            select CustType from custTableLocal
            where custTableLocal.AccountNum == caseInsurance.InsuranceCarrier;
            HMPatientCase_ds.object(fieldNum(HMCase,AppointmentNumber)).allowEdit(true);
            if(caseInsurance)
            {
                HMPatientCase_ds.object(fieldNum(HMCase, HMFinancialClass)).allowEdit(false);
            }
            else
            {
                HMPatientCase_ds.object(fieldNum(HMCase, HMFinancialClass)).allowEdit(true);
                if (HMPatientCase.HMFinancialClass == 0)
                    HMPatientCase.HMFinancialClass = HMFinancialClass::findByCode(billParameters.HMFinancialClass).RecId;
            }
            //Zain  MazikCare
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>payerName</Name>
						<Source><![CDATA[
        display Name payerName()
        {
            HMCaseInsurance       hmCaseInsuranceLocal;
            HMFinancialClass      hmFinancialClass;
            Name                  payrName;
            Counter               recCount = 0;
        
        
            //while select * from hmCaseInsurance
            //where hmCaseInsurance.HMCase == HMPatientCase.RecId
            //{
            //if (hmCaseInsurance.IsActive == NoYes::Yes)
            //{
            ////if (HMPatientCase.HMFinancialClass != 0)
            //payrName = HMCaseInsurance::find(hmCaseInsurance.RecId).Name();
            //}
            //else if (hmCaseInsurance.IsActive == NoYes::No)
            //{
            ////if (hmPatientCase.HMFinancialClass == 0)
            //payrName = HMPatient::find(HMPatientCase.HMPatient).patientName();
            //}
            //recCount++;
            //}
            //
            //if (recCount == 0)
            //{
            //payrName = HMPatient::find(HMPatientCase.HMPatient).patientName();
            //}
        
            if(HMFinancialClass::find(HMPatientCase.HMFinancialClass).CashFinancialClass == NoYes::Yes)
            {
                payrName = HMPatient::find(HMPatientCase.HMPatient).patientName();
            }
            else
            {
                select * from hmCaseInsurance
                where hmCaseInsurance.HMCase == HMPatientCase.RecId
                && hmCaseInsurance.IsActive == NoYes::Yes;
        
                if(hmCaseInsurance)
                {
                    payrName = HMCaseInsurance::find(hmCaseInsurance.RecId, false, ConcurrencyModel::Auto).Name();
                }
                else
                {
                    payrName = HMPatient::find(HMPatientCase.HMPatient).patientName();
                }
        
            }
        
        
            //if (hmCaseInsurance)
            //{
            //if (HMPatientCase.HMFinancialClass != 0)
            //payrName = HMCaseInsurance::find(hmCaseInsurance.RecId).Name();
            //else if (hmPatientCase.HMFinancialClass == 0)
            //payrName = HMPatient::find(HMPatientCase.HMPatient).patientName();
            //}
            //else
            //payrName = HMPatient::find(HMpatientCase.HMPatient).patientName();
        
        
        
            return payrName;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>HMFinancialClass</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                HMFinancialClass financialClass;
                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource;
                QueryBuildRange queryBuildRange;
            
                SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMFinancialClass), _formReferenceControl, true);
                ;
                sysTableLookup.addLookupField(fieldNum(HMFinancialClass, HMCode));
                sysTableLookup.addLookupField(fieldNum(HMFinancialClass, Description));
            
                queryBuildDataSource = query.addDataSource(tableNum(HMFinancialClass));
            
                queryBuildRange = queryBuildDataSource.addRange(fieldNum(HMFinancialClass, CashFinancialClass));
                queryBuildRange.value(queryValue(NoYes::Yes));
            
                sysTableLookup.parmQuery(query);
            
                financialClass = sysTableLookup.performFormLookup();
                sysTableLookup.addSelectionfield(fieldNum(HMFinancialClass, HMCode));
            
                return financialClass;
            
            
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>HMCaseOrig</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMPatient</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            //Fix: Unable to add charge entry form to workspace
            //this.query().datasourceTable(tableNum(HMPatient)).addDynalink(fieldNum(HMPatient,CustTable),CustTable,fieldNum(CustTable,RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMCasePaymtReceivedDetails</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                if(HMCasePaymtReceivedDetails.LedgerJournalTrans != 0)
                {
                    ret = checkFailed("Posted payments cannot be deleted");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            HMCasePaymtReceivedDetails.RemainingAmountForSettlement = HMCasePaymtReceivedDetails.AmountPaid;
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
            if(ret)
            {
                HMCasePaymtReceivedDetails_ds.allowEdit(HMCasePaymtReceivedDetails.LedgerJournalTrans == 0);
                PrintCashReport.enabled(HMCasePaymtReceivedDetails.LedgerJournalTrans != 0);
                BankPaymentCancel.enabled(HMCasePaymtReceivedDetails.LedgerJournalTrans != 0 
                                //Musab.
                                && HMCasePaymtReceivedDetails.IsPaymtCancelled == NoYes::No);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void delete()
        {
            if (this.validateDelete())
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void selectionChanged()
        {
            HMCasePaymtReceivedDetails paymentLines;

            super();

            for (paymentLines = getFirstSelection(HMCasePaymtReceivedDetails_ds); paymentLines; paymentLines = HMCasePaymtReceivedDetails_ds.getNext())
            {
                if (paymentLines.LedgerJournalTrans)
                {
                    HMPatientPaymentPostUS.enabled(false);
                }
                else
                {
                    HMPatientPaymentPostUS.enabled(true);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            inventDim.data(InventDim::find(HMCaseTrans.InventDim));
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().clearDynalinks();
            this.queryBuildDataSource().clearLinks();
            this.queryBuildDataSource().addRange(fieldNum(CustTable,CustType)).value(SysQuery::value(CustType::Patient));
        
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMPatientInsurance</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;
            HMPatientEmployer _hmpatientEmployer;
            CustTable           _custtableLocal;
            HMInsuranceContract _contract = HMInsuranceContract::find(HMPatientInsurance.HMInsuranceContract);
            ret = super();
            EmployerAccountNumber.text('');
            Employername.text('');
            EmployerValidFrom.dateValue(dateNull());
            EmployerValidTo.datevalue(datenull());
            select *from _hmpatientEmployer where _hmpatientEmployer.HMPatient == HMPatientInsurance.HMPatient
                && _hmpatientEmployer.EmployerAccountNum == _contract.EmployerAccountNum;
            if(_hmpatientEmployer)
            {
                select *from _custtableLocal where _custtableLocal.AccountNum == _hmpatientEmployer.EmployerAccountNum;
                EmployerName.text(_custtableLocal.name());
                EmployerAccountNumber.text(_hmpatientEmployer.EmployerAccountNum);
                EmployerValidFrom.dateValue(_hmpatientEmployer.ValidFrom);
                EmployerValidTo.datevalue(_hmpatientEmployer.Validto);
            }

    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>EditCase</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            FormRun formRun;
            ;
            super();
        
            args = new args(formstr(HMCaseDetail));
            args.record(hmcase);
            formrun = classfactory.formrunclass(args);
            formrun.init();
            formrun.run();
            formrun.wait();
            formrun.detach();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PreviousBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        
            super();
            element.setCurrentDate(currentDate - 1);
            if (resetCliciked)
            {
                HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,RecId));
                resetCliciked = false;
            }
        
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,createdDateTime));
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(currentDate));
            HMPatientChargeEntryTable_DS.executeQuery();
            element.updateImportButton();
            HMPatient_ds.refresh();
            HMPatient_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NextBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        
            super();
            element.setCurrentDate(currentDate + 1);
            if (resetCliciked)
            {
                HMPatientChargeEntryTable_Ds.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,RecId));
                resetCliciked = false;
            }
        
            HMPatientChargeEntryTable_Ds.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRange(fieldNum(HMPatientChargeEntryTable,createdDateTime));
            HMPatientChargeEntryTable_Ds.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,createdDateTime)).value(SysQuery::value(currentDate));
            HMPatientChargeEntryTable_Ds.executeQuery();
            element.updateImportButton();
            HMPatient_ds.refresh();
            HMPatient_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Reset</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            //HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).clearRanges();
            HMPatientChargeEntryTable_DS.query().dataSourceTable(tableNum(HMPatientChargeEntryTable)).addRange(fieldNum(HMPatientChargeEntryTable,RecId)).value(SysQuery::value(0));
            HMPatientChargeEntryTable_DS.executeQuery();
            //AddProcedures.enabled(false);
            element.updateImportButton();
            resetCliciked = true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPaymentCentreCreateInvoice</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if(!HMCaseTrans::findstatus(HMPatientChargeEntryTable.HMCase))
            {
                warning("All service status must be in complete state");
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMSalesInvoiceCreate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            HMChargeEntryClass chargeEntry = new HMChargeEntryClass();
        
            if(chargeEntry.isChargeEntryPerformed(HMPatientChargeEntryTable.RecId))
            {
                super();
        
                if(!HMPatientChargeEntryTable.RecId)
                {
                    Patient.text('');
                }
        
                element.updateImportButton();
            }
            else
            {
                warning("@MAZ6610");
            }
        
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonJournalInvoice</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            args.record(SalesTable::find(HMPatientChargeEntryTable.SalesTable));
            new MenuFunction(menuitemDisplayStr(CustInvoiceJournal_Action),MenuItemType::Display).run(args);
            //super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMSalesInvoiceViewProforma</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            HMChargeEntryClass chargeEntry = new HMChargeEntryClass();
        
            if(chargeEntry.isChargeEntryPerformed(HMPatientChargeEntryTable.RecId))
            {
                super();
            }
            else
            {
                warning("@MAZ6609");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostMovementJournal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            List        caseTransList = new List(Types::Record);
            HMCaseTrans caseTrans, caseTransLocal;
            InventTable inventTable;
        
            super();
        
            while select caseTrans
                where caseTrans.HMCase == HMCase.RecId
                    && (caseTrans.HMServiceStatus == HMServiceStatus::NotStarted
                        || caseTrans.HMServiceStatus == HMServiceStatus::Complete)
                join inventTable
                where inventTable.ItemId == caseTrans.ItemId
        //            && inventTable.ItemType == ItemType::Item
            {
                if(inventTable.ItemType == ItemType::Item)
                {
                    caseTransList.addEnd(caseTrans);
                }
                else
                {
                    caseTransLocal = HMCaseTrans::find(caseTrans.RecId, true);
        
                    ttsBegin;
                    caseTransLocal.HMServiceStatus = HMServiceStatus::Complete;
                    ttsCommit;
                }
            }
        
            if (!caseTransList.empty())
            {
                HMMovementJournalClass::createJournalLines(caseTransList);
            }
        
            element.refreshData();
        
            //HMPatientChargeEntryTable_DS.executeQuery();
            //HMPatientChargeEntryTable_DS.refresh();
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMCMSClaimGenerateChargeEntry</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            HMClaimTable    hMClaimTable;
            select HMClaimTable where HMClaimTable.HMPatientChargeEntryTable==HMPatientChargeEntryTable.RecId;
        
            if(!hMClaimTable)
            {
                super();
            }
            else
            {
                warning("Claim already generated");
            }
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InsuranceVerification</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            super();

            new Browser().navigate("https://mazikcaredemo1.crm.dynamics.com/main.aspx?etc=10612&id=%7bf567aa20-c66f-e811-a966-000d3a109495%7d&pagetype=entityrecord",true, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateInvoices</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            HMPatientChargeEntryTable chargeEntryTable;
            HMGenerateInvoice hmGenerateInvoice = new HMGenerateInvoice();

            chargeEntryTable = HMPatientChargeEntryTable_ds.getFirst();
            container recID;

            while(chargeEntryTable)
            {
                hmGenerateInvoice.createInvoice(chargeEntryTable);
                //recID += [chargeEntryTable.RecId];

                HMPatientChargeEntryTable_ds.getNext();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if (this.valueStr() == '' && ToDate.valueStr() == '')
                    DateSearch.enabled(false);
                else
                    DateSearch.enabled(true);
            }
            ToDate.dateValue(this.dateValue());
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if (this.valueStr() == '' && FromDate.valueStr() == '')
                    DateSearch.enabled(false);
                else
                    DateSearch.enabled(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OrgUnit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args argsLocal;
            FormRun itemLookUp;
        
            argsLocal = new Args();
            argsLocal.name(formstr(HMMedisyClinicLookup));
            argsLocal.caller(element);
            itemLookUp = ClassFactory.formRunClass(argsLocal);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            RecId locationRecId;
            HMCaseNo caseNo;
        
            ret = super();
        
            if(ret)
            {
                if(this.text() == '')
                {
                    element.storeOrganizationalUnit(0);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            if (element.generateHeaderDateRanges())
                element.refreshGrid();
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CopyOfHMPatientChargeEntryTable_HMClinicStaff</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args                            args;
            MenuFunction                    menuFunction;
        
            args = new Args();
            args.caller(element);
        
            menuFunction = new MenuFunction(menuitemdisplaystr(HMClinicStaffMembers),MenuItemType::Display);
            menuFunction.run(args);
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMPhysicianAdvanceLookup));
            args.caller(element);
            args.parmEnumType(enumNum(HMAdvanceStaffLookupParm));
            args.parmEnum(HMAdvanceStaffLookupParm::Physician);
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Patient</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMPatientAdvanceLookup));
            args.caller(element);
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HMPatient           hmPatientLocal;
            DirPartyTable       dirPartyTableLocal;
            CustTable           custTableLocal;
            ret = super();
        
            if(ret)
            {
                if (this.valueStr() != "")
                {
                    select * from hmPatientLocal
                        join * from custTableLocal
                        join * from dirPartyTableLocal
                        where hmPatientLocal.CustTable == custTableLocal.RecId
                        && custTableLocal.Party == dirPartyTableLocal.RecId
                        && dirPartyTableLocal.Name == this.valueStr();
        
                    if (hmPatientLocal.RecId)
                    {
                        //flag = true;
                        element.getPatient(hmPatientLocal);
                    }
        
                    else
                    {
                        warning(strFmt("@SYS316757",'Patient'));
                        this.text(HMPatient::find(HMPatientChargeEntryTable.HMPatient).PatientName());
                    }
                }
                else
                {
                    element.getPatient(hmPatientLocal);
        
                }
        
        
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CopyOfHMPatientChargeEntryTable_HMClinicStaff1</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args                            args;
            MenuFunction                    menuFunction;
        
            args = new Args();
            args.caller(element);
        
            menuFunction = new MenuFunction(menuitemdisplaystr(HMClinicStaffMembers),MenuItemType::Display);
            menuFunction.run(args);
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMPhysicianAdvanceLookup));
            args.caller(element);
            args.parmEnumType(enumNum(HMAdvanceStaffLookupParm));
            args.parmEnum(HMAdvanceStaffLookupParm::Physician);
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMFinancialClass</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                HMPatientCase_ds.write();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientInsurance_HMInsuranceContractId</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientInsurance_HMInsuranceContractName</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansId</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansName</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansNetworkId</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintCashReport</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            LedgerJournalTrans ledgerJournalTrans = LedgerJournalTrans::findRecId(HMCasePaymtReceivedDetails.LedgerJournalTrans,false);
            Args args;
            super();
            if(LedgerJournalTrans)
            {
                args = new Args();
                Args.record(ledgerJournalTrans);
                new MenuFunction(menuitemOutputStr(CustVendPaymProposal),MenuItemType::Output).run(args);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientPaymentPostUS</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            HMCasePaymtReceivedDetails_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankPaymentCancel</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Musab.
            HMCaseTrans     hmCaseTransLocal;
            HMCaseTransDetail   hmCaseTransDetail;
          
            Args args = new Args();
            //super();
            args.record(CustTrans::find(LedgerJournalTrans::findRecId(HMCasePaymtReceivedDetails.LedgerJournalTrans, false).CustTransId));
            args.caller(this);
            new MenuFunction(menuitemActionStr(BankPaymentCancel), MenuItemType::Action).run(args);

            // Musab.
            update_recordset hmCaseTransLocal
                    setting BillingStatus = HMBillStatus::NotPaid
                join hmCaseTransDetail  
                    where hmCaseTransDetail.HMCaseTrans == hmCaseTransLocal.RecId
                       && hmCaseTransDetail.HMCasePaymtReceivedDetails == hmCasePaymtReceivedDetails.RecId;

            hmCasePaymtReceivedDetails.IsPaymtCancelled = NoYes::Yes;
            HMCaseTrans_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMCasePaymtReceivedDetails_CustPaymModeTable</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            if (ret)
            {
                HMCasePaymtReceivedDetails_PaymReference.mandatory(CustPaymMethodVal::exist(this.text(), CustPaymentValidate::PaymReference));
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        //NS: Bug 3781:Filter the Method of Payments on charge entry and all payment form and show only those which field "Clinic Use=Yes" by Ammar.Ali
        /// <summary>
        ///Looks up methods of payment with clinic use only
        /// </summary>
        public void lookup()
        {
            SysTableLookup  lookup;
            Query           query;

            query = new Query();
            query.addDataSource(tableNum(CustPaymModeTable)).addRange(fieldNum(CustPaymModeTable, ClinicUse)).value(SysQuery::value(NoYes::Yes));

            lookup = SysTableLookup::newParameters(tableNum(CustPaymModeTable), this);
            lookup.addLookupfield(fieldNum(CustPaymModeTable, PaymMode), true);
            lookup.parmQuery(query);
            lookup.performFormLookup();
        }
        //NE: Bug 3781:Filter the Method of Payments on charge entry and all payment form and show only those which field "Clinic Use=Yes" by Ammar.Ali

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMCasePaymtReceivedDetails_PatientPaymentType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            AccountNum accountNum;
        
            ret = super();
        
            accountNum = HMPatientChargeEntryTable.getCaseInsuranceNum();
        
            if (!accountNum
                && (HMCasePaymtReceivedDetails.PatientPaymentType == HMPatientPaymentType::CoIns
                || HMCasePaymtReceivedDetails.PatientPaymentType == HMPatientPaymentType::CoPay
                || HMCasePaymtReceivedDetails.PatientPaymentType == HMPatientPaymentType::Deductible))
            {
                HMCasePaymtReceivedDetails.PatientPaymentType = -1;
                ret = checkFailed('This payment type cannot be selected, when payer type is not insurance carrier');
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Import</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
        
            if(element.args().parmEnum() == HMCaseType::OutPatient || element.args().parmEnum() == HMCaseType::Surgery)
            {
                element.importOutpatientAppointmentServices();
            }
        
        
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostMovementJournalLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            List            caseTransList = new List(Types::Record);
            List            caseTransListAccrueRevenue = new List(Types::Record);
            HMCaseTrans     hmCaseTransLocal;
            HMCaseTrans     caseTrans;
            InventTable     inventTable;
            //Zain
            HMCasePaymtReceivedDetails hmCasePaymtReceivedDetailsLocal;
            //Zain
        
            boolean recordExist = false;
            boolean isPosted    = false;

            if (HMParameters::find().IsFinancialClassMandatory == NoYes::Yes 
               && HMPatientCase.HMFinancialClass == 0)
            {
                throw error("Financial class must be specified.");
            }
            else
            {
                //Musab
                hmCaseTransLocal = HMCaseTrans_ds.getFirst(true);
                //Zain
                if (HMBillParameters::find().AllowPaymBeforeService
                //Musab
                && HMClaimTableSetup::findByRecEnum(hmCaseTransLocal.HMClaimTableSetup_PatientStatus, HMClaimEnumList::PatientStatus).Code == 'OP')
                {
                    select * from hmCasePaymtReceivedDetailsLocal
                    where hmCasePaymtReceivedDetailsLocal.HMCase == HMPatientChargeEntryTable.HMCase
                    && hmCasePaymtReceivedDetailsLocal.LedgerJournalTrans != 0;

                    if (hmCasePaymtReceivedDetailsLocal)
                    {
                        super();
                        try
                        {
                            hmCaseTransLocal = HMCaseTrans_ds.getFirst(true);
                
                            while(hmCaseTransLocal)
                            {
                                recordExist = true;
                                // Fixed by Musab. RCM - Bug 3271.
                                // RCM Start:
                                try
                                {
                                    if (hmCaseTransLocal.HMServiceStatus == HMServiceStatus::NotStarted
                                    || hmCaseTransLocal.HMServiceStatus == HMServiceStatus::Ordered)
                                    {
                                        // Musab.
                                        if (hmCaseTransLocal.BillingStatus == HMBillStatus::Paid)
                                        {
                                            //Marij
                                            if(hmCaseTransLocal.SalesPrice != 0)
                                            {
                                                if(inventTable::find(hmCaseTransLocal.ItemId).ItemType == ItemType::Item)
                                                {
                                                    caseTransList.addEnd(hmCaseTransLocal);
                                                    caseTransListAccrueRevenue.addEnd(hmCaseTransLocal);
                                                    //isPosted = true;
                                                }
                                                else if(inventTable::find(hmcasetranslocal.ItemId).ItemType == ItemType::Service)
                                                {
                                                    caseTransListAccrueRevenue.addEnd(hmCaseTransLocal);
                                                    //isPosted = true;
                                                }
                                            }
                                            else
                                        throw error("Sales price can not be 0. Line not posted.");
                                            //Marij
                                        }
                                        else
                                        {
                                            warning("@MAZ16877");
                                        }
                                    
                                    }
                                    else
                                    {
                                        throw error("Service status must be in not started state");
                                    }
                                }
                                catch (Exception::Error)
                                {

                                }
                                // RCM End.
     
                                // Musab.
                                // Bug 3521 - Start:
                                if(HMBillParameters::find().IsPatientStatusMandatory == NoYes::Yes
                                && hmCaseTransLocal.HMClaimTableSetup_PatientStatus == 0)
                                {
                                    throw error("Patient status for each charge entry line must be filled in");
                                }
                                // End.

                                //if(isPosted)
                                //{
                                //    hmCaseTransLocal.selectForUpdate(true);
                                //    hmCaseTransLocal.HMServiceStatus = HMServiceStatus::Complete;
                                //    hmCaseTransLocal.update();
                                //}

                                hmCaseTransLocal = HMCaseTrans_ds.getNext();
                            }
                            if (!caseTransList.empty())
                            {
                                ttsBegin;
                                HMMovementJournalClass::createJournalLines(caseTransList);
                                ttsCommit;

                                info("Selected lines posted successfully.");
                            }
                            if(!caseTransListAccrueRevenue.empty())
                            {
                                ttsBegin;
                                HMAccrueRevenueJournalClass::createJournalLines(caseTransListAccrueRevenue);
                                ttsCommit;

                                info("Selected lines posted successfully.");
                                element.updateCaseTransInvetoryStatus(caseTransListAccrueRevenue, HMServiceStatus::Complete);
                            }
                            if(!recordExist)
                            {
                                throw warning("Please mark atleast one record to post");
                            }

							//Zain - for Demo
                            //element.createPurchOrderHeaderList(caseTransListAccrueRevenue.getEnumerator());
                            //Zain - for Demo

                            element.refreshData();

                            
                        }
                        catch
                        {
        
                        }
                    }
                    else
                    {
                        warning("@MAZ16877");
                    }
                
                }
                else
                {
                    super();
                    try
                    {
                        hmCaseTransLocal = HMCaseTrans_ds.getFirst(true);
                
                        while(hmCaseTransLocal)
                        {
                            recordExist = true;
                            // Fixed by Musab. RCM - Bug 3271.
                            // RCM Start:
                            try
                            {
                                if (hmCaseTransLocal.HMServiceStatus == HMServiceStatus::NotStarted
                                || hmCaseTransLocal.HMServiceStatus == HMServiceStatus::Ordered)
                                {
                                    //Marij
                                    if(hmCaseTransLocal.SalesPrice != 0)
                                    {
                                        if(inventTable::find(hmCaseTransLocal.ItemId).ItemType == ItemType::Item)
                                        {
                                            caseTransList.addEnd(hmCaseTransLocal);
                                            caseTransListAccrueRevenue.addEnd(hmCaseTransLocal);
                                            //isPosted = true;
                                        }
                                        else if(inventTable::find(hmcasetranslocal.ItemId).ItemType == ItemType::Service)
                                        {
                                            caseTransListAccrueRevenue.addEnd(hmCaseTransLocal);
                                            //isPosted = true;
                                        }
                                    }
                                    else
                                throw error("Sales price can not be 0. Line not posted.");
                                    //Marij
                                }
                                else
                                {
                                    throw error("Service status must be in not started state");
                                }
                            }
                            catch (Exception::Error)
                            {

                            }
                            // RCM End.
     
                            // Musab.
                            // Bug 3521 - Start:
                            if(HMBillParameters::find().IsPatientStatusMandatory == NoYes::Yes
                            && hmCaseTransLocal.HMClaimTableSetup_PatientStatus == 0)
                            {
                                throw error("Patient status for each charge entry line must be filled in");
                            }
                            // End.

                            //if(isPosted)
                            //{
                            //    hmCaseTransLocal.selectForUpdate(true);
                            //    hmCaseTransLocal.HMServiceStatus = HMServiceStatus::Complete;
                            //    hmCaseTransLocal.update();
                            //}

                            hmCaseTransLocal = HMCaseTrans_ds.getNext();
                        }
                        if (!caseTransList.empty())
                        {
                            ttsBegin;
                            HMMovementJournalClass::createJournalLines(caseTransList);
                            ttsCommit;

                            info("Selected lines posted successfully.");
                        }
                        if(!caseTransListAccrueRevenue.empty())
                        {
                            ttsBegin;
                            HMAccrueRevenueJournalClass::createJournalLines(caseTransListAccrueRevenue);
                            ttsCommit;

                            info("Selected lines posted successfully.");
                            element.updateCaseTransInvetoryStatus(caseTransListAccrueRevenue, HMServiceStatus::Complete);
                        }
                        if(!recordExist)
                        {
                            throw warning("Please mark atleast one record to post");
                        }

                        //Zain -- for Demo
                        //element.createPurchOrderHeaderList(caseTransListAccrueRevenue.getEnumerator());
                        //Zain -- for Demo

                        element.refreshData();
                    }
                    catch
                    {
        
                    }
                }
                //Zain
            }
            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostMovementJournalLineCancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            List            caseTransList = new List(Types::Record);
            List            caseTransListAccrueRevenue = new List(Types::Record);
            HMCaseTrans     hmCaseTransLocal;
            HMCaseTrans     caseTrans;
            InventTable     inventTable;
        
            boolean recordExist = false;
            super();
            try
            {
                hmCaseTransLocal = HMCaseTrans_ds.getFirst(true);
                ttsBegin;
                while(hmCaseTransLocal)
                {
                    try
                    {
                        recordExist = true;
                        if (hmCaseTransLocal.HMServiceStatus == HMServiceStatus::Complete)
                        {
                            if(inventTable::find(HMCaseTrans.ItemId).ItemType == ItemType::Item)
                            {
                                caseTransList.addEnd(hmCaseTransLocal);
                            }
                            caseTransListAccrueRevenue.addEnd(hmCaseTransLocal);
                            hmCaseTransLocal.selectForUpdate(true);
                            hmCaseTransLocal.HMServiceStatus = HMServiceStatus::Cancelled;
                            hmCaseTransLocal.update();
                        }
                        else
                        {
                            throw error("Service status must be in not started state");
                        }
                        
                    }
                    catch (Exception::Error)
                    {
                       
                    }
                    
                    hmCaseTransLocal = HMCaseTrans_ds.getNext();
                }
                if (!caseTransList.empty())
                {
                    HMMovementJournalClass::createJournalLines(caseTransList,true);
                }
                if(!caseTransListAccrueRevenue.empty())
                {
                    HMAccrueRevenueJournalClass::createJournalLines(caseTransListAccrueRevenue,true);
                }
                if(!recordExist)
                {
                    throw warning("Please mark atleast one record to post");
                }
                ttsCommit;
                info("Selected lines posted successfully");
                element.refreshData();
            }
            catch(Exception::Error)
            {
        
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMCreatePurchaseOrder</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            container		            con;
            Args			            args;
            str				            multiSelectString;
            HMCaseTrans		            hmCaseTransLocal;
            MultiSelectionHelper        selectionHelper = MultiSelectionHelper::construct();//Create instance of class

            args = new Args();
            selectionHelper.parmDatasource(HMCaseTrans_ds);
            hmCaseTransLocal = selectionHelper.getFirst();

			while (hmCaseTransLocal)
            {
				con = conIns(con, 1, hmCaseTransLocal.RecId);
				multiSelectString = con2Str(con, ',');
                hmCaseTransLocal = selectionHelper.getNext();
			}

            args.parm(multiSelectString);
            new MenuFunction(menuItemActionStr(HMCreatePurchaseOrder), MenuItemType::Action).run(args);
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMCreateSalesOrder</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            container		            con;
            Args			            args;
            str				            multiSelectString;
            HMCaseTrans		            hmCaseTransLocal;
            MultiSelectionHelper        selectionHelper = MultiSelectionHelper::construct();//Create instance of class
            
    
            args = new Args();
            selectionHelper.parmDatasource(HMCaseTrans_ds);
            hmCaseTransLocal = selectionHelper.getFirst();//HMCaseTrans_ds.getFirst(1);
    
            while (hmCaseTransLocal)
            {
                con = conIns(con, 1, hmCaseTransLocal.RecId);
                multiSelectString = con2Str(con, ',');
                hmCaseTransLocal = selectionHelper.getNext();
            }
    
            args.parm(multiSelectString);
            new MenuFunction(menuItemActionStr(HMCreateSalesOrder), MenuItemType::Action).run(args);
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewAttachments</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            Args args = new Args();

            args.record(HMPatientChargeEntryLine);

            args.caller(this);

            new MenuFunction(menuItemDisplayStr(DocuView), MenuItemType::Display).run(args);

            //super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _FromTab, int _ToTab)
        {
            super(_FromTab, _ToTab);
        
            if(_ToTab == 1)
            {
                EditProcedure.enabled(true);
                DeleteProdedure.enabled(true);
                HMPatientChargeEntryLine_ds.allowDelete(true);
            }
            else if(_ToTab == 2)
            {
                EditProcedure.enabled(false);
                DeleteProdedure.enabled(false);
                HMPatientChargeEntryLine_ds.allowDelete(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientEncounterCharge_InventTable</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            HMProcedureCodeMaster hMProcedureCodeMasterlocal;
            boolean ret;
            ret = super();
            if(HMCaseTrans.ItemId)
            {
                HMPatientChargeEntryLine.RevenueCode=HMCaseTrans::defaultRevenueCode(HMCaseTrans.ItemId);
                HMPatientChargeEntryLine.CPTCodes=HMCaseTrans::defaultPCSCode(HMCaseTrans.ItemId);
                element.getPrice();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///Enable search by item/service name by Ammar.Ali for MazikCare
        /// </summary>
        public void lookup()
        {
            InventTable::lookupItem(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            element.getPrice();

    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            element.getPrice();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_inventBatchId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            selectedInventBatchId = this.valueStr();
            
            element.getPrice();

    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPatientChargeEntryLine_RevenueCode</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            HMProcedureCodeMaster procedureCodeMaster;
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource, queryBuildDataSource2;
            QueryBuildRange queryBuildRange;
        
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMProcedureCodeMaster), this, true);
        
            queryBuildDataSource = query.addDataSource(tableNum(HMProcedureCodeMaster));
            queryBuildDataSource2 = queryBuildDataSource.addDataSource(tableNum(HMItemCptPcsCodes));
            queryBuildDataSource2.joinMode(JoinMode::InnerJoin);
            queryBuildDataSource2.relations(true);
            queryBuildDataSource2.addRange(fieldNum(HMItemCptPcsCodes, ItemId)).value(queryValue(HMCaseTrans.ItemId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.addLookupField(fieldNum(HMProcedureCodeMaster, Code));
            sysTableLookup.addLookupField(fieldNum(HMProcedureCodeMaster, Description));
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMPostPOInvoice</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            container		            con;
            Args			            args;
            str				            multiSelectString;
            PurchTable		            purchTableLocal;
            MultiSelectionHelper        selectionHelper = MultiSelectionHelper::construct();//Create instance of class

            args = new Args();
            selectionHelper.parmDatasource(PurchTable_ds);
            purchTableLocal = selectionHelper.getFirst();

            while (purchTableLocal)
            {
                con = conIns(con, 1, purchTableLocal.PurchId);
                multiSelectString = con2Str(con, ',');
                purchTableLocal = selectionHelper.getNext();
            }

            args.parm(multiSelectString);
            new MenuFunction(menuItemActionStr(HMPostPOInvoice), MenuItemType::Action).run(args);
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMPatientChargeEntryLine</Name>
			<Table>HMPatientChargeEntryLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AuthorizationResponse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Charge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CPTCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Fee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMChargeEntryLineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformingResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlaceOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcedureOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TODate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Units</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffReason</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientChargeEntryTable</Name>
			<Table>HMPatientChargeEntryTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeEntryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCaseAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatient</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientChargeEntryLineGrouped</Name>
			<Table>HMPatientChargeEntryLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AuthorizationResponse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Charge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CPTCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Fee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMChargeEntryLineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformingResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlaceOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcedureOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TODate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Units</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffReason</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCaseTrans</Name>
			<Table>HMCaseTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlternatDrugStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlternatePrimaryCaseTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRMOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deductible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleActual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleCollectionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductiblePercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductiblePerUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Discount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimTableSetup_PatientStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMItemCptPcsCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointmentInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMServiceStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Instructions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDim</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPPS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCaseTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PharmacyBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Protocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelatedAppointmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainingBillAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Urgency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientCase</Name>
			<Table>HMCase</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AddmisionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdmittingDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Clinic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRMCaseRefID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CSVFileGenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiagnosisandProcedureCodeQualifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentControlNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecia</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecib</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ECode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit_Room</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMFinancialClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMParentCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPPSCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRoomType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperatingPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PointOfOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAdmittingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remarks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>serviceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfAdmission</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCaseOrig</Name>
			<Table>HMCase</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AddmisionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdmittingDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Clinic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRMCaseRefID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CSVFileGenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiagnosisandProcedureCodeQualifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentControlNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecia</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecib</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ECode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit_Room</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMFinancialClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMParentCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPPSCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRoomType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperatingPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PointOfOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAdmittingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remarks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>serviceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfAdmission</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCaseTrans</JoinSource>
			<LinkType>Active</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatient</Name>
			<Table>HMPatient</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgeInDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgeInMonths</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BloodGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BoxId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CallNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CanContact</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CivicAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactFirst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPhoneMobile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CriticalMedicalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirPartyRelationshipNextToKin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirPartyTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DrivingLicenseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Employer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Employment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentLogisticsLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncounterActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Executive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutiveProtocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtraCoveredByClient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FamilyPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Field1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormProvision</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Gender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasCareBookRegistration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmEthnicOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmLanguageCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HIPAA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HipaaDateAcknowledge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAgeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBookingOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCalcBirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaffFamilyDoctor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMHijriDateOfBirth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMHijriExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMIdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLaboratories</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNationalIdExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNationalIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientAllergyInvestigationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientRestriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPharmacy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMProfession</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRaceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMReferringPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Image</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InClinicFileLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAuthorized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOnHold</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOutstanding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsVIP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsAddressCountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportExpireDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientHighlights</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalChartNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PictureRefused</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Pilot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreEmployment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreEmploymentProtocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrefModeOfCommunication</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvincialHealthCardExpDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvincialHealthCardNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RAMQ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableMerge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTablePatientDeactivate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecallDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferringPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefusedToProvidePicture</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefuseToSign</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefuseToSignAcknowledge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegisteredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Relationship</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RISRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Salutation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelfEmployed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmBusRelTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SocialSecurityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCasePaymtReceivedDetails</Name>
			<Table>HMCasePaymtReceivedDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountPaid</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPaymModeTable</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPaymtCancelled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientPaymentType</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainingAmountForSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientCase</JoinSource>
			<LinkType>Active</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCaseTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTable</Name>
			<Table>CustTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Affiliated_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgencyLocationCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentCancellationFees</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorityOffice_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCustPaymIdTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthCountyCode_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthPlace_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClearingPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBookingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client_Inactive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNAE_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegister</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterInsetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterSection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyChainId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdSiret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNAFCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsDay_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationVoid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardCVC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditRating</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Curp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustClassificationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeCollectionFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeInterestCharges</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFinalUser_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable_Parent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTradingPartnerCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWhtContributionType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWriteOffRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EinvoiceEANNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceRegister_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryCertificateRequired_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportSales_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressBillOfLading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FactoringAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FederalComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FedNonFedIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocType_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignerId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignResident_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateIncomingFiscalDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeAccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeCollectionletter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeFreeTextInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeInterestNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeProjInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAccountQualification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientAccountQualification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientExtraPaidBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientGenericNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientInvoicePrint</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientM123InstallmentPayments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCollectionGrp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustBadCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustomerSince</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustOnHold</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMEmployeeNumberRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMExtrasPaidByCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMGOPRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMIsPrePaymentAllowedForCust</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMJobTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLateCancellationNoShowCovered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMM123InstallmentPayments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitAssigned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitHandling</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOverridePatientNameInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPONum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPONumberRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPOValidUntil</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMScope</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMTaxExempt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSContributor_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IENum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>INSSCEI_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAutoCreateOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IRS1099CIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsExternallyMaintained</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGurantor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsResident_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssueOwnEntryCertificate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssuerCountry_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPaymTransCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainContactWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryCreditLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryVatDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedParent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedRoot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NIT_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderEntryDeadlineGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OurAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackageDepositExcempt_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackMaterialFeeLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyCountry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNo_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientMerged</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentReference_EE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAccrued</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateTMAGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PresenceType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegNum_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResidenceForeignCountryRegionId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDCaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDPalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDistrictId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierFuelSurcharge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInscription_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubsegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaNumber_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaPISCOFINS_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Suframa_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBorderNumber_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGSTReliefGroupHeading_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThresholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usePurchRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WebSalesOrderDisplay</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatient</JoinSource>
			<LinkType>Active</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMChargeEntryLocationWise</Name>
			<Table>HMChargeEntryLocationWise</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ChargeEntryRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMFinancialClass1</Name>
			<Table>HMFinancialClass</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashFinancialClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCaseInsurance</Name>
			<Table>HMCaseInsurance</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AuthorizationExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoPayAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentDeductibleAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleUpdateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EligibilityComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EligibilityLastChecked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBillingValidationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCoveragePlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceEligibilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientEncounter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientSubscriber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPayerType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBilled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreauthorizationReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelationShip</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelfPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberEmployer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TreatmentAuthorizationCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>Active</LinkType>
			<Index>PriorityIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientInsurance</Name>
			<Table>HMPatientInsurance</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssignmentOfBenefitsIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorizationRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BalanceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoPayAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentDeductibleAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleIncInOutOfPocket</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleMet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleUpdateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EligibilityAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EligibilityComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EligibilityLastChecked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeGrade</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployerNameofTheInsured</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HealthPlanId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCardIssueNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimFileIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimTableSetup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClassOrPlanId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClassOrPlanId1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCorporatePlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMEligibleClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceContract</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceContractClassOrPlans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCoveragePlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceEligibilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsuranceMembershipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientSubscriber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPayerType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceEligibilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OutOfPocket</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OutOfPocketMet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientRelationshipToInsured</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreauthorizationReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelationShip</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseofInformationCertificationIndicat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelfPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberDateOfBirth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberEmployer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubscriberRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCaseInsurance</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PurchTable</Name>
			<Table>PurchTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoSummaryModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailSalesDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeRequestRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlvEarliest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmingPO</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsTarget_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractNum_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CrossDockingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeRateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinalizeClosingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightSlipType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FSHAutoCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCustPurchOrderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAutoNumbering_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEncumbranceRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ListCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalDeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDropShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeSupplier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeVendor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipAutoNumbering_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseOrderHeaderCreationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remarks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqAttention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Requester</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailDriverDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailRetailStatusType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnItemNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReasonCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReplacementCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipCreateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipVersioning</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMVendRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>URL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPurchPlacer</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientCase</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PurchLine</Name>
			<Table>PurchLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementSkipAutoLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentScheduleHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetBookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetTransTypePurch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarCodeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetReservationLine_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFOPTable_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Complete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedTaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreateFixedAsset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditedVendInvoiceTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPurchaseOrderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EditableInWorkflow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMisCommitedContract</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMItemManufacturer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointmentInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyOSOSourcingInventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyOSOSourcingInventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventInvoiceNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventReceivedNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFinalized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInvoiceMatched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPwp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualModifiedField</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingContractHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDropShipComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDropShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDropShipStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCROrderLine2PriceHistoryRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedWHSLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSCalculationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWInventReceivedNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcurementCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainScheduleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATotalRetainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseOrderLineCreationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchCommitmentLine_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchReceivedNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchReqId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchReqLineRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBOPackageLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceivedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remainder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainPurchFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainPurchPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqAttention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPlanIdSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPOId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Requester</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailLineNumEx1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPackageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTempValueEx2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnActionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDispositionCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Scrap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipCreateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipDeliveryScheduleUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipDistributionUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticValue_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatTriangularDeal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StockedProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncIntercompanySalesLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMItemVendRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAutogenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdBaseCur_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeSheetHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnderDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WfDeliveryDueState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WfInvReceivedState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowState</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PurchTable</JoinSource>
			<Index>PurchLineIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientEmployer</Name>
			<Table>HMPatientEmployer</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployerAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMEmployerGroupAll</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Validto</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatient</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesTable</Name>
			<Table>SalesTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoSummaryModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsTarget_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreateFromMaziKCare</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardApprovalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthorization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthorizationError</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardCustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurBankAccount_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsExportOrder_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsShippingBill_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDateControlType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceLineSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Estimate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocType_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightSlipType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreationOrig</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAutoCreateOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDeliveryOrig</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAutoNumbering_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCROrderStopped</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MedisysServiceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipAutoNumbering_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribAutoRes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateProgramTMAGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchOrderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannelTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnItemNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReasonCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReplacementCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReplacementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOriginId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierDeliveryContact</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierDlvType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierExpeditedShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierFuelSurcharge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierResidential</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipCreateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipLineUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmCampaignId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmSalesAmountTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Touched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>URL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerSalesResponsible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerSalesTaker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientCase</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">Order Fulfillment</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Misc</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>NewCase</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<CopyCallerQuery>No</CopyCallerQuery>
								<MenuItemName>HMCreateCaseDialog</MenuItemName>
								<OpenMode>New</OpenMode>
								<Text>New Case</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>HMCaseEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306366</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<CopyCallerQuery>No</CopyCallerQuery>
								<DataSource>HMPatientCase</DataSource>
								<MenuItemName>HMCaseDetailEdit</MenuItemName>
								<Text>Edit Case</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Demographics</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>HMPatient</DataSource>
								<MenuItemName>HMPatientChartRegistrationEdit</MenuItemName>
								<Text>Demographics</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>NewDelete</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>NewButton</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<Command>New</Command>
										<NormalImage>New</NormalImage>
										<Primary>Yes</Primary>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>DeleteButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<Command>DeleteRecord</Command>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>Delete</NormalImage>
										<Primary>Yes</Primary>
										<SaveRecord>No</SaveRecord>
										<Text>@SYS14425</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>HMPatientChargeEntryTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RecordBasics</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMCasePaymentSettlmentDetails</Name>
										<ElementPosition>220254732</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientCase</DataSource>
										<MenuItemName>HMCasePaymentSettlmentDetails</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Edit_</Name>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>EditCase</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1207959549</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Text>Case</Text>
											</AxFormControl>
										</Controls>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>Edit</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PreviousBtn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ7436</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS16148</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>Search</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<ImageLocation>AOTResource</ImageLocation>
										<MenuItemName>HMPatientChargeEntrySearch</MenuItemName>
										<NormalImage>HM_Seach_patients_32x32_png</NormalImage>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>NextBtn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ7437</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<NormalImage>Next</NormalImage>
										<Text>@SYS6441</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Reset</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ5959</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS3073</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMPaymentCentreCreateInvoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<MenuItemName>HMPaymentCentreCreateInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS60169</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMSalesInvoiceCreate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<MenuItemName>HMSalesInvoiceCreate</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonJournalInvoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CustInvoiceJournal_Action</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>View bill</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMSalesInvoiceViewProforma</Name>
										<ElementPosition>1651910490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<MenuItemName>HMSalesInvoiceViewProforma</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PostMovementJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>Post service</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMCMSClaimGenerateChargeEntry</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<MenuItemName>HMCMSClaimGenerateChargeEntry</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>Generate claim</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>HMCaseCopyDialog</Name>
										<ElementPosition>2064888117</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientCase</DataSource>
										<MenuItemName>HMCaseCopyDialog</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>PrintReport</Name>
										<ElementPosition>2106185881</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>Print reports</HelpText>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMItemizedBillReport</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<MenuItemName>HMItemizedBillReport</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMItemizedBillForPatientReport</Name>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<MenuItemName>HMItemizedBillForPatientReport</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMItemizedBillForInsuranceReport</Name>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<MenuItemName>HMItemizedBillForInsuranceReport</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMPatientStickerReport</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientCase</DataSource>
												<MenuItemName>HMPatientStickerReport</MenuItemName>
												<MenuItemType>Output</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMPatientFactSheet</Name>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientCase</DataSource>
												<MenuItemName>HMPatientFactSheet</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMPatientAssignmentBenefits</Name>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientCase</DataSource>
												<MenuItemName>HMPatientAssignmentBenefits</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>HMEMGInvoiceReport</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientCase</DataSource>
												<MenuItemName>HMEMGInvoice</MenuItemName>
												<MenuItemType>Output</MenuItemType>
											</AxFormControl>
										</Controls>
										<Text>Print</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMPatientTransactions</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatient</DataSource>
										<MenuItemName>HMPatientTransactions</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>InsuranceVerification</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>Verification status</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>HMPatientChargeEntryTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Billing</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HMPatientChargeEntryAdvancePayment</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientCase</DataSource>
										<MenuItemName>HMPatientChargeEntryAdvancePayment</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CreateInvoices</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<Text>Generate invoice</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS333675</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>GenerateInvoice</Name>
								<Type>ButtonGroup</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CreateInvoice</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<MenuItemName>HMGenerateInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<Text>Generate Invoice</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Button</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>General</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TitleText</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<NeededPermission>Manual</NeededPermission>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DateCtrl</Name>
						<AlignControl>No</AlignControl>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1193046470</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>25</Height>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<ColorScheme>WindowsPalette</ColorScheme>
						<FontSize>11</FontSize>
						<ForegroundColor>DynTitleGreen</ForegroundColor>
						<ShowLabel>No</ShowLabel>
						<Style>TitleField</Style>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateFilter</Name>
						<ElementPosition>1670265058</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>CaseFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>572662304</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<EnumType>HMCaseFilter</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FromDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS312575</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@MAZ1037</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ToDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS312576</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@MAZ7063</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>HMPatientCaseStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1503238551</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<EnumType>HMCaseStatus</EnumType>
								<Label>Case status:</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OrgUnit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>250</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>Location</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>DateSearch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MAZ7064</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS60181</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<BackStyle>Auto</BackStyle>
						<Caption>Date filter</Caption>
						<Style>CustomFilter</Style>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<BackStyle>Auto</BackStyle>
				<Style>DetailTitleContainer</Style>
				<ViewEditMode>View</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>PageTitleGroup</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<Style>DetailTitleContainer</Style>
				<ViewEditMode>View</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<Style>DetailTitleContainer</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Body</Name>
				<ElementPosition>1789569705</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GridContainer</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>300</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToContent</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>HMPatientCase_AddmisionDate</Name>
										<ElementPosition>318145724</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AddmisionDate</DataField>
										<DataSource>HMPatientCase</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMPatientCase_CaseNo</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CaseNo</DataField>
										<DataSource>HMPatientCase</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HMPatientCase_CaseStatus</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CaseStatus</DataField>
										<DataSource>HMPatientCase</DataSource>
										<Label>Case status</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PatientName</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ1881</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>patientName</DataMethod>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Label>@MAZ9</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMPatientCase_HMParentCase</Name>
										<ElementPosition>835132529</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>HMParentCase</DataField>
										<DataSource>HMPatientCase</DataSource>
										<Label>Parent case no.</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HMPatientChargeEntryTable_CaseType</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CaseType</DataField>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CopyOfStringEdit</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>getPhysician</DataMethod>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Label>Attending physician</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>HMPatientChargeEntryTable_HMClinicStaff</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Label>@MAZ2053</Label>
										<ReferenceField>HMClinicStaff</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>HMPatientChargeEntryTable_createdDateTime</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>createdDateTime</DataField>
										<DataSource>HMPatientChargeEntryTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTable_AccountNum</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>CustTable</DataSource>
										<Label>MRN:</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HMPatientChargeEntryTable_Status</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Status</DataField>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>HMPatientChargeEntryTable</DataSource>
								<GridLinesStyle>Vertical</GridLinesStyle>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<Style>BorderedGroup</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VSplitter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<Style>SplitterVerticalContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DetailsContainer</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DetailsHeaderView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DemographicView</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MRN</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>Patient's file number</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>patientChartNum</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>File number</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Name</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ1881</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>patientName</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>@SYS34979</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Gender</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ40</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>getPatientGender</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>@SYS9284</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Age</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ3438</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>patientAgeNew</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>@SYS10445</Label>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
										<Style>DetailTitleContainer</Style>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OthersView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>CopyOfHMPatientChargeEntryTable_HMClinicStaff</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS129267</HelpText>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<ForegroundColor>Hyperlink</ForegroundColor>
												<Label>@MAZ2053</Label>
												<ReferenceField>HMClinicStaff</ReferenceField>
											</AxFormControl>
										</Controls>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InsuranceDetails</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InsuranceName</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@MAZ13045</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InsuranceContractAndEmployerDetails</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InsuranceContract</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>920350134</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@MAZ13053</Label>
													</AxFormControl>
												</Controls>
												<Columns>2</Columns>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InsuranceNetwork</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS30485</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InsuranceClass</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@MAZ13052</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>InsuranceExpirationDate</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@MAZ13050</Label>
											</AxFormControl>
										</Controls>
										<Caption>@MAZ8810</Caption>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DetailsHeaderEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DemographicEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CopyOfMRN</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ81</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>patientChartNum</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<DisplayLength>25</DisplayLength>
												<Label>@MAZ2609</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Patient</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ1881</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<DisplayLength>25</DisplayLength>
												<Label>@MAZ9</Label>
												<LookupButton>Always</LookupButton>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CopyOfGender</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ40</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>100</Width>
												<WidthMode>Manual</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>getPatientGender</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>@SYS9284</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CopyOfAge</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ3438</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>100</Width>
												<WidthMode>Manual</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>patientAgeNew</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<DisplayLength>10</DisplayLength>
												<Label>@SYS10445</Label>
											</AxFormControl>
										</Controls>
										<AlignChildren>No</AlignChildren>
										<Style>DetailTitleContainer</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OthersEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>StringEdit</Name>
												<ElementPosition>477218588</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>getPhysician</DataMethod>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>Attending physician</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>CopyOfHMPatientChargeEntryTable_HMClinicStaff1</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS129267</HelpText>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Label>@MAZ2053</Label>
												<ReferenceField>HMClinicStaff</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMFinancialClass</Name>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientCase</DataSource>
												<ReferenceField>HMFinancialClass</ReferenceField>
												<ReplacementFieldGroup>Code</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CopyOfHMPatientChargeEntryTable_CaseType</Name>
												<ElementPosition>1193046470</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CaseType</DataField>
												<DataSource>HMPatientChargeEntryTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>payerName</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>payerName</DataMethod>
												<DataSource>HMPatientCase</DataSource>
												<Label>Guarantor name</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>HMPatientCase_AppointmentNumber</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>AppointmentNumber</DataField>
												<DataSource>HMPatientCase</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>typeOfAdmission</Name>
												<ElementPosition>1670265058</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>typeOfAdmission</DataMethod>
												<DataSource>HMPatientCase</DataSource>
												<Label>Type of admission:</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>HMPatientCase_HMCaseType1</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>HMCaseType</DataField>
												<DataSource>HMPatientCase</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>getPatientStatus</Name>
												<ElementPosition>1908874352</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>getPatientStatus</DataMethod>
												<DataSource>HMPatientCase</DataSource>
												<Label>Patient status</Label>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InsuranceGroup</Name>
										<AllowEdit>No</AllowEdit>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMPatientInsurance_HMInsuranceContractId</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientInsurance</DataSource>
												<Label>@SYS4081436</Label>
												<ReferenceField>HMInsuranceContract</ReferenceField>
												<ReplacementFieldGroup>ContractIdGroup</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMPatientInsurance_HMInsuranceContractName</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientInsurance</DataSource>
												<Label>@SYS300250</Label>
												<ReferenceField>HMInsuranceContract</ReferenceField>
												<ReplacementFieldGroup>ContractNameGroup</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansId</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientInsurance</DataSource>
												<Label>@MAZ16289</Label>
												<ReferenceField>HMInsuranceContractClassOrPlans</ReferenceField>
												<ReplacementFieldGroup>ClassOrPlanId</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansName</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientInsurance</DataSource>
												<Label>@SYS314196</Label>
												<ReferenceField>HMInsuranceContractClassOrPlans</ReferenceField>
												<ReplacementFieldGroup>ClassOrPlanName</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InsuranceContractandEmployer</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HMPatientInsurance_HMInsuranceContractClassOrPlansNetworkId</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>HMPatientInsurance</DataSource>
												<Label>Network Id</Label>
												<ReferenceField>HMInsuranceContractClassOrPlans</ReferenceField>
												<ReplacementFieldGroup>ClassNetworkId</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>EmployerAccountNumber</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<Label>Employer</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>EmployerName</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<Label>Employer name</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>EmployerValidFrom</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Date</Type>
												<FormControlExtension
													i:nil="true" />
												<Label>Valid from</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>EmployerValidTo</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Date</Type>
												<FormControlExtension
													i:nil="true" />
												<Label>Valid to</Label>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Columns>4</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HSplitter</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<Style>SplitterHorizontalContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>ChargingEntry</Name>
								<AlignControl>No</AlignControl>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Tab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>PaymentTab</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>PaymentActionPane</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneTabControl">
														<Name>PaymentActionPaneTab</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPaneTab</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>ButtonGroup</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ButtonGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>NewPayment</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>858993458</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>New</Command>
																		<NormalImage>New</NormalImage>
																		<Primary>Yes</Primary>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>DeletePayment</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1288490187</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>DeleteRecord</Command>
																		<NormalImage>Delete</NormalImage>
																		<Primary>Yes</Primary>
																		<SaveRecord>No</SaveRecord>
																		<Text>@SYS14425</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>PrintCashReport</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1503238551</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Text>Print receipt</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>HMPatientPaymentPostUS</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1717986916</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>MenuFunctionButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMCasePaymtReceivedDetails</DataSource>
																		<MenuItemName>HMPatientPaymentPostUS</MenuItemName>
																		<MenuItemType>Action</MenuItemType>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>BankPaymentCancel</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1932735281</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>MenuFunctionButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<MenuItemName>BankPaymentCancel</MenuItemName>
																		<MenuItemType>Action</MenuItemType>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>HMSettleForm</Name>
																		<Type>MenuFunctionButton</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>HMPatientCase</DataSource>
																		<MenuItemName>HMSettleForm</MenuItemName>
																		<Text>Settlement</Text>
																	</AxFormControl>
																</Controls>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<DataSource>HMCasePaymtReceivedDetails</DataSource>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>PaymentGrid</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMCasePaymtReceivedDetails_CustPaymModeTable</Name>
														<ElementPosition>613566756</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustPaymModeTable</DataField>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>HMCasePaymtReceivedDetails_AmountPaid</Name>
														<ElementPosition>920350134</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>AmountPaid</DataField>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>HMCasePaymtReceivedDetails_PatientPaymentType</Name>
														<ElementPosition>1227133512</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PatientPaymentType</DataField>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMCasePaymtReceivedDetails_PaymReference</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1533916890</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymReference</DataField>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMCasePaymtReceivedDetails_PaymentNotes</Name>
														<ElementPosition>1840700268</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymentNotes</DataField>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMCasePaymtReceivedDetails_PaymentLineStatus</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<CacheDataMethod>Yes</CacheDataMethod>
														<DataMethod>getPaymentLineStatus</DataMethod>
														<DataSource>HMCasePaymtReceivedDetails</DataSource>
														<Label>@SYS334208</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>HMCaseTrans_HMPayer</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>HMPayer</DataField>
														<DataSource>HMCaseTrans</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>HMCasePaymtReceivedDetails</DataSource>
												<ShowRowLabels>No</ShowRowLabels>
												<VisibleRows>4</VisibleRows>
												<VisibleRowsMode>Fixed</VisibleRowsMode>
											</AxFormControl>
										</Controls>
										<Caption>Patient payments</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>TabPage</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ChargingUnit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacingMode>Fixed</VerticalSpacingMode>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>ActionPane1</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPane</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneTabControl">
																<Name>ActionPaneTab1</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ActionPaneTab</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>charging</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ButtonGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>CommandButton</Name>
																				<ElementPosition>429496728</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>New</Command>
																				<NormalImage>New</NormalImage>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>EditRecord</Name>
																				<ElementPosition>644245092</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Command>EditNode</Command>
																				<NeedsRecord>Yes</NeedsRecord>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>DeleteProdedure</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>858993456</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>CommandButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<Command>DeleteRecord</Command>
																				<NormalImage>Delete</NormalImage>
																				<SaveRecord>No</SaveRecord>
																				<Text>@SYS14425</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>DimensionDisplay</Name>
																				<ElementPosition>966367638</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>MenuFunctionButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<MenuItemName>HMInventDimParmFixed</MenuItemName>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>AddProcedures</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1073741820</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>MenuFunctionButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMPatientChargeEntryTable</DataSource>
																				<MenuItemName>HMPatientChargeEntryDetailsDialog</MenuItemName>
																				<NeedsRecord>Yes</NeedsRecord>
																				<Text>@SYS60080</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>EditProcedure</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1288490184</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>MenuFunctionButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<MenuItemName>HMPatientChargeEntryDetailsDialogEdit</MenuItemName>
																				<NeedsRecord>Yes</NeedsRecord>
																				<Text>Coding</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonControl">
																				<Name>Import</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1503238548</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ7377</HelpText>
																				<Type>Button</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																				<ImageLocation>AOTResource</ImageLocation>
																				<NormalImage>HM_Include_32x32_png</NormalImage>
																				<Text>@SYS54759</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>HMChargeEntryReverseLine</Name>
																				<ElementPosition>1717986912</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>MenuFunctionButton</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<AutoRefreshData>Yes</AutoRefreshData>
																				<MenuItemName>HMChargeEntryReverseLine</MenuItemName>
																				<MenuItemType>Action</MenuItemType>
																				<Text>Reserve line</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonControl">
																				<Name>PostMovementJournalLine</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1932735279</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Button</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<MultiSelect>Yes</MultiSelect>
																				<NeedsRecord>Yes</NeedsRecord>
																				<Text>Completed</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonControl">
																				<Name>PostMovementJournalLineCancel</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>2040109462</ElementPosition>
																				<Enabled>No</Enabled>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Button</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<MultiSelect>Yes</MultiSelect>
																				<NeedsRecord>Yes</NeedsRecord>
																				<Text>Cancel</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>HMCreatePurchaseOrder</Name>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMCaseTrans</DataSource>
																				<MenuItemName>HMCreatePurchaseOrder</MenuItemName>
																				<MenuItemType>Action</MenuItemType>
																				<MultiSelect>Yes</MultiSelect>
																				<Text>Create purchase order</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>HMCreateSalesOrder</Name>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMCaseTrans</DataSource>
																				<MenuItemName>HMCreateSalesOrder</MenuItemName>
																				<MenuItemType>Action</MenuItemType>
																				<MultiSelect>Yes</MultiSelect>
																				<Text>Create sales order</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>HMUploadFileDialogChargeEntryLine</Name>
																				<Type>MenuFunctionButton</Type>
																				<Visible>No</Visible>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<MenuItemName>HMUploadFileDialogChargeEntryLine</MenuItemName>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>ViewAttachments</Name>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<MenuItemName>DocuView</MenuItemName>
																				<NeedsRecord>Yes</NeedsRecord>
																			</AxFormControl>
																		</Controls>
																		<ArrangeMethod>Vertical</ArrangeMethod>
																		<DataSource>HMPatientChargeEntryLine</DataSource>
																	</AxFormControl>
																</Controls>
																<AlignChild>No</AlignChild>
																<AlignChildren>No</AlignChildren>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<Columns>2</Columns>
																<DataSource>HMPatientChargeEntryLine</DataSource>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Style>Strip</Style>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabControl">
														<Name>Tab</Name>
														<AlignControl>No</AlignControl>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Tab</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormTabPageControl">
																<Name>UnGrouped</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>TabPage</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>Grid1</Name>
																		<ElementPosition>1073741822</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>HMCaseTrans_ItemId</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>252645134</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ItemId</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>Description</Name>
																				<ElementPosition>378967701</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>getitemname</DataMethod>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>@RUP79</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMCaseTrans_BillingStatus</Name>
																				<ElementPosition>505290268</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>BillingStatus</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMCaseTrans_HMServiceStatus</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>631612835</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>HMServiceStatus</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMCaseTrans_PatientResponsibility</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>757935402</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>PatientResponsibility</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_Deductible</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>884257969</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Deductible</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_DeductibleActual</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>1010580536</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>DeductibleActual</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_InsuranceAmount</Name>
																				<AllowEdit>No</AllowEdit>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1136903103</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>InsuranceAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_CashAmount</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>1263225670</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>CashAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_WriteOff</Name>
																				<ElementPosition>1389548237</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>WriteOff</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_DiscPercent1</Name>
																				<ElementPosition>1515870804</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>DiscPercent1</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_DiscPercent2</Name>
																				<ElementPosition>1642193371</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>DiscPercent2</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_Discount</Name>
																				<ElementPosition>1768515938</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Discount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_DiscountAmount</Name>
																				<ElementPosition>1894838505</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>DiscountAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_TotalAmount</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>2021161072</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>TotalAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																		</Controls>
																		<DataSource>HMPatientChargeEntryLine</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>ChargingUnitGrid</Name>
																		<ElementPosition>1610612734</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>HMPatientChargeEntryLine_HMChargeEntryLineNumber</Name>
																				<ElementPosition>124491804</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>HMChargeEntryLineNumber</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>HMPatientEncounterCharge_InventTable</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>186737708</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ItemId</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Item/Service code</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ItemDescription</Name>
																				<AllowEdit>No</AllowEdit>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>202299183</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ItemName</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Description</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMCaseTrans_HMOrganizationalUnit</Name>
																				<ElementPosition>217860658</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Clinic location</Label>
																				<Mandatory>Yes</Mandatory>
																				<ReferenceField>HMOrganizationalUnit</ReferenceField>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormGroupControl">
																				<Name>InventoryDimensions</Name>
																				<ElementPosition>233422135</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Group</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_configId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>configId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventSizeId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventSizeId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventColorId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventColorId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventStyleId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventStyleId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventSiteId</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>757935402</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventSiteId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventLocationId</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<ElementPosition>884257969</ElementPosition>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventLocationId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_inventBatchId</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>inventBatchId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_wMSLocationId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>wMSLocationId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_inventSerialId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>inventSerialId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventStatusId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventStatusId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_LicensePlateId</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>LicensePlateId</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventOwnerId_RU</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventOwnerId_RU</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventProfileId_RU</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventProfileId_RU</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormStringControl">
																						<Name>InventoryDimensions_InventGtdId_RU</Name>
																						<FilterExpression>%1</FilterExpression>
																						<HeightMode>Auto</HeightMode>
																						<Type>String</Type>
																						<VerticalSpacing>-1</VerticalSpacing>
																						<WidthMode>Auto</WidthMode>
																						<FormControlExtension
																							i:nil="true" />
																						<DataField>InventGtdId_RU</DataField>
																						<DataSource>InventDim</DataSource>
																					</AxFormControl>
																				</Controls>
																				<BackgroundColor>WindowBackground</BackgroundColor>
																				<DataGroup>InventoryDimensions</DataGroup>
																				<DataSource>InventDim</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>OrgName</Name>
																				<ElementPosition>466844270</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataMethod>getOrgName</DataMethod>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Location name</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMPatientCase_HMCaseType</Name>
																				<Type>ComboBox</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>HMCaseType</DataField>
																				<DataSource>HMPatientCase</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMCaseTrans_HMClaimTableSetup_PatientStatus</Name>
																				<ElementPosition>513528697</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMCaseTrans</DataSource>
																				<ReferenceField>HMClaimTableSetup_PatientStatus</ReferenceField>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMPatientChargeEntryLine_HMInsuranceCarrierBatchDetails</Name>
																				<ElementPosition>560213124</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>Batch reference #</Label>
																				<ReferenceField>HMInsuranceCarrierBatchDetails</ReferenceField>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMPatientChargeEntryLine_RevenueCode</Name>
																				<ElementPosition>653581978</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<ReferenceField>RevenueCode</ReferenceField>
																				<ReplacementFieldGroup>code</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMPatientChargeEntryLine_CPTCodes</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>746950832</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ReferenceGroup</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>HCPCS code</Label>
																				<ReferenceField>CPTCodes</ReferenceField>
																				<ReplacementFieldGroup>code</ReplacementFieldGroup>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>ProcedureDesc</Name>
																				<ElementPosition>840319686</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>getProcedureDescription</DataMethod>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormDateControl">
																				<Name>HMPatientEncounterCharge_FromDate</Name>
																				<ElementPosition>933688540</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Date</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>FromDate</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>Date</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormDateControl">
																				<Name>HMPatientEncounterCharge_TODate</Name>
																				<ElementPosition>1027057394</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Date</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>TODate</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>Diagnosis</Name>
																				<ElementPosition>1120426248</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ6431</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>getAllProcedureDiagnosis</DataMethod>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>@MAZ1104</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>CopyOfDiagnosis</Name>
																				<ElementPosition>1213795102</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ6431</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>getAllProcedureDiagnosisICD</DataMethod>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>@MAZ10563</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>Modifier</Name>
																				<ElementPosition>1307163956</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<HelpText>@MAZ6432</HelpText>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>getAllProcedureModifier</DataMethod>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Label>@MAZ6765</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>HMCaseTrans_HMPayer1</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>String</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>HMPayer</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMPatientChargeEntryLine_PatientResponsibility</Name>
																				<ElementPosition>1400532810</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>PatientResponsibility</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_Qty</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1493901664</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Qty</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMPatientEncounterCharge_Fee</Name>
																				<ElementPosition>1587270518</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Fee</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMPatientEncounterCharge_Charge</Name>
																				<ElementPosition>1680639372</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Charge</DataField>
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_SalesPrice</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1774008226</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>SalesPrice</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Price</Label>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_DiscountAmount1</Name>
																				<Type>Real</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>DiscountAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>TotalAmount</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<ElementPosition>1844034866</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>TotalAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Label>Total</Label>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_ExpectedAmount</Name>
																				<Type>Real</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>ExpectedAmount</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormReferenceGroupControl">
																				<Name>HMPatientChargeEntryLine_PerformingResource</Name>
																				<Type>ReferenceGroup</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls />
																				<DataSource>HMPatientChargeEntryLine</DataSource>
																				<ReferenceField>PerformingResource</ReferenceField>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMCaseTrans_HMServiceStatus1</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>1960745934</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>HMServiceStatus</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormComboBoxControl">
																				<Name>HMCaseTrans_BillingStatus1</Name>
																				<AllowEdit>No</AllowEdit>
																				<ElementPosition>2054114788</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>ComboBox</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>BillingStatus</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																				<Items />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>HMCaseTrans_Deductible1</Name>
																				<Type>Real</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>Deductible</DataField>
																				<DataSource>HMCaseTrans</DataSource>
																			</AxFormControl>
																		</Controls>
																		<DataSource>HMPatientChargeEntryLine</DataSource>
																	</AxFormControl>
																</Controls>
																<Caption>@SYS342058</Caption>
																<Scrollbars>Auto</Scrollbars>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormTabPageControl">
																<Name>Grouped</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>TabPage</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Visible>No</Visible>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormGridControl">
																		<Name>CopyOfChargingUnitGrid1</Name>
																		<AllowEdit>No</AllowEdit>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Grid</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>GroupedHMPatientEncounterCharge_InventTable</Name>
																				<ElementPosition>613566756</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<DataField>InventTable</DataField>
																				<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>GroupedProcedureDesc</Name>
																				<ElementPosition>920350134</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<Visible>No</Visible>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>getProcedureDescription</DataMethod>
																				<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormIntegerControl">
																				<Name>GroupedHMPatientEncounterCharge_Units</Name>
																				<ElementPosition>1227133512</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Integer</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>showGroupedUnits</DataMethod>
																				<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																				<Label>@SYS7867</Label>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>GroupedHMPatientEncounterCharge_Fee</Name>
																				<ElementPosition>1533916890</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>showGroupedFee</DataMethod>
																				<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																				<Label>@SYS9154</Label>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormRealControl">
																				<Name>GroupedHMPatientEncounterCharge_Charge</Name>
																				<ElementPosition>1840700268</ElementPosition>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>Real</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																				<CacheDataMethod>Yes</CacheDataMethod>
																				<DataMethod>showGroupedCharge</DataMethod>
																				<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																				<Label>@SYS57840</Label>
																				<NoOfDecimals>-1</NoOfDecimals>
																			</AxFormControl>
																		</Controls>
																		<DataSource>HMPatientChargeEntryLineGrouped</DataSource>
																		<MultiSelect>No</MultiSelect>
																		<ShowRowLabels>No</ShowRowLabels>
																	</AxFormControl>
																</Controls>
																<Caption>@SYS319419</Caption>
																<Scrollbars>Auto</Scrollbars>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Style>Auto</Style>
													</AxFormControl>
												</Controls>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Group_</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RealEdit</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<LeftMode>RightEdge</LeftMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Visible>No</Visible>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<CacheDataMethod>Yes</CacheDataMethod>
														<DataMethod>getTotalCharges</DataMethod>
														<DataSource>HMPatientChargeEntryTable</DataSource>
														<Label>@SYS11466</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Charges</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<LeftMode>RightEdge</LeftMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Alignment>Right</Alignment>
														<DisplayLength>17</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
														<Label>@SYS11466</Label>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<Caption>@SYS8371</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>TabSalesOrder</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>PaymentActionPaneCopy1Copy1</Name>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>SalesOrderGrid</Name>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>SalesTable_SalesId</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>SalesId</DataField>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>SalesTable_CustAccount</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustAccount</DataField>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>SalesTable_InvoiceAccount</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InvoiceAccount</DataField>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>SalesTable_CustName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<CacheDataMethod>Yes</CacheDataMethod>
														<DataMethod>customerName</DataMethod>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>SalesTable_SalesStatus</Name>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>SalesStatus</DataField>
														<DataSource>SalesTable</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>SalesTable_CustGroup</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustGroup</DataField>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>SalesTable_DeliveryDate</Name>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>DeliveryDate</DataField>
														<DataSource>SalesTable</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>SalesTable</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@MAZ11982</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>TabPurchaseOrder</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>PaymentActionPaneCopy1</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneTabControl">
														<Name>PaymentActionPaneTabCopy1</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPaneTab</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>ButtonGroupCopy1</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ButtonGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>HMPostPOInvoice</Name>
																		<Type>MenuFunctionButton</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>PurchTable</DataSource>
																		<MenuItemName>HMPostPOInvoice</MenuItemName>
																		<MenuItemType>Action</MenuItemType>
																		<MultiSelect>Yes</MultiSelect>
																		<Text>Create invoice</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>HMCreateInvoice</Name>
																		<Type>MenuFunctionButton</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataSource>PurchTable</DataSource>
																		<MenuItemName>PurchFormLetter_Invoice</MenuItemName>
																		<Text>Invoice</Text>
																	</AxFormControl>
																</Controls>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<DataSource>HMCasePaymtReceivedDetails</DataSource>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>PurchaseOrderGrid</Name>
												<AllowEdit>No</AllowEdit>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PurchTable_PurchId</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>PurchId</DataField>
														<DataSource>PurchTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PurchTable_OrderAccount</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>OrderAccount</DataField>
														<DataSource>PurchTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PurchTable_InvoiceAccount</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InvoiceAccount</DataField>
														<DataSource>PurchTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PurchTable_VendorName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<CacheDataMethod>Yes</CacheDataMethod>
														<DataMethod>vendorName</DataMethod>
														<DataSource>PurchTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>PurchTable_PurchaseType</Name>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>PurchaseType</DataField>
														<DataSource>PurchTable</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>PurchTable_DeliveryDate</Name>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>DeliveryDate</DataField>
														<DataSource>PurchTable</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>PurchTable</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@EPR4460304</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>TabFinancialDimensionTable</Name>
										<Pattern>DimensionEntryControl</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>DimensionEntryControlTable</Name>
												<AllowEdit>No</AllowEdit>
												<Type>Container</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>HMCaseTrans</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<Caption>@SYS342338</Caption>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<RightMargin>5</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>5</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
					</AxFormControl>
				</Controls>
				<Columns>3</Columns>
				<Columnspace>0</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>