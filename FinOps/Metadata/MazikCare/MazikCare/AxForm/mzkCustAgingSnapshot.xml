<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>mzkCustAgingSnapshot</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class mzkCustAgingSnapshot extends FormRun
{
    #define.ColumnCheckBox(1)
    #define.ColumnCompanyId(2)
    #define.ColumnCompanyName(3)

    mzkCustAgingSnapshot agingSnapshot;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        element.getSelectedCompanies();

        if (agingSnapshot.checkCloseDialog(element))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAgeCustomersWithNoOpenTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets include zero balance customer.
    /// </summary>
    /// <param name = "_set">Whether or not to set <c>IncludeZeroBalanceCustomers</c></param>
    /// <param name = "_includeZeroBalanceCustomers"><c>IncludeZeroBalanceCustomers</c> value.</param>
    /// <returns>Whether to include zero balance customers for the aging snapshot.</returns>
    internal edit boolean editAgeCustomersWithNoOpenTransactions(boolean _set, boolean _includeZeroBalanceCustomers)
    {
        if (_set)
        {
            agingSnapshot.parmAgeCustomersWithNoOpenTransactions(_includeZeroBalanceCustomers);
        }

        return agingSnapshot.parmAgeCustomersWithNoOpenTransactions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editUpdateCollectionsStatus</Name>
				<Source><![CDATA[
    public edit boolean editUpdateCollectionsStatus(boolean _set, boolean _updateCollectionsStatus)
    {
        if (_set)
        {
            agingSnapshot.parmUpdateCollectionsStatus(_updateCollectionsStatus);
        }

        return agingSnapshot.parmUpdateCollectionsStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAgedBy</Name>
				<Source><![CDATA[
    public edit DateTransactionDuedate editAgedBy(boolean _set, DateTransactionDuedate _agedBy)
    {
        if (_set)
        {
            agingSnapshot.parmAgedBy(_agedBy);
        }

        return agingSnapshot.parmAgedBy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAgingDate</Name>
				<Source><![CDATA[
    public edit CustAgingDate editAgingDate(boolean _set, CustAgingDate _agingDate)
    {
        if (_set)
        {
            agingSnapshot.parmAgingDate(_agingDate);
        }

        return agingSnapshot.parmAgingDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAgingDateType</Name>
				<Source><![CDATA[
    public edit CustAgingDateType editAgingDateType(boolean _set, CustAgingDateType _agingDateType)
    {
        if (_set)
        {
            agingSnapshot.parmAgingDateType(_agingDateType);

            if (_agingDateType == CustAgingDateType::CurrentDate)
            {
                agingSnapshot.parmAgingDate(dateNull());
            }
            else
            {
                agingSnapshot.parmAgingDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            }

            element.updateDesignDynamic();
        }

        return agingSnapshot.parmAgingDateType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAgingPeriodDef</Name>
				<Source><![CDATA[
    public edit CustVendAgingBucketLookUp editAgingPeriodDef(boolean _set, CustVendAgingBucketLookUp _agingPeriodDef)
    {
        if (_set)
        {
            agingSnapshot.parmAgingPeriodDef(_agingPeriodDef);
        }

        return agingSnapshot.parmAgingPeriodDef();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editCustomerPool</Name>
				<Source><![CDATA[
    public edit CustAgingPoolId editCustomerPool(boolean _set, CustAgingPoolId _collectionPoolId)
    {
        if (_set)
        {
            agingSnapshot.parmCustomerPool(_collectionPoolId);
        }

        return agingSnapshot.parmCustomerPool();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedCompanies</Name>
				<Source><![CDATA[
    private void getSelectedCompanies()
    {
        int companyListIndex;
        int companyCount = CompanyList.rows();

        agingSnapshot.clearSourceCompanies();

        // Get the selected companies
        for (companyListIndex = 1; companyListIndex <= companyCount; companyListIndex++)
        {
            if (CompanyList.cell(#ColumnCheckBox, companyListIndex).data() == true)
            {
                agingSnapshot.addSourceCompany(CompanyList.cell(#ColumnCompanyId, companyListIndex).data());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        agingSnapshot = element.args().caller().runbasebatch();

        super();

        element.updateDesignDynamic();

        element.initializeCompanyList();

        //if (!FeatureStateProvider::isFeatureEnabled(CustAgingPerformanceEnhancementFeature::instance())) --obselete CustAgingPerformanceEnhancementFeature
        //{
        //    info("@AccountsReceivable:CustAgingPerfEnhancementSuggestion");
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCompanyList</Name>
				<Source><![CDATA[
    private void initializeCompanyList()
    {
        container companyListContainer = CustVendOpenTransManager::findSharedServiceCompanies(curext());
        int companyCount, companyIndex;
        dataAreaId companyID;
        DataArea dataArea;

        companyCount = conLen(companyListContainer);

        if (companyCount == 0)
        {
            // No shared service boundary, so use the current company
            companyCount = 1;
            companyListContainer = [curext()];
        }

        CompanyList.rows(CompanyCount);
        CompanyList.setColLabel(#ColumnCompanyId, "@SYS14025");
        CompanyList.setColLabel(#ColumnCompanyName, "@SYS115442");

        for (companyIndex = 1; companyIndex <= companyCount; companyIndex++)
        {
            companyID = queryValue(conPeek(companyListContainer, companyIndex));
            CompanyList.cell(#ColumnCompanyId, companyIndex).data(companyID);

            // Set the second column to the company name
            select firstonly Name from dataArea
                where dataArea.Id == companyID;

            CompanyList.cell(#ColumnCompanyName, companyIndex).data(dataArea.name);

            // Mark the current company by default
            CompanyList.cell(#ColumnCheckBox, companyIndex).data(companyID == curext());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignDynamic</Name>
				<Source><![CDATA[
    protected void updateDesignDynamic()
    {
        if (agingSnapshot.parmAgingDateType() == CustAgingDateType::CurrentDate)
        {
            agingDate.enabled(false);
        }
        else
        {
            agingDate.enabled(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>AgingPeriodDef</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;

            isValid = super();

            if (isValid)
            {
                isValid = CustVendBalanceList::validateAgingPeriodDefinition(this.text(), false, true);
            }

            if (!isValid)
            {
                this.undo();
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustomerPool</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
            CustCollectionsPoolId enteredValue = this.text();

            isValid = super();

            if (isValid && enteredValue)
            {
                isValid = CustCollectionsPool::validatePoolForAgingSnapshot(enteredValue, false, true);
            }

            if (!isValid)
            {
                this.undo();
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompanyList</Name>
				<Type>Table</Type>
				<Methods>
					<Method>
						<Name>editControl</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns corresponding control of table cell.
        /// </summary>
        /// <param name = "_Column">The column index for table cell.</param>
        /// <param name = "_Row">The row index for table cell.</param>
        /// <returns>If column index equals to 1, returns the CheckBox control; 2, returns CompanyIdentifider String control, 3, returns CompanyName String ctonrol.</returns>
        public FormControl editControl(int _Column, int _Row)
        {
            if (_Column == #ColumnCheckBox)
            {
                return Selected;
            }
            else if (_Column == #ColumnCompanyId)
            {
                return CompanyIdentifier;
            }
            else
            {
                return CompanyName;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS342751</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AgingSnapshot</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AgingPeriodDef</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustAgingSnapshot_AgingPeriodDef</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAgingPeriodDef</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustomerPool</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustAgingSnapshot_CustomerPool</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCustomerPool</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AgedBy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustAgingSnapshot_AgedBy</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAgedBy</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AgingDateType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustAgingSnapshot_AgingDateType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAgingDateType</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>AgingDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustAgingSnapshot_AgingDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAgingDate</DataMethod>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>DisputeAutomation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editUpdateCollectionsStatus</DataMethod>
										<Label>@AccountsReceivable:CustDisputeHistoryAutomationAging</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>AgeCustomersWithNoOpenTransactions</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAgeCustomersWithNoOpenTransactions</DataMethod>
										<Label>@AccountsReceivable:CustAgingSnapshot_IncludeZeroBalanceCustomers</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS132948</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Batch</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS7764</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Companies</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTableControl">
								<Name>CompanyList</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>Table</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Selected</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS5965</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CompanyIdentifier</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS10499</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CompanyName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS115442</Label>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
							</AxFormControl>
						</Controls>
						<Caption>@SYS113181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>