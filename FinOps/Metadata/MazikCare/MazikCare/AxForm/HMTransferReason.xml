<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMTransferReason</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMTransferReason extends FormRun
{
    RecId                               appointmentReason;
    FormRun                                     formRun;
    Object                                      formRunObject;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        super();
    
        formRun = element.args().caller();
    
            if(formHasMethod(formRun,identifierStr(storeReason)))
            {
                formRunObject = formRun;
                formRunObject.storeReason(0);
    
            }
    
            element.close();
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
        element.wait(1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeReason</Name>
				<Source><![CDATA[
    public void storeReason(RecId _args)
    {
        appointmentReason = _args;
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>TransferReason</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
              super();
              new MenuFunction(MenuItemDisplayStr(HMAppointmentsReason),MenuItemType::Display).run();
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMAppointmentResonsLookup));
            args.caller(element);
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            ReasonTable     reasonTable;
            HMlookupClass   HMlookupClassObj = new HMlookupClass();
        
            ret = super();
        
            if (ret)
            {
                if (this.text() != "")
                {
                    reasonTable = HMlookupClassObj.checkValidAppointmentReason(this.text());
        
                    if (reasonTable.RecId)
                    {
                      element.storeReason(reasonTable.RecId);
                    }
                    else
                    {
                        warning(strFmt("@SYS316757","@SYS86426"));
                        this.text("");
                    }
                }
                else
                {
                    element.storeReason(0);
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSubmit</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            formRun = element.args().caller();
        
            if (appointmentReason != 0)
            {
                if(formHasMethod(formRun,identifierStr(storeReason)))
                {
                    formRunObject = formRun;
                    formRunObject.storeReason(appointmentReason);
                    if (element.args().parm() == "@SYS30279")
                    {
                        formRunObject.insertSingleTransfer();
                    }
                    else
                    {
                        formRunObject.insertBulkTransfer();
                    }
                }
        
                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@MAZ8576</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<MaximizeBox xmlns="">No</MaximizeBox>
		<MinimizeBox xmlns="">No</MinimizeBox>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStringControl">
				<Name>TransferReason</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>String</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Label>@MAZ8576</Label>
				<LookupButton>Always</LookupButton>
				<Mandatory>Yes</Mandatory>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonControl">
				<Name>ButtonSubmit</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<LeftMode>AutoRight</LeftMode>
				<Skip>Yes</Skip>
				<TopMode>BottomEdge</TopMode>
				<Type>Button</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS5469</Text>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>