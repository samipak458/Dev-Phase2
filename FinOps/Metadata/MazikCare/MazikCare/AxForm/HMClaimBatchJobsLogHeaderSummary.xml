<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMClaimBatchJobsLogHeaderSummary</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMClaimBatchJobsLogHeaderSummary extends FormRun
{
    HMClaimBatchJobsLogsSummaryTmp tmpTable;
    HMClaimBatchJobLogsHeader      hmClaimBatchJobsLogsHeader;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        hmClaimBatchJobsLogsHeader = element.args().record();

        if(hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::Pool || hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::Priority
            || hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::PoolZeroBalance || hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::PriorityZeroBalance)
        {
            LineGroup.visible(true);
        }
        else
        {
            LineGroup.visible(false);
        }

        NumberOfQualifiedClaims.value(hmClaimBatchJobsLogsHeader.NumberOfQualifiedClaims);
        NumberOfProcessedClaims.value(this.getClaimsCount(HMClaimProcessingStatus::Successful));
        NumberOfFailedClaims.value(this.getClaimsCount(HMClaimProcessingStatus::Failed));

        if(hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::PoolZeroBalance)
        {
            HMClaimBatchJobsLogsSummaryTmp_NewValue.label(strFmt('%1',"@MAZ:HMClaimPool"));
        }
        else if(hmClaimBatchJobsLogsHeader.JobType == HMClaimJobType::PriorityZeroBalance)
        {
            HMClaimBatchJobsLogsSummaryTmp_NewValue.label(strFmt('%1',"@MAZ:ClaimPriority"));
        }
        else
        {
            HMClaimBatchJobsLogsSummaryTmp_NewValue.label(strFmt('%1',hmClaimBatchJobsLogsHeader.JobType));
        }

        element.buildTempTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClaimsCount</Name>
				<Source><![CDATA[
    public int getClaimsCount(HMClaimProcessingStatus claimProcessingStatus)
    {
        HMClaimBatchJobsLogs hmClaimBatchJobsLogs;

        select count(RecId) from hmClaimBatchJobsLogs
            where hmClaimBatchJobsLogs.JobType == hmClaimBatchJobsLogsHeader.JobType
                && hmClaimBatchJobsLogs.HMClaimBatchJobLogsHeader == hmClaimBatchJobsLogsHeader.RecId
                && hmClaimBatchJobsLogs.ClaimProcessingStatus == claimProcessingStatus;

        return hmClaimBatchJobsLogs.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the data in the temp table to display on the graph
    /// </summary>
    public void buildTempTable()
    {
        HMClaimBatchJobsLogs hmClaimBatchJobLogs;

        insert_recordset tmpTable(ClaimsCount, NewValue)
            select Count(RecId), NewValue from hmClaimBatchJobLogs
                group by NewValue
                    where hmClaimBatchJobLogs.HMClaimBatchJobLogsHeader == hmClaimBatchJobsLogsHeader.RecId;

        HMClaimBatchJobsLogsSummaryTmp.linkPhysicalTableInstance(tmpTable);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMClaimBatchJobsLogsSummaryTmp</Name>
			<Table>HMClaimBatchJobsLogsSummaryTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClaimsCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NewValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MAZ:HMClaimBatchJobsLogHeaderSummaryFormCaption</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NumberOfQualifiedClaims</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@MAZ:NumberOfQualifiedClaims</Label>
						<LabelPosition>Above</LabelPosition>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NumberOfProcessedClaims</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@MAZ:NumberOfProcessedClaims</Label>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NumberOfFailedClaims</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DisplayLength>10</DisplayLength>
						<Label>@MAZ:NumberOfFailedClaims</Label>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>LineGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ClaimBatchLineSummary</Name>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>HMClaimBatchJobsLogsSummaryTmp_NewValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>NewValue</DataField>
								<DataSource>HMClaimBatchJobsLogsSummaryTmp</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>HMClaimBatchJobsLogsSummaryTmp_ClaimsCount</Name>
								<Type>Integer</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>ClaimsCount</DataField>
								<DataSource>HMClaimBatchJobsLogsSummaryTmp</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>