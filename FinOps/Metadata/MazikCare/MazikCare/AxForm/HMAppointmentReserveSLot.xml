<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMAppointmentReserveSLot</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMAppointmentReserveSLot extends FormRun
{
    RecId   clinicRecId,clientRecId, reasonRecId, resourceRecId, scheduleTypeRecId, patientRecId, serviceLocationRecId;
    boolean showInfoOnNoSLots;
}
]]></Source>
			</Method>
			<Method>
				<Name>getArrivalTime</Name>
				<Source><![CDATA[
    public TimeOfDay getArrivalTime()
    {
        return HMAppointmentReserveSLot.ArrivalTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGrid</Name>
				<Source><![CDATA[
    public void refreshGrid()
    {
        FormRun                 formRun = element.args().caller();
        Object                      formRunObject;
    
        HMAppointmentReserveSLot_ds.executeQuery();
    
        if(formHasMethod(formRun,identifierstr(refreshGrid)))
        {
            formRunObject = formRun;
            formRunObject.refreshGrid();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Object          formRun;
        container       selectedSlotsCon;
        date            slotDate;
        str             tempStringSlot;
        HMResourceSchedulingPlanningObject planningObject;
    
        HMAppointmentReserveSLot    hmAppointmentReserveSLotDefault;
        if(element.args().record())
        {
            planningObject = element.args().record();
        }
        FromDate.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        ToDate.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
    
        resourceRecId = planningObject.HMResourceMaster;
    
        switch(element.args().parmEnum())
        {
            case HMAppointmentSlotReserveBlock::Reserve:
                element.design().caption("@MAZ12365");
                MainInstruction.text("@MAZ12365");
                OKButton.text("@MAZ10880");
                Reason.visible(false);
                GridGroup.visible(true);
                HMResourceSchedulingOpenTimeSlotsTmp_ArrivalTime.visible(true);
                HMResourceSchedulingOpenTimeSlotsTmp_Time.visible(false);
                //ServiceLocation.visible(true);
                RequestorGroup.visible(true);
                Notes.visible(true);
                break;
            case HMAppointmentSlotReserveBlock::UnReserve:
                element.design().caption("@MAZ12367");
                MainInstruction.text("@MAZ12367");
                OKButton.text("@MAZ11975");
                Reason.visible(false);
                AppointmentReserveSlots.visible(true);
                Clinic.visible(false);
                ScheduleType.visible(false);
                ReasonTable.visible(false);
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,RecId)).value(SysQuery::value(0));
                HMAppointmentReserveSLot_ds.executeQuery();
                formRun = element.args().caller();
                if(formHasMethod(formRun,identifierStr(getStartEndDateTimeForBlockSlot)))
                {
                    selectedSlotsCon = element.args().caller().getStartEndDateTimeForBlockSlot();
                    tempStringSlot = conPeek(selectedSlotsCon,1);
                    slotDate = str2Date(tempStringSlot,213);
    
                    hmAppointmentReserveSLotDefault = HMAppointmentReserveSLot::findByRange(slotDate, slotDate, str2time(conPeek(selectedSlotsCon,2)), str2time(conPeek(selectedSlotsCon,3)), resourceRecId, HMAppointmentSlotReserveBlock::Reserve);
    
                    if(hmAppointmentReserveSLotDefault.RecId)
                    {
                        FromDate.dateValue(slotDate);
                        ToDate.dateValue(FromDate.dateValue());
                        tempStringSlot = conPeek(selectedSlotsCon,2);
                        FromTime.value(str2time(tempStringSlot));
                        tempStringSlot = conPeek(selectedSlotsCon,3);
                        ToTime.value(str2time(tempStringSlot));
                        element.storeClient(hmAppointmentReserveSLotDefault.Client);
                        ClientField.text(CustTable::findRecId(clientRecId).name());
                        Search.clicked();
                    }
                }
                break;
            case HMAppointmentSlotReserveBlock::ReserveExport:
                element.design().caption("@MAZ12368");
                MainInstruction.text("@MAZ12368");
                Export.visible(true);
                OKButton.text("@SYS301990");
                Reason.visible(false);
                AppointmentReserveSlots.visible(true);
                NewAppointment.visible(true);
                Clinic.visible(false);
                ScheduleType.visible(false);
                ReasonTable.visible(false);
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,RecId)).value(SysQuery::value(0));
                HMAppointmentReserveSLot_ds.executeQuery();
    
                formRun = element.args().caller();
                if(formHasMethod(formRun,identifierStr(getPatientId)))
                {
                    patientRecId = element.args().caller().getPatientId();
                }
                break;
            case HMAppointmentSlotReserveBlock::Block:
                element.design().caption("@MAZ11568");
                MainInstruction.text("@MAZ11568");
                Clinic.visible(false);
                ScheduleType.visible(false);
                OKButton.text("@SYS28075");
                ClientGroup.visible(false);
                GridGroup.visible(true);
                formRun = element.args().caller();
                if(formHasMethod(formRun,identifierStr(getStartEndDateTimeForBlockSlot)))
                {
                    selectedSlotsCon = element.args().caller().getStartEndDateTimeForBlockSlot();
                    tempStringSlot = conPeek(selectedSlotsCon,1);
                    slotDate = str2Date(tempStringSlot,213);
                    FromDate.dateValue(slotDate);
                    ToDate.dateValue(FromDate.dateValue());
                    if(str2time(conPeek(selectedSlotsCon,2)) != 0 || str2time(conPeek(selectedSlotsCon,3)) != 0)
                    {
                        tempStringSlot = conPeek(selectedSlotsCon,2);
                        FromTime.value(str2time(tempStringSlot));
                        tempStringSlot = conPeek(selectedSlotsCon,3);
                        ToTime.value(str2time(tempStringSlot));
                        Search.clicked();
                    }
                }
                break;
            case HMAppointmentSlotReserveBlock::Close:
                element.design().caption("@MAZ11586");
                MainInstruction.text("@MAZ11586");
                Clinic.visible(false);
                ScheduleType.visible(false);
                OKButton.text("@SYS18742");
                ClientGroup.visible(false);
                GridGroup.visible(true);
                formRun = element.args().caller();
                if(formHasMethod(formRun,identifierStr(getStartEndDateTimeForBlockSlot)))
                {
                    selectedSlotsCon = element.args().caller().getStartEndDateTimeForBlockSlot();
                    tempStringSlot = conPeek(selectedSlotsCon,1);
                    slotDate = str2Date(tempStringSlot,213);
                    FromDate.dateValue(slotDate);
                    ToDate.dateValue(FromDate.dateValue());
                    if(str2time(conPeek(selectedSlotsCon,2)) != 0 || str2time(conPeek(selectedSlotsCon,3)) != 0)
                    {
                        tempStringSlot = conPeek(selectedSlotsCon,2);
                        FromTime.value(str2time(tempStringSlot));
                        tempStringSlot = conPeek(selectedSlotsCon,3);
                        ToTime.value(str2time(tempStringSlot));
                        Search.clicked();
                    }
                }
                break;
            case HMAppointmentSlotReserveBlock::Unblock:
                element.design().caption("@MAZ11569");
                MainInstruction.text("@MAZ11569");
                AppointmentReserveSlots.visible(true);
                Reason.visible(false);
                OKButton.text("@MAZ11559");
                ScheduleType.visible(false);
                Clinic.visible(false);
                ClientGroup.visible(false);
                Search.visible(false);
                formRun = element.args().caller();
                FromTime.visible(false);
                ToTime.visible(false);
                if(formHasMethod(formRun,identifierStr(getStartEndDateTimeForBlockSlot)))
                {
                    selectedSlotsCon = element.args().caller().getStartEndDateTimeForBlockSlot();
                    tempStringSlot = conPeek(selectedSlotsCon,1);
                    slotDate = str2Date(tempStringSlot,213);
                    FromDate.dateValue(slotDate);
                    ToDate.dateValue(FromDate.dateValue());
                    FromDate.allowEdit(false);
                    ToDate.allowEdit(false);
                }
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,HMResourceMaster)).value(SysQuery::value(planningObject.HMResourceMaster));
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Date)).value(SysQuery::range(FromDate.dateValue(),ToDate.dateValue()));
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,SlotReserveBlock)).value(SysQuery::value(HMAppointmentSlotReserveBlock::Block));
                HMAppointmentReserveSLot_ds.executeQuery();
                break;
            case HMAppointmentSlotReserveBlock::UnBlockClose:
                element.design().caption("@MAZ11963");
                MainInstruction.text("@MAZ11963");
                AppointmentReserveSlots.visible(true);
                Reason.visible(false);
                OKButton.text("@MAZ11559");
                ScheduleType.visible(false);
                Clinic.visible(false);
                ClientGroup.visible(false);
                Search.visible(false);
                formRun = element.args().caller();
                FromTime.visible(false);
                ToTime.visible(false);
                if(formHasMethod(formRun,identifierStr(getStartEndDateTimeForBlockSlot)))
                {
                    selectedSlotsCon = element.args().caller().getStartEndDateTimeForBlockSlot();
                    tempStringSlot = conPeek(selectedSlotsCon,1);
                    slotDate = str2Date(tempStringSlot,213);
                    FromDate.dateValue(slotDate);
                    ToDate.dateValue(FromDate.dateValue());
                    FromDate.allowEdit(false);
                    ToDate.allowEdit(false);
                }
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,HMResourceMaster)).value(SysQuery::value(planningObject.HMResourceMaster));
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Date)).value(SysQuery::range(FromDate.dateValue(),ToDate.dateValue()));
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,SlotReserveBlock)).value(SysQuery::value(HMAppointmentSlotReserveBlock::Close));
                HMAppointmentReserveSLot_ds.executeQuery();
                break;
            case HMAppointmentSlotReserveBlock::Appointment:
                element.design().caption("@SYS136790");
                MainInstruction.text("@SYS136790");
                OKButton.text("@SYS112171");
                Reason.visible(false);
                AppointmentReserveSlots.visible(true);
                Clinic.visible(false);
                ScheduleType.visible(false);
                ReasonTable.visible(false);
                HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,RecId)).value(SysQuery::value(0));
                HMAppointmentReserveSLot_ds.executeQuery();
                break;
        }
    
        super();
    
        showInfoOnNoSLots = true;
        serviceLocationRecId=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeClient</Name>
				<Source><![CDATA[
    public void storeClient(RecId   _clientRecId)
    {
        clientRecId = _clientRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeOrganizationalUnitRecId</Name>
				<Source><![CDATA[
    public void storeOrganizationalUnitRecId(RecId _clinicRecId)
    {
        clinicRecId = _clinicRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeReason</Name>
				<Source><![CDATA[
    public void storeReason(ReasonTable _reasonTable)
    {
        reasonRecId = _reasonTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeScheduleType</Name>
				<Source><![CDATA[
    public void storeScheduleType(RecId   _scheduleTypeRecId)
    {
        scheduleTypeRecId = _scheduleTypeRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeServiceLocationRecId</Name>
				<Source><![CDATA[
    public void storeServiceLocationRecId(RecId _serviceLocationRecId)
    {
        serviceLocationRecId = _serviceLocationRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRequestorEmail</Name>
				<Source><![CDATA[
    public void updateRequestorEmail(Email _email)
    {
        RequestorEmail.text(_email);
    
        RequestorNewEmail.enabled(Requestor.text() && RequestorEmail.text() == '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRequestorField</Name>
				<Source><![CDATA[
    public void updateRequestorField()
    {
        Requestor.modified();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HMResourceSchedulingOpenTimeSlotsTmp</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.queryBuildDataSource().clearDynalinks();
        
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, isClosed)).value(SysQuery::value(NoYes::No));
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, isBlocked)).value(SysQuery::value(NoYes::No));
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, Client)).value(SysQuery::valueEmptyString());
        
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, date));
            this.queryBuildDataSource().addSortField(fieldNum(HMResourceSchedulingOpenTimeSlotsTmp, Time));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMAppointmentReserveSLot</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.queryBuildDataSource().clearDynalinks();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingTypeCode</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().addRange(fieldNum(HMResourceSchedulingTypeCode,IsBreak)).value(SysQuery::value(NoYes::No));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                if(this.dateValue() != dateNull())
                {
                    ToDate.dateValue(this.dateValue());
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Clinic</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMOrganizationalUnitFileTrackerLookup));
            args.caller(element);
            args.parmEnum(HMFileLocationType::Clinic);
        
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HMOrganizationalUnit    hmOrganizationalUnitLocal;
        
            ret = super();
        
            if(ret)
            {
                if(this.valueStr() != "")
                {
                    hmOrganizationalUnitLocal = HMlookupClass::checkValidOrganizationalUnit(this.valueStr(), HMFileLocationType::Clinic);
        
                    if(hmOrganizationalUnitLocal.RecId)
                    {
                        element.storeOrganizationalUnitRecId(hmOrganizationalUnitLocal.RecId);
                    }
                    else
                    {
                        warning(strFmt("@SYS316757",this.label()));
                        this.text(HMOrganizationalUnit::find(clinicRecId).Description);
                    }
                }
                else
                {
                    element.storeOrganizationalUnitRecId(0);
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduleType</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMScheduleTypeLookupSearching));
            args.caller(element);
        
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HMResourceSchedulingTypeCode    hmResourceSchedulingTypeCodeLocal;
        
            ret = super();
        
            if(ret)
            {
                if(this.valueStr() != "")
                {
                    hmResourceSchedulingTypeCodeLocal = HMlookupClass::checkValidScheduleTypeSearchName(this.valueStr(), HMCaseType::OutPatient);
        
                    if(hmResourceSchedulingTypeCodeLocal.RecId)
                    {
                        element.storeScheduleType(hmResourceSchedulingTypeCodeLocal.RecId);
                    }
                    else
                    {
                        warning(strFmt("@SYS316757","@MAZ7340"));
                        this.text(HMResourceSchedulingTypeCode::find(scheduleTypeRecId).Description);
                    }
                }
                else
                {
                    element.storeScheduleType(0);
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClientField</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            CustTable custTable;
        
            ret = super();
            if(ret)
            {
                select AccountNum,RecId,Party from custTable
                where custTable.AccountNum == this.text();
                element.storeClient(custTable.RecId);
                ClientName.text(custTable.name());
                RequestorNewContact.enabled(this.text() != '');
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Reason</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args();
            FormRun itemLookUp;
        
            args.name(formstr(HMReasonsLookup));
            args.caller(element);
            if(element.args().parmEnum() == HMAppointmentSlotReserveBlock::Block)
            {
                args.parm('AppointmentSlotBlocking');
            }
            else if(element.args().parmEnum() == HMAppointmentSlotReserveBlock::Close)
            {
                args.parm('AppointmentCloseSchedule');
            }
        
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            ReasonTable reasonTableLocal;
            ReasonCodeAccountTypeAll    reasonCodeAccountType;
        
            ret = super();
        
            if(ret)
            {
                if(this.valueStr() != "")
                {
                    if(element.args().parmEnum() == HMAppointmentSlotReserveBlock::Block)
                    {
                        reasonCodeAccountType = ReasonCodeAccountTypeAll::AppointmentSlotBlocking;
                    }
                    else if(element.args().parmEnum() == HMAppointmentSlotReserveBlock::Close)
                    {
                        reasonCodeAccountType = ReasonCodeAccountTypeAll::AppointmentCloseSchedule;
                    }
        
                    reasonTableLocal = HMlookupClass::checkValidReason(this.valueStr(), reasonCodeAccountType);
        
                    if(reasonTableLocal.RecId)
                    {
                        element.storeReason(reasonTableLocal);
                    }
                    else
                    {
                        warning(strFmt("@SYS316757",this.label()));
                        //todo: ax7 reason
                       /*
                        this.text(ReasonTable::findByRecid(reasonRecId).Description);
                       */
                    }
                }
                else
                {
                    element.storeReason(reasonTableLocal);
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Search</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            boolean ret = true;
            boolean isAllScheduleType;
            HMResourceSchedulingOpenTimeSlotsSearch hmResourceSchedulingOpenTimeSlotsSearch=new HMResourceSchedulingOpenTimeSlotsSearch();
        
            if(FromDate.dateValue() == dateNull())
            {
                warning(strFmt("@SYS84753","@SYS5209"));
                ret =false;
            }
        
            if(ToDate.dateValue() == dateNull())
            {
                warning(strFmt("@SYS84753","@SYS35904"));
                ret =false;
            }
        
            if(ret)
            {
                if(FromDate.dateValue() < DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
                {
                    warning("@MAZ11928");
                    ret =false;
                }
        
                if(FromDate.dateValue() > ToDate.dateValue())
                {
                    warning("@MAZ7176");
                    ret =false;
                }
        
                if(FromTime.value() > ToTime.value())
                {
                    warning("@MAZ11573");
                    ret =false;
                }
            }
        
            switch(element.args().parmEnum())
            {
                case HMAppointmentSlotReserveBlock::Reserve:
                    if(!clinicRecId)
                    {
                        warning(strFmt("@SYS84753","@MAZ1154"));
                        ret =false;
                    }
        
                    if(ret)
                    {
                        isAllScheduleType = scheduleTypeRecId ? false : true;
        
                        hmResourceSchedulingOpenTimeSlotsTmp.setTmpData(hmResourceSchedulingOpenTimeSlotsSearch.searchOpenTimeSlotMultiPO(FromDate.dateValue(),ToDate.dateValue(),isAllScheduleType,
                            scheduleTypeRecid,false,[false,false,false,false,false,false,false], 0, 0,
                            FromTime.value(), ToTime.value(), clinicRecId, 0, 0, HMIncludeExclude::Exclude, true,''));
        
                        hmResourceSchedulingOpenTimeSlotsTmp_Ds.executeQuery();
        
                        if(!hmResourceSchedulingOpenTimeSlotsTmp && showInfoOnNoSLots)
                        {
                            info("@MAZ11927");
                        }
                    }
                    break;
                case HMAppointmentSlotReserveBlock::Block:
                    if(ret)
                    {
                        isAllScheduleType = true;
        
                        hmResourceSchedulingOpenTimeSlotsTmp.setTmpData(hmResourceSchedulingOpenTimeSlotsSearch.searchOpenTimeSlotMultiPO(FromDate.dateValue(),ToDate.dateValue(),isAllScheduleType,
                            0,false,[false,false,false,false,false,false,false], 0, resourceRecId,
                            FromTime.value(), ToTime.value(), 0, 0, 0, HMIncludeExclude::Exclude, true,''));
        
                        hmResourceSchedulingOpenTimeSlotsTmp_Ds.executeQuery();
        
                        if(!hmResourceSchedulingOpenTimeSlotsTmp  && showInfoOnNoSLots)
                        {
                            info("@MAZ11927");
                        }
                    }
                    break;
                case HMAppointmentSlotReserveBlock::Close:
                    if(ret)
                    {
                        isAllScheduleType = true;
        
                        hmResourceSchedulingOpenTimeSlotsTmp.setTmpData(hmResourceSchedulingOpenTimeSlotsSearch.searchOpenTimeSlotMultiPO(FromDate.dateValue(),ToDate.dateValue(),isAllScheduleType,
                            0,false,[false,false,false,false,false,false,false], 0, resourceRecId,
                            FromTime.value(), ToTime.value(), 0, 0, 0, HMIncludeExclude::Exclude, true,''));
        
                        hmResourceSchedulingOpenTimeSlotsTmp_Ds.executeQuery();
        
                        if(!hmResourceSchedulingOpenTimeSlotsTmp && showInfoOnNoSLots)
                        {
                            info("@MAZ11927");
                        }
                    }
                    break;
                case HMAppointmentSlotReserveBlock::UnReserve:
                case HMAppointmentSlotReserveBlock::ReserveExport:
                    if(!clientRecId)
                    {
                        warning(strFmt("@SYS84753","@SYS14787"));
                        ret =false;
                    }
        
                    if(ret)
                    {
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().clearRanges();
        
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Client)).value(SysQuery::value(clientRecId));
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Date)).value(SysQuery::range(FromDate.dateValue(),ToDate.dateValue()));
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,RecId)).value(strFmt('((StartTime >= %1) && (EndTime <= %2))',FromTime.value(), ToTime.value()));
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,SlotReserveBlock)).value(SysQuery::value(HMAppointmentSlotReserveBlock::Reserve));
        
                        HMAppointmentReserveSLot_ds.executeQuery();
        
                        if(!HMAppointmentReserveSLot && showInfoOnNoSLots)
                        {
                            info("@MAZ11979");
                        }
                    }
                    break;
                case HMAppointmentSlotReserveBlock::Appointment:
                     if(ret)
                    {
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().clearRanges();
                        if(clientRecId)
                        {
                            HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Client)).value(SysQuery::value(clientRecId));
                        }
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,Date)).value(SysQuery::range(FromDate.dateValue(),ToDate.dateValue()));
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,RecId)).value(strFmt('((StartTime >= %1) && (EndTime <= %2))',FromTime.value(), ToTime.value()));
                        HMAppointmentReserveSLot_ds.queryBuildDataSource().addRange(fieldNum(HMAppointmentReserveSLot,SlotReserveBlock)).value(SysQuery::value(HMAppointmentSlotReserveBlock::Reserve));
        
                        HMAppointmentReserveSLot_ds.executeQuery();
        
                        if(!HMAppointmentReserveSLot && showInfoOnNoSLots)
                        {
                            info("@MAZ11979");
                        }
                    }
            }
        
        
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Requestor</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args            args;
            MenuFunction    menuFunction;
            ;
            args = new Args();
            menuFunction = new MenuFunction(menuitemDisplayStr(ContactPerson), MenuItemType::Display);
            args = new Args(menuFunction.object());
            args.caller(element);
            args.record(ContactPerson::find(this.text()));
            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ContactPerson::lookupCustContactPersonHM(this,
                                                   ClientField.text(),
                                                   null,
                                                   this.text(),
                                                   LogisticsLocationRoleType::Requestor);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            ContactPerson contactPerson;
        
            contactPerson = contactPerson::find(this.text());
            RequestorName.text(contactPerson.personName());
            element.updateRequestorEmail(contactPerson.email());
            RequestorPhone.text(contactPerson.phone());
        
            if(this.text() != "" && !RequestorEmail.text())
            {
                warning(strFmt("@MAZ12168"));
            }
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestorNewContact</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            CustTable custClient = CustTable::find(ClientField.text());
            DirPartyTable party = DirPartytable::findRec(custClient.Party);
        
            args.record(party);
            args.caller(element);
        
            new MenuFunction(menuitemDisplayStr(ContactPersonNew),MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestorNewEmail</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            ContactPerson contactPerson = contactPerson::find(Requestor.text());
        
            args.record(contactPerson);
            args.caller(element);
            //todo : ax7 Email
        /*
            new MenuFunction(menuitemDisplayStr(HMRequestorEmailPrimaryNew),MenuItemType::Display).run(args);
        */
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NewAppointment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            str parm;
            #define.ParmSeparator(',')
            String20      parmSlotSelectedDate, parmSlotSelectedTime, parmSlotScheduleTypeRecId;
        
            parmSlotSelectedDate = date2str(HMAppointmentReserveSLot.Date,213,DateDay::Digits2,DateSeparator::Slash,
                                            DateMonth::Digits2, DateSeparator::Slash,DateYear::Digits2, DateFlags::None);
            parmSlotSelectedTime = time2StrHMLeadingZero(HMAppointmentReserveSLot.StartTime);
            parmSlotScheduleTypeRecId = int642str(HMAppointmentReserveSLot.HMResourceSchedulingTypeCode);
        
            parm = parmSlotSelectedDate + #ParmSeparator + parmSlotSelectedTime + #ParmSeparator + parmSlotScheduleTypeRecId;
        
            if(patientRecId)
            {
                parm += ',' + int642str(patientRecId);
            }
        
            this.parameters(parm);
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            boolean ret = true;
            FormRun                 formRun = element.args().caller();
            Object                      formRunObject;
        
            switch(element.args().parmEnum())
            {
                case HMAppointmentSlotReserveBlock::Reserve:
                    if(!clientRecId)
                    {
                        warning(strFmt("@SYS84753","@SYS14787"));
                        ret =false;
                    }
        
                    if(!HMResourceSchedulingOpenTimeSlotsTmp_DS.getFirst() && !HMResourceSchedulingOpenTimeSlotsTmp.RecId)
                    {
                        warning(strFmt("@MAZ11926"));
                        ret =false;
                    }
                    break;
                case HMAppointmentSlotReserveBlock::Block:
                    if(!reasonRecId)
                    {
                        warning(strFmt("@SYS84753","@SYS86426"));
                        ret =false;
                    }
                    if(!HMResourceSchedulingOpenTimeSlotsTmp_DS.getFirst() && !HMResourceSchedulingOpenTimeSlotsTmp.RecId)
                    {
                        warning(strFmt("@MAZ11926"));
                        ret =false;
                    }
                    break;
                case HMAppointmentSlotReserveBlock::Close:
                    if(!reasonRecId)
                    {
                        warning(strFmt("@SYS84753","@SYS86426"));
                        ret =false;
                    }
                    if(!HMResourceSchedulingOpenTimeSlotsTmp_DS.getFirst() && !HMResourceSchedulingOpenTimeSlotsTmp.RecId)
                    {
                        warning(strFmt("@MAZ11926"));
                        ret =false;
                    }
                case HMAppointmentSlotReserveBlock::Unblock:
                case HMAppointmentSlotReserveBlock::UnBlockClose:
                    if(!HMAppointmentReserveSLot_DS.getFirst() && !HMAppointmentReserveSLot.RecId)
                    {
                        warning(strFmt("@MAZ11926"));
                        ret =false;
                    }
                    break;
                case HMAppointmentSlotReserveBlock::UnReserve:
                case HMAppointmentSlotReserveBlock::Appointment:
                    if(!HMAppointmentReserveSLot_DS.getFirst() && !HMAppointmentReserveSLot.RecId)
                    {
                        warning(strFmt("@MAZ11926"));
                        ret =false;
                    }
                    break;
            }
        
            if(ret)
            {
                switch(element.args().parmEnum())
                {
                    case HMAppointmentSlotReserveBlock::Reserve:
                        if(HMResourceSchedulingHelper::reserveBlockCloseAppointmentSlot(hmResourceSchedulingOpenTimeSlotsTmp_Ds, HMAppointmentSlotReserveBlock::Reserve, clientRecId, 0, serviceLocationRecId, Requestor.text(), Notes.text()))
                        {
                            info("@MAZ11562");
                        }
                        else
                        {
                            error("@MAZ11563");
                        }
                        break;
                    case HMAppointmentSlotReserveBlock::Block:
                        if(HMResourceSchedulingHelper::reserveBlockCloseAppointmentSlot(hmResourceSchedulingOpenTimeSlotsTmp_Ds, HMAppointmentSlotReserveBlock::Block, 0, reasonRecId))
                        {
                            info("@MAZ11564");
                        }
                        else
                        {
                            error("@MAZ11565");
                        }
                        break;
                    case HMAppointmentSlotReserveBlock::Close:
                        if(HMResourceSchedulingHelper::reserveBlockCloseAppointmentSlot(hmResourceSchedulingOpenTimeSlotsTmp_Ds, HMAppointmentSlotReserveBlock::Close, 0, reasonRecId))
                        {
                            info("@MAZ12017");
                        }
                        else
                        {
                            error("@MAZ12018");
                        }
                        break;
                    case HMAppointmentSlotReserveBlock::Unblock:
                    case HMAppointmentSlotReserveBlock::UnBlockClose:
                    case HMAppointmentSlotReserveBlock::UnReserve:
        
        
                        HMResourceSchedulingHelper::unblockAppointmentSlotByDS(HMAppointmentReserveSLot_DS);
                        break;
                    case HMAppointmentSlotReserveBlock::Appointment:
                        if(HMResourceSchedulingHelper::createAppointmentSlotByDS(HMAppointmentReserveSLot_DS))
                        {
                            HMResourceSchedulingHelper::unblockAppointmentSlotByDS(HMAppointmentReserveSLot_DS, true);
                        }
                        break;
                }
        
                super();
        
                if(element.args().parmEnum() != HMAppointmentSlotReserveBlock::ReserveExport && formHasMethod(formRun,identifierstr(refreshGrid)))
                {
                    formRunObject = formRun;
                    formRunObject.refreshGrid();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingOpenTimeSlotsTmp</Name>
			<Table>HMResourceSchedulingOpenTimeSlotsTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AppointmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Duration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitSubClinic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMParentSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingDayPlanItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingWeekPlan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsNoWoman</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverBooked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SlotEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Time</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObject</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingOpenTimeSlotsTmp</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMAppointmentReserveSLot</Name>
			<Table>HMAppointmentReserveSLot</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit_ServiceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SlotReserveBlock</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingPlanningObjectSlots</Name>
			<Table>HMResourceSchedulingPlanningObject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailabilityStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HotSpotValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverbookAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningObjectStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleOnPublicHoliday</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMAppointmentReserveSLot</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingTypeCode</Name>
			<Table>HMResourceSchedulingTypeCode</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AppointmentSubType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ColourCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Duration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DurationUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMMedisysScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBreak</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentAppointmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMResourceSchedulingOpenTimeSlotsTmp</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">Appointment reserve slot</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>477218588</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>MainInstruction</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>485740348</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Style>MainInstruction</Style>
						<Text></Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateGroup</Name>
						<ElementPosition>728610522</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FromDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS5209</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ToDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>To date</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TimeGroup</Name>
						<ElementPosition>971480696</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>FromTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS38489</Label>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>ToTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS38490</Label>
								<TimeSeconds>No</TimeSeconds>
								<Value>86399</Value>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group1</Name>
						<ElementPosition>1214350870</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Clinic</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@MAZ1154</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ScheduleType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1457221044</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Label>@MAZ7340</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group_</Name>
						<ElementPosition>1629786694</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ClientGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ClientField</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>HMClientAccount</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ClientName</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@MAZ10881</Label>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<Columnspace>2</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Reason</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS86426</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Search</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS60181</Text>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>RequestorGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1802352344</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>NameGroup</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Requestor</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>100</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@MAZ11601</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RequestorName</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>150</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RequestorNewContact</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ12024</HelpText>
										<Skip>Yes</Skip>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>New</NormalImage>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<Columnspace>5</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RequestorPhone</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@MAZ11602</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group4</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RequestorEmail</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>255</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@MAZ11603</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RequestorNewEmail</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MAZ12171</HelpText>
										<Skip>Yes</Skip>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>New</NormalImage>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Columnspace>5</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Notes</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1974917994</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DisplayHeight>3</DisplayHeight>
						<DisplayHeightMode>Fixed</DisplayHeightMode>
						<ExtendedDataType>HMAppointmentNotes</ExtendedDataType>
						<Label>@MAZ12315</Label>
						<LookupButton>Never</LookupButton>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>954437176</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToContent</HeightMode>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>HMResourceSchedulingOpenTimeSlotsTmp_DayName</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>DayName</DataField>
								<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>HMResourceSchedulingOpenTimeSlotsTmp_Date</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Date</DataField>
								<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>HMResourceSchedulingOpenTimeSlotsTmp_Time</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1124872386</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Time</DataField>
								<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>HMResourceSchedulingOpenTimeSlotsTmp_ArrivalTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1329394638</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ArrivalTime</DataField>
								<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>HMResourceMasterRefGroupSlot</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>HMResourceSchedulingPlanningObject</DataSource>
								<ReferenceField>HMResourceMaster</ReferenceField>
								<ReplacementFieldGroup>Description</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>HMResourceSchedulingOpenTimeSlotsTmp_HMResourceSchedulingTypeCode</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
								<ReferenceField>HMResourceSchedulingTypeCode</ReferenceField>
								<ReplacementFieldGroup>Description</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<DataSource>HMResourceSchedulingOpenTimeSlotsTmp</DataSource>
						<VisibleRows>3</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AppointmentReserveSlots</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1193046470</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ReserveSlotGrid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>HMAppointmentReserveSLot_HMResourceMaster</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>HMAppointmentReserveSLot</DataSource>
								<Label>@SYS89158</Label>
								<ReferenceField>HMResourceMaster</ReferenceField>
								<ReplacementFieldGroup>Description</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>HMAppointmentReserveSLot_ArrivalTime</Name>
								<ElementPosition>766958445</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ArrivalTime</DataField>
								<DataSource>HMAppointmentReserveSLot</DataSource>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>HMAppointmentReserveSLot_Date</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Date</DataField>
								<DataSource>HMAppointmentReserveSLot</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>HMAppointmentReserveSLot_StartTime</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>StartTime</DataField>
								<DataSource>HMAppointmentReserveSLot</DataSource>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>HMAppointmentReserveSLot_EndTime</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>EndTime</DataField>
								<DataSource>HMAppointmentReserveSLot</DataSource>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ReasonTable</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>HMAppointmentReserveSLot</DataSource>
								<ReferenceField>ReasonTable</ReferenceField>
								<ReplacementFieldGroup>Description</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<DataSource>HMAppointmentReserveSLot</DataSource>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogCommit</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Footnote</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<TopMargin>10</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>NewAppointment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827880</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataSource>HMResourceSchedulingPlanningObjectSlots</DataSource>
						<MenuItemName>HMResourceSchedulingAppoinNewReserveSlot</MenuItemName>
						<NeedsRecord>Yes</NeedsRecord>
						<ShowShortCut>No</ShowShortCut>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Export</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>ExportToMicrosoftExcel</Command>
						<Text>@SYS26056</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@MAZ10880</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>