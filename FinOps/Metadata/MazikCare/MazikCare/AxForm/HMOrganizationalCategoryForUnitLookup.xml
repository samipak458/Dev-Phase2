<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMOrganizationalCategoryForUnitLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMOrganizationalCategoryForUnitLookup extends FormRun
{
    ImageRes                imageRes;
    TreeItemIdx             initialSelection;
    str                     lastSelected;
    boolean                 isFormClose;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    public void closeSelect(str _selectString = "")
    {
        if(isFormClose)
        {
            super(_selectString);
    
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        this.parentCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentCall</Name>
				<Source><![CDATA[
    public void parentCall()
    {
        TreeItemIdx                     parentItemIdx;
    
        Tree.deleteAll();
        parentItemIdx = SysFormTreeControl::addTreeItem(Tree,"@MAZ70", FormTreeAdd::Root,0,imageRes,1);
    
        this.treeFill(parentItemIdx,0);
    
        Tree.expand(parentItemIdx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeFill</Name>
				<Source><![CDATA[
    public void treeFill(TreeItemIdx _RecId,int64 _RecIdx)
    {
        TreeItemIdx                     parentItemIdx;
        HMOrganizationaCategory         hmOrganizationaCategory;
        HMOrganizationaCategory         hmOrganizationaCategoryChildCheck;
        FormTreeItem                    formTreeItem;
    
        while select * from hmOrganizationaCategory
            where hmOrganizationaCategory.HMOrganizationaCategory == _RecIdx
    
        {
            select count(recId) from hmOrganizationaCategoryChildCheck
                where hmOrganizationaCategoryChildCheck.HMOrganizationaCategory == hmOrganizationaCategory.RecId;
    
    
            if(hmOrganizationaCategoryChildCheck.RecId>0)
            {
                formTreeItem = new FormTreeItem();
                //BP deviation documented
                formTreeItem.text(hmOrganizationaCategory.Description);
                formTreeItem.data(hmOrganizationaCategory.RecId);
    
                parentItemIdx = Tree.addItem(_RecId,FormTreeAdd::Sort,formTreeItem);
    
                if(lastSelected == hmOrganizationaCategory.Description)
                {
                    initialSelection = parentItemIdx;
                }
    
                this.treeFill(parentItemIdx,hmOrganizationaCategory.RecId);
            }
            else
            {
                formTreeItem = new FormTreeItem();
                //BP deviation documented
                formTreeItem.text(hmOrganizationaCategory.Description);
                formTreeItem.data(hmOrganizationaCategory.RecId);
    
                parentItemIdx = Tree.addItem(_RecId,FormTreeAdd::Sort,formTreeItem);
    
                if(lastSelected == hmOrganizationaCategory.Description)
                {
                    initialSelection = parentItemIdx;
                }
    
            }
    
        }
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OK</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormTreeItem selectedTreeItem = tree.getItem(tree.getSelection());
            super();
            element.args().caller().setCategoryID(selectedTreeItem.data());
            isFormClose = true;
            element.closeSelect(HMOrganizationaCategory::find(selectedTreeItem.data()).Description);
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<HeightMode xmlns="">Column</HeightMode>
		<Style xmlns="">Lookup</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Width xmlns="">300</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>Tree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>OK</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS89186</HelpText>
						<LeftMode>AutoRight</LeftMode>
						<Skip>Yes</Skip>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@MAZ6110</Text>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>