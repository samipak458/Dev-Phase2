<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>HMPaymentCenter_US</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class HMPaymentCenter_US extends FormRun
{
    PaymMode                            paymentMode;
    QueryBuildRange                     qbrBatchNumber,qbrChargeEntryRecid;
    DimensionDynamicAccountController   dimOffsetAccountController;
    Map                                 openCustTransMap,patientAmountMap,headerInvoiceNextActionMap;
    QueryBuildRange                     qbdsRange;
    AmountMST                           tmpAmount;
    CustOpenTransLineManager            custOpenTransLineManager;
    QueryBuildRange                     qbrDateHead;
    Notes                               dateValStr,dtrvalue;
    RecId                               batchRecId;
    HMInsuranceCarrierBatchNumber       batchNumberId;
    HMPaymentCentreFormHandler          HMPaymentCentreFormHandler;
    Map                                 mapDocumentControlNumber;
    HMClaimTable hmClaimTableLocal;

}
]]></Source>
			</Method>
			<Method>
				<Name>applyPayments</Name>
				<Source><![CDATA[
    public void applyPayments(real _approveddAmt,
                                real _coPayAmt,
                                real _coInsAmount,
                                real _coDeductibleAmt,
                                RecId _reasonCodeRecId,
                                real _transferAmount,
                                real _writeOffAmount,
                                real _paymentAmount,
                                real _additionalAmount,
                                str  _documentControlNumber = '')
    {
        int _position;
        _position = CustTransOpen_ds.getPosition();
        Recid custTransOpenRecId = CustTransOpen.RecId;
        HMPaymentCentreFormHandler.applyPayments(HMBillPaymentSettlementTmp,CustTransOpen.RecId,_approveddAmt,_coPayAmt,_coInsAmount,_coDeductibleAmt,_reasonCodeRecId, _transferAmount, _writeOffAmount,_paymentAmount,_additionalAmount);
    
        select sum(AmountPaid) from HMBillPaymentSettlementTmp;
        TotalSettlePaymAmountCur.realValue(HMBillPaymentSettlementTmp.AmountPaid);
        RemainingPaymAmountCur.realValue(PaymAmountCur.realValue() - TotalSettlePaymAmountCur.realValue());
    
        CustTranSoPEN_ds.executeQuery();
        CustTranSoPEN_ds.positionToRecord(CustTrans::find(custTransOpenRecId));
    
    
        if(mapDocumentControlNumber.exists(CustTransOpen.custTrans().HMCase))
        {
            mapDocumentControlNumber.remove(CustTransOpen.custTrans().HMCase);
        }
        if(_documentControlNumber)
        {
            mapDocumentControlNumber.insert(CustTransOpen.custTrans().HMCase,_documentControlNumber);
        }
        custtransopen_ds.setPosition(_position);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateBalance</Name>
				<Source><![CDATA[
    public void calculateBalance()
    {
        AmountMst                   lineSumAmount;
        MapEnumerator               mapEnumerator;
        HMBillPaymentSettlementTmp  tempLocal;
        HMBillPaymentSettlementTmp  HMBillPaymentSettlementTmpLocal;
        RecId                       custTransOpenRecId;
        mapEnumerator = openCustTransMap.getEnumerator();
    
        while(mapEnumerator.moveNext())
        {
            tempLocal.CustTransOpenRecId = mapEnumerator.current();
            tempLocal.insert();
        }
        HMBillPaymentSettlementTmp_ds.executeQuery();
        HMBillPaymentSettlementTmpLocal = HMBillPaymentSettlementTmp_ds.getFirst();
        while(HMBillPaymentSettlementTmpLocal)
        {
            lineSumAmount += HMBillPaymentSettlementTmpLocal.AmountPaid;
            HMBillPaymentSettlementTmpLocal = HMBillPaymentSettlementTmp_ds.getNext();
        }
    
        //select sum(AmountPaid) from HMBillPaymentSettlementTmp;
        //TotalSettlePaymAmountCur.realValue(HMBillPaymentSettlementTmp.AmountPaid);
        //RemainingPaymAmountCur.realValue(PaymAmountCur.realValue() - TotalSettlePaymAmountCur.realValue());
    //
        //custTransOpenRecId = CustTransOpen.RecId;
        //CustTranSoPEN_ds.executeQuery();
        //CustTranSoPEN_ds.findRecord(CustTrans::find(custTransOpenRecId));
    
        mapEnumerator = patientAmountMap.getEnumerator();
        while(mapEnumerator.moveNext())
        {
            lineSumAmount += mapEnumerator.currentValue();
        }
        TotalSettlePaymAmountCur.realValue(lineSumAmount);
        RemainingPaymAmountCur.realValue(PaymAmountCur.realValue() - TotalSettlePaymAmountCur.realValue());
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;
    
        ret = super();
        if(!openCustTransMap.empty())
        {
            if(Box::yesNo("One or more claim(s) has been marked for payment/settlement, Do you want to continue?",DialogButton::No,"Confirmation") == DialogButton::No)
            {
                ret = false;
    
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {

        if(element.args().menuItemName() == menuItemDisplayStr(HMPaymentCenterEOBLines))
        {
            FormDataSource          fds;

            Common _CallerTable = element.args().record();

            if (_CallerTable .isFormDataSource())

            {

                fds = _CallerTable.dataSource();

                if (fds)

                {

                    fds.executeQuery();

                }

            }
        }
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateHeaderDateRanges</Name>
				<Source><![CDATA[
    public boolean generateHeaderDateRanges()
    {
        str dateFromStr;
        str dateToStr;
    
    
        if (FromDate.valueStr() != '' || ToDate.valueStr() != '' )
        {
            if (ToDate.Datevalue() > dateNull() && FromDate.dateValue() > ToDate.Datevalue())
            {
                warning("@MAZ7069");
                FromDate.dateValue(dateNull());
                ToDate.dateValue(dateNull());
                DateSearch.enabled(false);
                return false;
            }
    
            if (FromDate.dateValue() > dateNull())
                dateFromStr = date2StrXpp(FromDate.dateValue());
            if (ToDate.dateValue() > dateNull())
                dateToStr = date2StrXpp(ToDate.dateValue());
    
            if (FromDate.dateValue() > dateNull() && ToDate.dateValue() > dateNull())
                dtrvalue=SysQuery::range(FromDate.dateValue(),ToDate.dateValue());
    
            if (qbrDateHead == null)
            {
                qbrDateHead = element.initHeaderDateRange();
            }
            if (dateFromStr != '' && dateToStr == '')
            {
                dateValStr = strFmt('((DueDate >= %1))', dateFromStr);
            }
            else if (dateToStr != '' && dateFromStr == '')
            {
                dateValStr = strFmt('((DueDate <= %1))', dateToStr);
            }
            else if (dateFromStr != '' && dateToStr != '')
            {
                dateValStr = strFmt('((DueDate >= %1) && (DueDate <= %2))',
                dateFromStr, dateToStr);
            }
    
            return true;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initHeaderDateRange</Name>
				<Source><![CDATA[
    public QueryBuildRange initHeaderDateRange()
    {
        qbrDateHead = new QueryBuildRange();
    
        qbrDateHead = CustTransOpen_ds.queryBuildDataSource().addRange
                (fieldNum(CustTransOpen, DueDate));
    
        CustTransOpen_ds.queryBuildDataSource().addSortField
                (fieldNum(CustTransOpen, DueDate),SortOrder::Descending);
    
        return qbrDateHead;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeClass</Name>
				<Source><![CDATA[
    public HMBillPaymentPosting initializeClass(HMBillPaymentPosting _hmBillPaymentPosting)
    {
        
        HMBillPaymentPosting posting = _hmBillPaymentPosting;
        posting = new HMBillPaymentPosting( openCustTransMap,
                                                patientAmountMap,
                                                HMBillPaymentSettlementTmp,
                                                CustAccount.text(),
                                                paymentMode,
                                                PaymReference.text(),
                                                RemainingPaymAmountCur.realValue(),
                                                CustTable::findRecId(HMPatient.CustTable).AccountNum,
                                                0,
                                                0);
        posting.parmMapDocumentControlNumber(mapDocumentControlNumber);

        if(element.args().menuItemName() == menuItemDisplayStr(HMPaymentCenterEOBLines))
        {
            posting.parmMzkClaimAdjustment(element.args().record());
        }

        return posting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertSettlementTable</Name>
				<Source><![CDATA[
    public void insertSettlementTable()
    {
        CustInvoiceTrans CustInvoiceTransLocal;
        select firstOnly RecId from HMBillPaymentSettlementTmp
        where HMBillPaymentSettlementTmp.CustTransOpenRecId == CustTransOpen.RecId;
        if(HMBillPaymentSettlementTmp.RecId == 0)
        {
            if(CustTransIdRef.TransRefType == CustTransRefType::Invoice)
            {
                while select * from CustTransOpenLine
                    where CustTransOpenLine.CustTransOpen == CustTransOpen.RecId
                {
                    select HMCaseTrans from CustInvoiceTransLocal
                    where CustInvoiceTransLocal.CustInvoiceLineIdRef == CustTransOpenLine.CustInvoiceLineIdRef;
                    HMBillPaymentSettlementTmp.AmountMST = 0.00;
                    HMBillPaymentSettlementTmp.CustTransOpenLine = CustTransOpenLine.RecId;
                    HMBillPaymentSettlementTmp.SalesInvoiceId = CustTransIdRef.TransRefId;
                    HMBillPaymentSettlementTmp.CustTransOpenRecId = CustTransOpen.RecId;
                    HMBillPaymentSettlementTmp.AmountCur = custTransOpenLine.AmountCur;
                    HMBillPaymentSettlementTmp.HMCaseTrans = CustInvoiceTransLocal.HMCaseTrans;

                    HMBillPaymentSettlementTmp.ExpectedAmount = (select firstonly ExpecTedAmount from HMCaseTrans where HMCaseTrans.RecId == CustInvoiceTransLocal.HMCaseTrans).ExpecTedAmount;

                    HMBillPaymentSettlementTmp.insert();
                }
            }
    
        }
        
        if(element.args().menuItemName() == menuItemDisplayStr(HMPaymentCenterEOBLines))
        {
            MzkClaimAdjustment mzkClaimAdjustment = element.args().record();

            if(!mzkClaimAdjustment.CaseNumber)
            {
                AmountMST paymTotal = 0;
                paymTotal  += CustTransOpen.AmountCur * 0.8;
                PaymAmountCur.realValue(paymTotal);
                this.applyPaymentsEOBLines(CustTransOpen.AmountCur * 0.8, 0, 0, 0, 5637146076, 0, CustTransOpen.AmountCur * 0.2, CustTransOpen.AmountCur * 0.8, 0, "", CustTransOpen);
            }
        }
    
        CustTransOpenLine_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadERAForm</Name>
				<Source><![CDATA[
    public void loadERAForm(str _file)
    {
    
        HMX12EDIMessage eraMessgae = new HMX12EDIMessage();
        //HMClaimERATmp hmClaimERATmp = eraMessgae.parseERA(_file); //OneCall demo
        container claimsCon = eraMessgae.parseERA(_file);
        HMClaimERALineTmp hmClaimERALineTmp = eraMessgae.getHMClaimERALineTmp();
        HMClaimNumber claimNumber;// = hmClaimERATmp.ClaimNumber;
        HMInventTable hmInventTable;
        CustInvoiceTrans custInvoiceTransLocal;
        CustTransOpenLine custTransOpenLineLocal;
        Amount amt;
        CustTransOpen custTransOpenLocal;
        HMCustWriteOff hmcustWriteOff =  HMCustWriteOff::construct();
        CustTable	custTableLocal;
        HMClaimTableDetails	claimDetails;
        HMClaimChargeLine	claimLines;
        HMClaimChargeLine	chargeLines;
        CustTrans			custTransLocal;
        CustTransIdRef		custTransIdRefLocal;
        HMCase				hmCaseLocal;
        HMPatientChargeEntryTable chargeEntryTableLocal;
        CustInvoiceJour				custInvoiceJourLocal;
        HMInsuranceCarrierCode		carrierCode;
        Counter						claimCounter;
        AmountMST					paymTotal;

  //TODO: Deprecated for OneCall demo
        if(claimsCon)
        {
            PaymReference.text("");
            delete_from HMBillPaymentSettlementTmp;
            openCustTransMap = new Map(Types::Int64,Types::Container);
            patientAmountMap = new Map(Types::Int64,Types::Real);

            for (claimCounter = 1; claimCounter <= conLen(claimsCon); claimCounter++)
            {
                claimNumber = conPeek(claimsCon, claimCounter);

                hmclaimTableLocal.clear();
                claimDetails.clear();
                select * from hmClaimTableLocal where hmClaimTableLocal.ClaimID == claimNumber;
                select * from claimDetails		where claimDetails.HMClaimTable == hmClaimTableLocal.RecId;
                
               // carrierCode = HMTPA::find(HMInsuranceContractCarrierCombination::findByInsCarrier(hmClaimTableLocal.HMInsuranceCarrier).HMInsuranceTPA).Code;

                carrierCode = HMInsuranceCarrier::find(hmClaimTableLocal.HMInsuranceCarrier).Code;
                PaymReference.text(strFmt("%1", claimNumber + ", " + PaymReference.text()));

                if(!carrierCode)
                {
                    continue;
                }
                //custTransOpenLocal = hmcustWriteOff.getCustTransOpen(hmClaimTableLocal);

              //  BatchNumber.text(claimDetails.BatchNumber);
               // BatchNumber.modified();

                CustAccount.text(carrierCode);

                SELECT * FROM custTransOpenLocal
                JOIN CustTransLocal where CustTransOpenLocal.AccountNum == CustTransLocal.AccountNum && CustTransOpenLocal.RefRecId == CustTransLocal.RecId
                JOIN CustTransIdRefLocal where CustTransLocal.RecId == CustTransIdRefLocal.TransRecId && CustTransIdRefLocal.TransRefType == 1
                JOIN HMCaseLocal where CustTransLocal.HMCase == HMCaseLocal.RecId
                JOIN chargeEntryTableLocal where HMCaseLocal.RecId == chargeEntryTableLocal.HMCase
                JOIN  hmClaimTableLocal where chargeEntryTableLocal.RecId == hmClaimTableLocal.HMPatientChargeEntryTable
                    && CustTransOpenLocal.AccountNum == carrierCode && hmClaimTableLocal.CLAIMID == claimNumber;


                CustTransOpen_ds.executeQuery();
                HMBillPaymentPosting.enabled(!openCustTransMap.empty());

                CustTransOpen_ds.findRecord(custTransOpenLocal);
                CustTransOpen_ds.mark(true);
                CustTransOpen_ds.editIsMarkedForSettlement(true, custTransOpenLocal, true);

                custOpenTransLineManager = CustOpenTransLineManager::construct(CustTransOpen.RecId,CustTable::find(CustTransOpen.AccountNum));
                //element.insertSettlementTable();
                element.setPatientPaymentValue();
                if(CustTransIdRef.TransRefType == CustTransRefType::Payment)
                {
                    HMInvoiceNextAction.enabled(false);
                }
                else
                {
                    HMInvoiceNextAction.enabled(true);
                    }

                //while select custTransOpenLineLocal
                //    join HMProcedureMasterCode from hmInventTable
                //    join  custInvoiceTransLocal
                //        where custTransOpenLineLocal.CustTransOpen == custTransOpenLocal.RecId
                //        && custInvoiceTransLocal.CustInvoiceLineIdRef == custTransOpenLineLocal.CustInvoiceLineIdRef
                //        && hmInventTable.InventTable ==  custInvoiceTransLocal.ItemId
                //{

                //    select * from hmClaimERALineTmp where hmClaimERALineTmp.Code == hmInventTable.HMProcedureMasterCode;

                //    select forUpdate HMBillPaymentSettlementTmp where HMBillPaymentSettlementTmp.CustTransOpenLine == custTransOpenLineLocal.RecId;

                //    HMBillPaymentSettlementTmp.AmountMST = hmClaimERALineTmp.ERAAmount;
                //    HMBillPaymentSettlementTmp.update();

                //    amt += hmClaimERALineTmp.ERAAmount;
                //}
                //CustTransOpen_ds.executeQuery();
                //PaymAmountCur.realValue(amt);

                //element.calculateBalance();
                CustTransOpenLine.clear();
                CustInvoiceTransLocal.clear();

                while select * from CustTransOpenLine
                        where CustTransOpenLine.CustTransOpen == CustTransOpenLocal.RecId
                {
                    select HMCaseTrans from CustInvoiceTransLocal
                        where CustInvoiceTransLocal.CustInvoiceLineIdRef == CustTransOpenLine.CustInvoiceLineIdRef;
                    HMBillPaymentSettlementTmp.AmountMST = 0.00;
                    HMBillPaymentSettlementTmp.CustTransOpenLine = CustTransOpenLine.RecId;
                    HMBillPaymentSettlementTmp.SalesInvoiceId = CustTransIdRefLocal.TransRefId;
                    HMBillPaymentSettlementTmp.CustTransOpenRecId = CustTransOpenLocal.RecId;
                    HMBillPaymentSettlementTmp.AmountCur = custTransOpenLine.AmountCur;
                    HMBillPaymentSettlementTmp.HMCaseTrans = CustInvoiceTransLocal.HMCaseTrans;

                    HMBillPaymentSettlementTmp.ExpectedAmount =  (select firstonly ExpectedAmount from  HMCaseTrans where  HMCaseTrans.RecId == CustInvoiceTransLocal.HMCaseTrans).ExpectedAmount;

                    HMBillPaymentSettlementTmp.insert();
                }

                paymTotal += custTransOpenLocal.AmountCur * 0.8;
                PaymAmountCur.realValue(paymTotal);
                this.applyPaymentsERA(custTransOpenLocal.AmountCur * 0.8, 0, 0, 0, 5637146076, 0, custTransOpenLocal.AmountCur * 0.2, custTransOpenLocal.AmountCur * 0.8, 0, "", custTransOpenLocal);
            }
            //CustTransOpen_ds.executeQuery();
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadEOBHeaderForm</Name>
				<Source><![CDATA[
    public void loadEOBHeaderForm(MzkEOBHeaderTable mzkEobHeader)
    {
        HMInventTable hmInventTable;
        CustInvoiceTrans custInvoiceTransLocal;
        CustTransOpenLine custTransOpenLineLocal;
        Amount amt;
        CustTransOpen custTransOpenLocal;
        HMCustWriteOff hmcustWriteOff =  HMCustWriteOff::construct();
        CustTable	custTableLocal;
        HMClaimChargeLine	claimLines;
        HMClaimChargeLine	chargeLines;
        CustTrans			custTransLocal;
        CustTransIdRef		custTransIdRefLocal;
        HMCase				hmCaseLocal;
        HMPatientChargeEntryTable chargeEntryTableLocal;
        CustInvoiceJour				custInvoiceJourLocal;
        Counter						claimCounter;
        AmountMST					paymTotal;
        AccountNum accountNum = CustTable::findRecId(mzkEobHeader.Payer).AccountNum;

         PaymReference.text("");
            delete_from HMBillPaymentSettlementTmp;
            openCustTransMap = new Map(Types::Int64,Types::Container);
            patientAmountMap = new Map(Types::Int64,Types::Real);
                         
                
            PaymReference.text(mzkEobHeader.EobID);
            CustAccount.text(accountNum);

                SELECT * FROM custTransOpenLocal
                JOIN CustTransLocal where CustTransOpenLocal.AccountNum == CustTransLocal.AccountNum && CustTransOpenLocal.RefRecId == CustTransLocal.RecId
                JOIN CustTransIdRefLocal where CustTransLocal.RecId == CustTransIdRefLocal.TransRecId && CustTransIdRefLocal.TransRefType == 1
                JOIN HMCaseLocal where CustTransLocal.HMCase == HMCaseLocal.RecId
                JOIN chargeEntryTableLocal where HMCaseLocal.RecId == chargeEntryTableLocal.HMCase
                JOIN  hmClaimTableLocal where chargeEntryTableLocal.RecId == hmClaimTableLocal.HMPatientChargeEntryTable
                    && CustTransOpenLocal.AccountNum == accountNum;


                CustTransOpen_ds.executeQuery();
                HMBillPaymentPosting.enabled(!openCustTransMap.empty());

                CustTransOpen_ds.findRecord(custTransOpenLocal);
                CustTransOpen_ds.mark(true);
                CustTransOpen_ds.editIsMarkedForSettlement(true, custTransOpenLocal, true);

                custOpenTransLineManager = CustOpenTransLineManager::construct(CustTransOpen.RecId,CustTable::find(CustTransOpen.AccountNum));
                //element.insertSettlementTable();
                element.setPatientPaymentValue();
                if(CustTransIdRef.TransRefType == CustTransRefType::Payment)
                {
                    HMInvoiceNextAction.enabled(false);
                }
                else
                {
                    HMInvoiceNextAction.enabled(true);
                }
                
                CustTransOpenLine.clear();
                CustInvoiceTransLocal.clear();

                while select * from CustTransOpenLine
                        where CustTransOpenLine.CustTransOpen == CustTransOpenLocal.RecId
                {
                    select HMCaseTrans from CustInvoiceTransLocal
                        where CustInvoiceTransLocal.CustInvoiceLineIdRef == CustTransOpenLine.CustInvoiceLineIdRef;
                    HMBillPaymentSettlementTmp.AmountMST = 0.00;
                    HMBillPaymentSettlementTmp.CustTransOpenLine = CustTransOpenLine.RecId;
                    HMBillPaymentSettlementTmp.SalesInvoiceId = CustTransIdRefLocal.TransRefId;
                    HMBillPaymentSettlementTmp.CustTransOpenRecId = CustTransOpenLocal.RecId;
                    HMBillPaymentSettlementTmp.AmountCur = custTransOpenLine.AmountCur;
                    HMBillPaymentSettlementTmp.HMCaseTrans = CustInvoiceTransLocal.HMCaseTrans;

                    HMBillPaymentSettlementTmp.ExpectedAmount =  (select firstonly ExpectedAmount from  HMCaseTrans where  HMCaseTrans.RecId == CustInvoiceTransLocal.HMCaseTrans).ExpectedAmount;

                    HMBillPaymentSettlementTmp.insert();
                }

                paymTotal += custTransOpenLocal.AmountCur * 0.8;
                PaymAmountCur.realValue(paymTotal);
                this.applyPaymentsERA(custTransOpenLocal.AmountCur * 0.8, 0, 0, 0, 5637146076, 0, custTransOpenLocal.AmountCur * 0.2, custTransOpenLocal.AmountCur * 0.8, 0, "", custTransOpenLocal);
            
            CustTransOpen_ds.executeQuery();
        
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadEOBLinesForm</Name>
				<Source><![CDATA[
    public void loadEOBLinesForm(MzkClaimAdjustment mzkClaimAdjustment)
    {
        HMInventTable hmInventTable;
        CustInvoiceTrans custInvoiceTransLocal;
        CustTransOpenLine custTransOpenLineLocal;
        Amount amt;
        CustTransOpen custTransOpenLocal;
        HMCustWriteOff hmcustWriteOff =  HMCustWriteOff::construct();
        CustTable	custTableLocal;
        HMClaimChargeLine	claimLines;
        HMClaimChargeLine	chargeLines;
        CustTrans			custTransLocal;
        CustTransIdRef		custTransIdRefLocal;
        HMCase				hmCaseLocal;
        HMPatientChargeEntryTable chargeEntryTableLocal;
        CustInvoiceJour				custInvoiceJourLocal;
        Counter						claimCounter;
        AmountMST					paymTotal;
        AccountNum accountNum;

        PaymReference.text("");
        delete_from HMBillPaymentSettlementTmp;
        openCustTransMap = new Map(Types::Int64,Types::Container);
        patientAmountMap = new Map(Types::Int64,Types::Real);
                         
                
        MzkEOBHeaderTable mzkEobHeader;

        select * from mzkEobHeader where mzkEobHeader.RecId == mzkClaimAdjustment.MzkEOBHeaderTable;

        accountNum = CustTable::findRecId(mzkEobHeader.Payer).AccountNum;

        PaymReference.text(mzkEobHeader.EobID);
        CustAccount.text(accountNum);
        HMBillPaymentPosting.enabled(!openCustTransMap.empty());

        if(mzkClaimAdjustment.CaseNumber)
        {
            SELECT * FROM custTransOpenLocal
                JOIN CustTransLocal where CustTransOpenLocal.AccountNum == CustTransLocal.AccountNum && CustTransOpenLocal.RefRecId == CustTransLocal.RecId
                JOIN CustTransIdRefLocal where CustTransLocal.RecId == CustTransIdRefLocal.TransRecId && CustTransIdRefLocal.TransRefType == 1
                JOIN HMCaseLocal where CustTransLocal.HMCase == HMCaseLocal.RecId
                JOIN chargeEntryTableLocal where HMCaseLocal.RecId == chargeEntryTableLocal.HMCase
                JOIN  hmClaimTableLocal where chargeEntryTableLocal.RecId == hmClaimTableLocal.HMPatientChargeEntryTable
                    && CustTransOpenLocal.AccountNum == accountNum && hmCaseLocal.CaseNo == mzkClaimAdjustment.CaseNumber;

            CustTransOpen_ds.executeQuery();

            CustTransOpen_ds.findRecord(custTransOpenLocal);
            CustTransOpen_ds.mark(true);
            CustTransOpen_ds.editIsMarkedForSettlement(true, custTransOpenLocal, true);
        }

        custOpenTransLineManager = CustOpenTransLineManager::construct(CustTransOpen.RecId,CustTable::find(CustTransOpen.AccountNum));
        //element.insertSettlementTable();
        element.setPatientPaymentValue();
        if(CustTransIdRef.TransRefType == CustTransRefType::Payment)
        {
            HMInvoiceNextAction.enabled(false);
        }
        else
        {
            HMInvoiceNextAction.enabled(true);
        }
                
        CustTransOpenLine.clear();
        CustInvoiceTransLocal.clear();

        while select * from CustTransOpenLine
                        where CustTransOpenLine.CustTransOpen == CustTransOpenLocal.RecId
        {
            select HMCaseTrans from CustInvoiceTransLocal
                        where CustInvoiceTransLocal.CustInvoiceLineIdRef == CustTransOpenLine.CustInvoiceLineIdRef;
            HMBillPaymentSettlementTmp.AmountMST = 0.00;
            HMBillPaymentSettlementTmp.CustTransOpenLine = CustTransOpenLine.RecId;
            HMBillPaymentSettlementTmp.SalesInvoiceId = CustTransIdRefLocal.TransRefId;
            HMBillPaymentSettlementTmp.CustTransOpenRecId = CustTransOpenLocal.RecId;
            HMBillPaymentSettlementTmp.AmountCur = custTransOpenLine.AmountCur;
            HMBillPaymentSettlementTmp.HMCaseTrans = CustInvoiceTransLocal.HMCaseTrans;

            HMBillPaymentSettlementTmp.ExpectedAmount =  (select firstonly ExpectedAmount from  HMCaseTrans where  HMCaseTrans.RecId == CustInvoiceTransLocal.HMCaseTrans).ExpectedAmount;

            HMBillPaymentSettlementTmp.insert();
        }

        paymTotal += custTransOpenLocal.AmountCur * 0.8;
        PaymAmountCur.realValue(paymTotal);

        if(mzkClaimAdjustment.CaseNumber)
        {
            this.applyPaymentsERA(custTransOpenLocal.AmountCur * 0.8, 0, 0, 0, 5637146076, 0, custTransOpenLocal.AmountCur * 0.2, custTransOpenLocal.AmountCur * 0.8, 0, "", custTransOpenLocal);
        }
        else
        {
            this.applyPaymentsEOBLines(custTransOpenLocal.AmountCur * 0.8, 0, 0, 0, 5637146076, 0, custTransOpenLocal.AmountCur * 0.2, custTransOpenLocal.AmountCur * 0.8, 0, "", custTransOpenLocal);
        }

      //  this.insertSettlementTable();

       // CustTransOpen_ds.executeQuery();
        
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAllInvoiceLineNextAction</Name>
				<Source><![CDATA[
    public void markAllInvoiceLineNextAction(RecId _custTransOpenRecId, HMInvoiceNextAction _nextAction)
    {
        try
        {
            ttsBegin;
            update_recordSet HMBillPaymentSettlementTmp
            setting HMInvoiceNextAction = _nextAction
            where HMBillPaymentSettlementTmp.CustTransOpenRecId == _custTransOpenRecId;
            ttsCommit;
            CustTransOpenLine_ds.executeQuery();
        }
        catch
        {
            ttsAbort;
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentLineModified</Name>
				<Source><![CDATA[
    public void paymentLineModified(HMBillPaymentSettlementTmp _buffer)
    {
        _buffer.BalanceAmount = _buffer.AmountCur - _buffer.AmountMST - _buffer.WriteOffAmount - _buffer.TransferAmount;
        _buffer.AmountPaid = _buffer.AmountMST - _buffer.CoPayAmount - _buffer.CoInsuranceAmount - _buffer.Deductible ;
        _buffer.write();
        element.calculateBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGrid</Name>
				<Source><![CDATA[
    public void refreshGrid()
    {
    CustTransOpen_Ds.queryBuildDataSource().clearRanges();
    if (dateValStr != '')
                CustTransOpen_Ds.queryBuildDataSource().
                addRange(fieldNum(CustTransOpen, DueDate)).
                value(dateValStr);
        CustTransOpen_Ds.executeQuery();
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetAll</Name>
				<Source><![CDATA[
    private void resetAll()
    {
      
        CustAccount.text("");
        CustTransOpen_ds.executeQuery();
        TransDate.dateValue(dateNull());
        PaymMode.text("");
        PaymReference.text("");
        PaymAmountCur.realValue(0.00);
        TotalSettlePaymAmountCur.realValue(0.00);
        RemainingPaymAmountCur.realValue(0.00);
        PatientPayment.realValue(0.00);
        openCustTransMap = new Map(Types::Int64,Types::Container);
        patientAmountMap = new Map(Types::Int64,Types::Real);
        headerInvoiceNextActionMap = new Map(Types::Int64,Types::Enum);
        mapDocumentControlNumber = new Map(Types::Int64,Types::String);
        FileOpen.text("");
        TransDate.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        paymentMode =    HMBillParameters::getDefaultPaymMode();
        PaymMode.text(paymentMode);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        HMPaymentCentreFormHandler = new HMPaymentCentreFormHandler();
        super();
        element.resetAll();
    
        if(element.args().menuItemName() == menuItemDisplayStr(HMPaymentCenterEOB))
        {
            element.loadEOBHeaderForm(element.args().record());
        }
        else if(element.args().menuItemName() == menuItemDisplayStr(HMPaymentCenterEOBLines))
        {
            element.loadEOBLinesForm(element.args().record());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPatientPaymentValue</Name>
				<Source><![CDATA[
    PUBLIC void setPatientPaymentValue()
    {
        if(custTransIdRef.TransRefType == CustTransRefType::Payment)
        {
            if(patientAmountMap.exists(CustTransOpen.RecId))
            {
                PatientPayment.realValue(patientAmountMap.lookup(CustTransOpen.RecId));
                return;
            }
        }
        PatientPayment.realValue(0.00);
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeMethodOfPayment</Name>
				<Source><![CDATA[
    public void storeMethodOfPayment(CustPaymModeTable _paymentModeTable)
    {
        paymentMode = _paymentModeTable.PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormControls</Name>
				<Source><![CDATA[
    public void updateFormControls()
    {
        if(custTransIdRef.TransRefType == CustTransRefType::Payment && openCustTransMap.exists(CustTransOpen.RecId))
        {
            PatientPayment.allowEdit(true);
            InvoiceLinesGrid.allowEdit(false);
            MarkAllInvoiceLine.enabled(false);
        }
        else if(custTransIdRef.TransRefType == CustTransRefType::Invoice && openCustTransMap.exists(CustTransOpen.RecId))
        {
            PatientPayment.allowEdit(false);
            InvoiceLinesGrid.allowEdit(true);
            MarkAllInvoiceLine.enabled(true);
        }
        else
        {
            PatientPayment.allowEdit(false);
            InvoiceLinesGrid.allowEdit(false);
            MarkAllInvoiceLine.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePaymentButton</Name>
				<Source><![CDATA[
    public void updatePaymentButton()
    {
        HMPaymentCenterApplyPayments.enabled(openCustTransMap.exists(CustTransOpen.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePost</Name>
				<Source><![CDATA[
    public boolean validatePost()
    {
        MapEnumerator enumerator;
        boolean ret = true;
    
        if(openCustTransMap.empty())
        {
            warning("@MAZ10516");
            ret = false;
        }
        if(TransDate.valueStr() == "")
        {
            warning("@MAZ10515");
            ret = false;
        }
        if(CustAccount.text() == "")
        {
            warning("@MAZ10514");
            ret = false;
        }
        if(PaymMode.text() == "")
        {
            warning("@MAZ10513");
            ret = false;
        }
        if(PaymReference.mandatory() && PaymReference.text() == "")
        {
            warning("@MAZ10512");
            ret = false;
        }
        if(RemainingPaymAmountCur.realValue() != 0)
        {
            warning("@MAZ10511");
            ret = false;
        }
    
        //enumerator = openCustTransMap.getEnumerator();
        //while(enumerator.moveNext())
        //{
            //select count(RecId) from HMBillPaymentSettlementTmp
            //where HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferToPatient
            //&& HMBillPaymentSettlementTmp.CustTransOpenRecId == enumerator.currentKey();
            //if(HMBillPaymentSettlementTmp.RecId != 0)
            //{
                //select count(RecId) from HMBillPaymentSettlementTmp
                //where HMBillPaymentSettlementTmp.HMInvoiceNextAction != HMInvoiceNextAction::TransferToPatient
                //&& HMBillPaymentSettlementTmp.CustTransOpenRecId == enumerator.currentKey();
                //if(HMBillPaymentSettlementTmp.RecId != 0)
                //{
                    //ret = false;
                    //warning("@MAZ10517");
                    //break;
                //}
            //}
        //}
        if(!ret)
        {
            //CustTransOpenLine_ds.executeQuery();
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyPaymentsERA</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void applyPaymentsERA(real _approveddAmt,
                                real _coPayAmt,
                                real _coInsAmount,
                                real _coDeductibleAmt,
                                RecId _reasonCodeRecId,
                                real _transferAmount,
                                real _writeOffAmount,
                                real _paymentAmount,
                                real _additionalAmount,
                                str  _documentControlNumber = '',
                                CustTransOpen _custTransOpen = null)
    {
        int _position;
        _position = CustTransOpen_ds.getPosition();
        Recid custTransOpenRecId = _custTransOpen.RecId ? _custTransOpen.RecId : CustTransOpen.RecId;
        HMPaymentCentreFormHandler.applyPayments(HMBillPaymentSettlementTmp,custTransOpenRecId,_approveddAmt,_coPayAmt,_coInsAmount,_coDeductibleAmt,_reasonCodeRecId, _transferAmount, _writeOffAmount,_paymentAmount,_additionalAmount);
    
        select sum(AmountPaid) from HMBillPaymentSettlementTmp;
        TotalSettlePaymAmountCur.realValue(HMBillPaymentSettlementTmp.AmountPaid);
        RemainingPaymAmountCur.realValue(PaymAmountCur.realValue() - TotalSettlePaymAmountCur.realValue());
    
        CustTranSoPEN_ds.executeQuery();
        CustTranSoPEN_ds.positionToRecord(CustTrans::find(custTransOpenRecId));
    
    
        if(mapDocumentControlNumber.exists(_custTransOpen.custTrans().HMCase))
        {
            mapDocumentControlNumber.remove(_custTransOpen.custTrans().HMCase);
        }
        if(_documentControlNumber)
        {
            mapDocumentControlNumber.insert(_custTransOpen.custTrans().HMCase,_documentControlNumber);
        }
        custtransopen_ds.setPosition(_position);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyPaymentsEOBLines</Name>
				<Source><![CDATA[
    public void applyPaymentsEOBLines(real _approveddAmt,
                                real _coPayAmt,
                                real _coInsAmount,
                                real _coDeductibleAmt,
                                RecId _reasonCodeRecId,
                                real _transferAmount,
                                real _writeOffAmount,
                                real _paymentAmount,
                                real _additionalAmount,
                                str  _documentControlNumber = '',
                                CustTransOpen _custTransOpen = null)
    {
        
        Recid custTransOpenRecId = _custTransOpen.RecId ? _custTransOpen.RecId : CustTransOpen.RecId;
        HMPaymentCentreFormHandler.applyPayments(HMBillPaymentSettlementTmp,custTransOpenRecId,_approveddAmt,_coPayAmt,_coInsAmount,_coDeductibleAmt,_reasonCodeRecId, _transferAmount, _writeOffAmount,_paymentAmount,_additionalAmount);
    
        select sum(AmountPaid) from HMBillPaymentSettlementTmp;
        TotalSettlePaymAmountCur.realValue(HMBillPaymentSettlementTmp.AmountPaid);
        RemainingPaymAmountCur.realValue(PaymAmountCur.realValue() - TotalSettlePaymAmountCur.realValue());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustTransOpen</Name>
				<Methods>
					<Method>
						<Name>editHMInvoiceNextAction</Name>
						<Source><![CDATA[
        public edit HMInvoiceNextAction editHMInvoiceNextAction(
            boolean _set,
            CustTransOpen _custTransOpen,
            HMInvoiceNextAction _hmInvoiceNextAction)
        {
            CustTAble custTableLocal;
            if(!headerInvoiceNextActionMap.exists(_custTransOpen.RecId))
            {
                headerInvoiceNextActionMap.insert(_custTransOpen.RecId, _hmInvoiceNextAction);
            }
            if(_set)
            {
                try
                {
                    if(headerInvoiceNextActionMap.exists(_custTransOpen.RecId))
                    {
                        if(headerInvoiceNextActionMap.lookup(_custTransOpen.RecId) != _hmInvoiceNextAction)
                        {
                            headerInvoiceNextActionMap.remove(_custTransOpen.RecId);
                            select AccountNum,CustType from custTableLocal
                            where custTableLocal.AccountNum == CustAccount.text();
                            if(custTableLocal.CustType == CustType::Patient && _hmInvoiceNextAction == HMInvoiceNextAction::TransferToPatient)
                            {
                                warning("@MAZ10535");
                                _hmInvoiceNextAction = HMInvoiceNextAction::None;
                            }
        
                            ttsBegin;
                            update_recordSet HMBillPaymentSettlementTmp
                            setting HMInvoiceNextAction = _hmInvoiceNextAction
                            where HMBillPaymentSettlementTmp.CustTransOpenRecId == _custTransOpen.RecId;
                            ttsCommit;
                            headerInvoiceNextActionMap.insert(_custTransOpen.RecId, _hmInvoiceNextAction);
                            CustTransOpenLine_ds.executeQuery();
                        }
                    }
        
                }
                catch
                {
                    ttsAbort;
                }
        
            }
        
            return headerInvoiceNextActionMap.lookup(_custTransOpen.RecId);
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
            if(ret)
            {
                custOpenTransLineManager = CustOpenTransLineManager::construct(CustTransOpen.RecId,CustTable::find(CustTransOpen.AccountNum));
                element.insertSettlementTable();
                element.setPatientPaymentValue();
                if(CustTransIdRef.TransRefType == CustTransRefType::Payment)
                {
                    HMInvoiceNextAction.enabled(false);
                }
                else
                {
                    HMInvoiceNextAction.enabled(true);
                }
                element.updatePaymentButton();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
        
            if (CustAccount.text() == "")
            {
                OpenInvoice_Grid.enabled(false);
                this.query().dataSourceTable(tableNum(CustTransOpen)).addRange(fieldNum(CustTransOpen,RecId)).value(SysQuery::value("0"));
            }
            else
            {
                OpenInvoice_Grid.enabled(true);
                this.query().dataSourceTable(tableNum(CustTransOpen)).clearRanges();
                this.query().dataSourceTable(tableNum(CustTransOpen)).addRange(fieldNum(CustTransOpen,AccountNum)).value(SysQuery::value(CustAccount.text()));
                if(strLen(dtrvalue)>0)
                {
        
                    this.query().dataSourceTable(tableNum(CustTransOpen)).addRange(fieldNum(CustTransOpen,DueDate)).value(dtrvalue);
                }
            }
            if(batchRecId)
            {
                this.query().dataSourceTable(tableNum(HMCustInvoiceBatch)).enabled(true);
                this.query().dataSourceTable(tableNum(HMCustInvoiceBatch)).clearRanges();
                this.query().dataSourceTable(tableNum(HMCustInvoiceBatch)).addRange(fieldNum(HMCustInvoiceBatch,HMInsuranceCarrierBatchDetails)).value(SysQuery::value( batchRecId));
            }
            else
            {
                this.query().dataSourceTable(tableNum(HMCustInvoiceBatch)).enabled(false);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editIsMarkedForSettlement</Name>
						<Source><![CDATA[
        public edit boolean editIsMarkedForSettlement(
            boolean _set,
            CustTransOpen _custTransOpen,
            boolean _isMarkedForSettlement)
        {
            container mapContainer;
            mapContainer = connull();
            if(_set)
            {
                if(_isMarkedForSettlement)
                {
                    mapContainer = [_custTransOpen.RecId,HMCase.RecId,HMResourceSchedulingAppointment.RecId];
                    openCustTransMap.insert(_custTransOpen.RecId,mapContainer);
                    HMPaymentCenterApplyPayments.enabled(true);
                }
                else
                {
                    PatientPayment.realValue(0.00);
                    openCustTransMap.remove(_custTransOpen.RecId);
                    patientAmountMap.remove(CustTransOpen.RecId);
                    if(mapDocumentControlNumber.exists(_CustTransOpen.custTrans().HMCase))
                    {
                        mapDocumentControlNumber.remove(_CustTransOpen.custTrans().HMCase);
                    }
                    HMPaymentCenterApplyPayments.enabled(false);
                    ttsBegin;
                    update_recordSet HMBillPaymentSettlementTmp
                    setting AmountMST = 0.00,
                    ExpectedAmount = 0.00,
                    CoPayAMount = 0.00,
                    CoInsuranceAmount = 0.00,
                    AmountPaid = 0.00,
                    TransferAmount = 0.00,
                    WriteOffAmount = 0.00,
                    BalanceAMount = 0.00,
                    HMInvoiceNextAction = HMInvoiceNextAction::None,
                    HMEOBReasonCode = 0
                    where HMBillPaymentSettlementTmp.CustTransOpenRecId == _custTransOpen.RecId;
                    ttsCommit;
                    CustTransOpenLine_ds.executeQuery();
        
        
                }
                element.calculateBalance();
                element.updateFormControls();
                HMBillPaymentPosting.enabled(!openCustTransMap.empty());
            }
        
        
            return  openCustTransMap.exists(_custTransOpen.RecId);
        
        
        
        
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>custTransIdRef</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
            if(ret)
            {
                element.updateFormControls();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().addRange(fieldnum(CustTransIdRef,TransRefType)).value(SysQuery::value(CustTransRefType::Invoice));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTransOpenLine</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (batchRecId)
            {
                qbrBatchNumber.enabled(true);
                qbrBatchNumber.value(queryValue(batchRecId));
            }
            else
            {
                qbrBatchNumber.enabled(false);
            }
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMBillPaymentSettlementTmp</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if (CustTable::find(CustAccount.valueStr()).CustType == CustType::Patient)
            {
                HMBillPaymentSettlementTmp_CoPayAmount.allowEdit(false);
                HMBillPaymentSettlementTmp_CoInsuranceAmount.allowEdit(false);
                HMBillPaymentSettlementTmp_Deductible.allowEdit(false);
            }
            else
            {
                HMBillPaymentSettlementTmp_CoPayAmount.allowEdit(true);
                HMBillPaymentSettlementTmp_CoInsuranceAmount.allowEdit(true);
                HMBillPaymentSettlementTmp_Deductible.allowEdit(true);
            }
            HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,WriteOffAmount)).allowEdit(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferAndWriteOff);
            HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,TransferAmount)).allowEdit(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferAndWriteOff);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                if(HMBillPaymentSettlementTmp.AmountMST > HMBillPaymentSettlementTmp.AmountCur)
                {
                    warning("@MAZ10503");
                    ret = false;
                }
                if(HMBillPaymentSettlementTmp.CoPayAmount + HMBillPaymentSettlementTmp.CoInsuranceAmount + HMBillPaymentSettlementTmp.Deductible > HMBillPaymentSettlementTmp.AmountMST)
                {
                    warning("Co-pay/Co-insurance/deductible amount cannot be greater then approved amount");
                    ret = false;
                }
                //if(HMBillPaymentSettlementTmp.BalanceAmount > 0 && HMBillPaymentSettlementTmp.HMEOBReasonCode == 0)
                //{
                    //warning("Reason code must be specified");
                    //ret = false;
                //}
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>amountAdjusted</Name>
						<Source><![CDATA[
        public edit AmountMst amountAdjusted(boolean set, HMBillPaymentSettlementTmp _settlement, AmountMst _value)
        {
            if(set)
            {
                _settlement.AmountMST = _value;
                element.paymentLineModified(_settlement);
            }
            return _settlement.AmountMST;
        }

]]></Source>
					</Method>
					<Method>
						<Name>notCovered</Name>
						<Source><![CDATA[
        public display Amount notCovered(HMBillPaymentSettlementTmp _settlement)
        {
            return _settlement.AmountCur - _settlement.AmountMST;
        }

]]></Source>
					</Method>
					<Method>
						<Name>patientResp</Name>
						<Source><![CDATA[
        public edit Amount patientResp(boolean set, HMBillPaymentSettlementTmp _settlement, AmountMst _value)
        {
            if(set)
            {
                _settlement.PatientResponsibility = _value;
                element.paymentLineModified(_settlement);
            }
            return _settlement.PatientResponsibility;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void write()
        {
            HMBillPaymentSettlementTmp.EOBCode = HMEOBReasons_Code.text();

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AmountMST</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.paymentLineModified(HMBillPaymentSettlementTmp);
              
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>EOBCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                super();
                HMEOBReasons hMEOBReasons;
                select * from hMEOBReasons
                    where hMEOBReasons.Code == HMBillPaymentSettlementTmp.EOBCode;
                if(hMEOBReasons)
                {
                    if(hMEOBReasons.Denied == NoYes::Yes)
                    {
                        HMBillPaymentSettlementTmp.LineStatus = HMInvoiceLineStatus::Denied;
                        //ttsbegin;  
                        //HMBillPaymentSettlementTmp HMBillPaymentSettlementTmp2;
                        //    select forupdate HMBillPaymentSettlementTmp2
                        //    where HMBillPaymentSettlementTmp2.RecId == HMBillPaymentSettlementTmp.RecId;
                        //HMBillPaymentSettlementTmp2.update();
                        //ttscommit;
                        ////HMBillPaymentSettlementTmp.reread();
                        //HMBillPaymentSettlementTmp_ds.executeQuery();

                    }
                }
                
            }

]]></Source>
							</Method>
							<Method>
								<Name>dataChanged</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void dataChanged()
            {
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HMEOBReasonCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                HMBillPaymentSettlementTmp.HMInvoiceNextAction = HMEOBReasonCode::findNextInvoiceAction(HMBillPaymentSettlementTmp.HMEOBReasonCode);
                if(HMBillPaymentSettlementTmp.orig().HMInvoiceNextAction != HMBillPaymentSettlementTmp.HMInvoiceNextAction)
                {
                    HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,HMInvoiceNextAction)).modified();
                }
                HMBillPaymentSettlementTmp_ds.write();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HMInvoiceNextAction</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::WriteOff)
                {
                    HMBillPaymentSettlementTmp.WriteOffAmount = HMBillPaymentSettlementTmp.AmountCur - HMBillPaymentSettlementTmp.AmountPaid;
                    if(HMBillPaymentSettlementTmp.WriteOffAmount < 0)
                    {
                        warning("Write off amount cannot be negative");
                        HMBillPaymentSettlementTmp.WriteOffAmount = HMBillPaymentSettlementTmp.orig().WriteOffAmount;
                        HMBillPaymentSettlementTmp.HMInvoiceNextAction = HMInvoiceNextAction::None;
                    }
                }
                else
                {
                    HMBillPaymentSettlementTmp.WriteOffAmount = 0;
                }
            
                HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,WriteOffAmount)).allowEdit(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferAndWriteOff);
                HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,TransferAmount)).allowEdit(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferAndWriteOff);

                if (HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferToInsurance)
                {
                    HMBillPaymentSettlementTmp_ds.object(fieldNum(HMBillPaymentSettlementTmp,TransferAmount)).allowEdit(HMBillPaymentSettlementTmp.HMInvoiceNextAction == HMInvoiceNextAction::TransferToInsurance);
                }

                element.paymentLineModified(HMBillPaymentSettlementTmp);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransferAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.paymentLineModified(HMBillPaymentSettlementTmp);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WriteOffAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.paymentLineModified(HMBillPaymentSettlementTmp);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustInvoiceTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            //Fix: unable to add form to workspace - OneCall demo
            //this.queryBuildDataSource().addDynalink(fieldNum(CustInvoiceTrans,CustInvoiceLineIdRef),CustTransOpenLine,fieldNum(CustTransOpenLine,CustInvoiceLineIdRef));
            this.queryBuildDataSource().addLink(fieldNum(CustInvoiceTrans,CustInvoiceLineIdRef), fieldNum(CustTransOpenLine,CustInvoiceLineIdRef));
            qbrBatchNumber = this.queryBuildDataSource().addRange(fieldNum(CustInvoiceTrans, HMInsuranceCarrierBatchDetails));
            qbrBatchNumber.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMResourceSchedulingAppointment</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            //ret = super();
            ret = false;
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>HMCustInvoiceBatch</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.queryBuildDataSource().addLink(fieldNum(CustTransOpen,RecId),fieldNum(HMCustInvoiceBatch,CustTransOpenRecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CustAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            CustTable custTableLocal;
            ret = super();
            if(ret)
            {
                select count(RecId) from custTableLocal
                where custTableLocal.AccountNum == this.text()
                && custTableLocal.CustType != CustType::None;
                if(custTableLocal.RecId == 0)
                {
                    warning("@MAZ10523");
                    this.text("");
                }
                delete_from HMBillPaymentSettlementTmp ;
                CustTransOpen_ds.executeQuery();
                openCustTransMap = new Map(Types::Int64,Types::Container);
                patientAmountMap = new Map(Types::Int64,Types::Real);
                HMBillPaymentPosting.enabled(!openCustTransMap.empty());
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BatchNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange queryBuildRange;
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(HMInsuranceCarrierBatchDetails), this);
        
            if(CustAccount.valueStr() == '')
            {
                warning("@MAZ13537");
                return;
            }
        
            sysTableLookup.addLookupField(fieldNum(HMInsuranceCarrierBatchDetails, BatchNumber));
            sysTableLookup.addLookupField(fieldNum(HMInsuranceCarrierBatchDetails, FromDate));
            sysTableLookup.addLookupField(fieldNum(HMInsuranceCarrierBatchDetails, ToDate));
            sysTableLookup.addLookupField(fieldNum(HMInsuranceCarrierBatchDetails, Reference));
        
            queryBuildDataSource = query.addDataSource(tableNum(HMInsuranceCarrierBatchDetails));
        
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(HMInsuranceCarrierBatchDetails, HMInsuranceCarrier));
            queryBuildRange.value(SysQuery::value(HMInsuranceCarrier::findByCode(CustAccount.valueStr()).RecId));
        
            queryBuildDataSource.addRange(fieldNum(HMInsuranceCarrierBatchDetails, Status)).value(SysQuery::value(HMInsuranceCarrierBatchStatus::Active));
        
            sysTableLookup.parmQuery(query);
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            batchNumberId = this.text();
        
            if(ret)
            {
                batchRecId = HMInsuranceCarrierBatchDetails::findRecIdbByBatchNumber(batchNumberId);
            }
            CustTransOpen_ds.executeQuery();
            //CustTransOpenLine_ds.executeQuery();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymMode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            /*  Args                            args;
            MenuFunction                    menuFunction;
        
            args = new Args();
            args.caller(element);
        
            menuFunction = new MenuFunction(menuitemdisplaystr(HMPaymentMode),MenuItemType::Display);
            menuFunction.run(args);*/
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            super();
            /*Args args;
            FormRun itemLookUp;
        
            args = new Args();
            args.caller(element);
            args.name(formstr(HMMethodOfPaymentLookup));
            itemLookUp = ClassFactory.formRunClass(args);
            itemLookUp.init();
            this.performFormLookup(itemLookUp);*/
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            CustPaymModeTable       custPaymModeTable;
            CustPaymMethodVal       CustPaymMethodVal;
            ret = super();
            if(ret)
            {
                select RecId,Name,PaymMode from custPaymModeTable where custPaymModeTable.PaymMode == this.text();
                if(custPaymModeTable.RecId)
                {
                    paymentMode = custPaymModeTable.PaymMode;
                    this.text(custPaymModeTable.PaymMode);
                    CustPaymMethodVal = CustPaymMethodVal::find(paymentmode, CustPaymentValidate::PaymReference);
                    PaymReference.mandatory(CustPaymMethodVal ? true : false);
                    PaymReference.update();
                    
                    PaymReference.mandatory(CustPaymMethodVal::exist(custPaymModeTable.PaymMode, CustPaymentValidate::PaymReference));
                }
                else
                {
                    warning("@MAZ6390");
                    this.text('');
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymAmountCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                element.calculateBalance();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean validate()
        {
            boolean ret;
            //CustTransOpen custTransOpenLocal;
        
            ret = super();
            //TODO: Functionality suspended for demo
            //custTransOpenLocal = getFirstSelection(CustTransOpen_ds);
            //if (ret)
            //{
            //    if (this.realValue() < custTransOpenLocal.AmountCur || this.realValue() > custTransOpenLocal.AmountCur)
            //    {
            //        ret = false;
            //    }
            //} 
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DistributeAmount</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            Amount  paymentAmount;
            CustTransOpen custTransOpenLocal;

            super();
            paymentAmount = str2num(PaymAmountCur.valueStr());
            custTransOpenLocal = getFirstSelection(CustTransOpen_ds);

            try
            {
                
                if (PaymAmountCur.validate())
                {
                    update_recordset HMBillPaymentSettlementTmp
                        setting AmountMST = HMBillPaymentSettlementTmp.AmountCur
                        where HMBillPaymentSettlementTmp.CustTransOpenRecId == custTransOpenLocal.RecId;
                }
                else
                {
                    warning("Amount value cannot be greater or lesser than Amount availabe to pay.");
                }
                
            }
            catch
            {
                warning("Amount failed to distribute.");
            }

           
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FileOpen</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FilenameFilter      filter=['All Files', '*.*'];
            str        onlyname;
        
            if(!CustAccount.text() || Box::yesNo("All details will be reset. Do you want to continue?",DialogButton::No) == DialogButton::Yes)
            {
                onlyname=WinAPI::getOpenFileName(element.hWnd(), filter, '', "Select ERA file");//Select documents;
        
                super();
        
                FileOpen.text(onlyname);
                FileOpen.modified();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            boolean isValidated = true;
        
            ret = super();
        
            if(ret && this.text() != '')
            {
                if(!WinAPI::fileExists(this.text(),false))
                {
                    warning("@MAZ4997");
                    isValidated = false;
                }
        
                if(isValidated && !(HMDocuAction::isFilenameOk(this.text())))
                {
                    warning("@MAZ2963");
                    isValidated = false;
                }
        
                if(isValidated)
                {
                    element.loadERAForm(this.text());
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FileUpload1</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>OnUploadCompleted</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void OnUploadCompleted()
        {
            str fileUrl;
            FileUploadTemporaryStorageResult result = this.getFileUploadResult() as FileUploadTemporaryStorageResult;
 
            super();
 
            if(result && result.getUploadStatus())
            {
                fileUrl = result.getDownloadUrl();
 
                using(System.IO.MemoryStream stream = result.openResult() as System.IO.MemoryStream)
                    using(System.IO.StreamReader sreader = new System.IO.StreamReader(stream, System.Text.Encoding::UTF8, true))
                {
                    XML filexml;
 
                    filexml = sreader.ReadToEnd();
                    element.loadERAForm(filexml);
                 }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckERA</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void clicked()
        {
            Args args;
            MenuFunction menu;

            super();
            args = new Args();
            args.record(hmClaimTableLocal);

            menu = new MenuFunction(menuItemDisplayStr(HMDisplayERADetails), MenuItemType::Display);
            menu.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if (this.valueStr() == '' && ToDate.valueStr() == '')
                    DateSearch.enabled(false);
                else
                    DateSearch.enabled(true);
            }
            ToDate.dateValue(this.dateValue());
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if (ret)
            {
                if (this.valueStr() == '' && FromDate.valueStr() == '')
                    DateSearch.enabled(false);
                else
                    DateSearch.enabled(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            if (element.generateHeaderDateRanges())
                element.refreshGrid();
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>None</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.markAllInvoiceLineNextAction(CustTransOpen.RecId,HMInvoiceNextAction::None);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WriteOff</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.markAllInvoiceLineNextAction(CustTransOpen.RecId,HMInvoiceNextAction::WriteOff);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToPatient</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.markAllInvoiceLineNextAction(CustTransOpen.RecId,HMInvoiceNextAction::TransferToPatient);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMEOBReasons_Code</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            HMEOBReasons hMEOBReasons;
            select * from hMEOBReasons
                    where hMEOBReasons.Code == HMBillPaymentSettlementTmp.EOBCode;
            if(hMEOBReasons)
            {
                if(hMEOBReasons.Denied == NoYes::Yes)
                {
                    HMBillPaymentSettlementTmp.LineStatus = HMInvoiceLineStatus::Denied;
                    HMBillPaymentSettlementTmp.write();
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void lookup()
        {
            HMEOBReasons eobiReasonCode;
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource, queryBuildDataSource2;
            QueryBuildRange queryBuildRange;
        
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(HMEOBReasons), this);
        
            queryBuildDataSource = query.addDataSource(tableNum(HMEOBReasons));
                     
            sysTableLookup.parmQuery(query);
            sysTableLookup.addLookupField(fieldNum(HMEOBReasons, Code));
            sysTableLookup.addLookupField(fieldNum(HMEOBReasons, Description));
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LineStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;
            //Zain - Preventice demo
            //CustTrans       custTransLocal;
            //MenuFunction    menuFunction;
            //args            args = new Args();
            //Zain - Preventice demo
        
            ret = super();

            //if(this.selection() == HMInvoiceLineStatus::Denied)
            //{
            //    custTransLocal = CustTrans::find(CustTrans.RecId);
            //    args.record(CustTrans);
            //    args.caller(this.formRun());
            //    args.parm("PaymentCenter");
            //    menuFunction = new menufunction(identifierstr(CustCollectionsSetTransactionStatus), MenuItemType::Display);
            //    menuFunction.run(args);
            //}
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMBillPaymentSettlementTmp_HMEOBReasonCode</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            HMEOBReasonCode eobiReasonCode;
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource, queryBuildDataSource2;
            QueryBuildRange queryBuildRange;
        
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(HMEOBReasonCode), this, true);
        
            queryBuildDataSource = query.addDataSource(tableNum(HMEOBReasonCode));
            //queryBuildDataSource2 = queryBuildDataSource.addDataSource(tableNum(HMItemCptPcsCodes));
            //queryBuildDataSource2.joinMode(JoinMode::InnerJoin);
            //queryBuildDataSource2.relations(true);
            if (CustTable::find(CustAccount.valueStr()).CustType == CustType::Patient)
            {
                queryBuildDataSource.addRange(fieldNum(HMEOBReasonCode, InvoiceNextAction)).value(queryValue(HMInvoiceNextAction::Discount));
            }
            else
            {
                queryBuildDataSource.addRange(fieldNum(HMEOBReasonCode, InvoiceNextAction)).value(queryValue(SysQuery::valueNot(HMInvoiceNextAction::Discount)));
            }
            sysTableLookup.parmQuery(query);
            sysTableLookup.addLookupField(fieldNum(HMEOBReasonCode, Code));
            sysTableLookup.addLookupField(fieldNum(HMEOBReasonCode, Description));
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>update</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void update()
        {
            super();
            //info("a text");
            //HMEOBReasons hMEOBReasons;
            //select * from hMEOBReasons
            //        where hMEOBReasons.Code == HMBillPaymentSettlementTmp.EOBCode;
            //if(hMEOBReasons)
            //{
            //    if(hMEOBReasons.Denied == NoYes::Yes)
            //    {
            //        HMBillPaymentSettlementTmp.LineStatus = HMInvoiceLineStatus::Denied;
            //        ttsbegin;
            //        HMBillPaymentSettlementTmp HMBillPaymentSettlementTmp2;
            //        select forupdate HMBillPaymentSettlementTmp2
            //                where HMBillPaymentSettlementTmp2.RecId == HMBillPaymentSettlementTmp.RecId;
            //        HMBillPaymentSettlementTmp2.update();
            //        ttscommit;
            //        //HMBillPaymentSettlementTmp.reread();
            //        HMBillPaymentSettlementTmp_ds.executeQuery();

            //    }
            //}
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMBillPaymentSettlementTmp_CoPayAmount</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                element.paymentLineModified(HMBillPaymentSettlementTmp);
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMBillPaymentSettlementTmp_Deductible</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                element.paymentLineModified(HMBillPaymentSettlementTmp);
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PatientPayment</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            if(ret)
            {
                if(this.realValue() > CustTransOpen.AmountCur)
                {
                    warning("@MAZ10507");
                    patientAmountMap.remove(CustTransOpen.RecId);
                    PatientPayment.realValue(0.00);
                    return ret;
                }
                if(patientAmountMap.exists(CustTransOpen.RecId))
                {
                    patientAmountMap.remove(CustTransOpen.RecId);
                }
                patientAmountMap.insert(CustTransOpen.RecId,this.realValue());
                element.calculateBalance();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HMBillPaymentPosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            
            if(element.validatePost())
            {


                super();
                CustTransOpenLine_ds.executeQuery();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustTrans</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EODProcessed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMMerchantDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSchedId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpen</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpen</Name>
			<Table>CustTransOpen</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDiscNoticeDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealizedReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastInterestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PossibleCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledLinePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledTotalAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementPriorityCashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>custTransIdRef</Name>
			<Table>CustTransIdRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRefType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>CustTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>TransRecIdIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpenLine</Name>
			<Table>CustTransOpenLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLineIdRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpen</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMBillPaymentSettlementTmp</Name>
			<Table>HMBillPaymentSettlementTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AdditionalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountPaid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BalanceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoInsuranceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoPayAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deductible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EOBCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMEOBReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInvoiceNextAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientAmtMst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpenLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMClaimTable</Name>
			<Table>HMClaimTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ClaimID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLastEdiGeneratedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMPatientChargeEntryTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatient</Name>
			<Table>HMPatient</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgeInDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgeInMonths</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BloodGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BoxId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CallNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CanContact</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CivicAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactFirst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPhoneMobile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CriticalMedicalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirPartyRelationshipNextToKin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirPartyTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DrivingLicenseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Employer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Employment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentLogisticsLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmploymentPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncounterActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Executive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutiveProtocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtraCoveredByClient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FamilyPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Field1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormProvision</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Gender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasCareBookRegistration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmEthnicOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmLanguageCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HIPAA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HipaaDateAcknowledge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAgeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBookingOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCalcBirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaffFamilyDoctor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMHijriDateOfBirth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMHijriExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMIdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLaboratories</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNationalIdExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNationalIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientAllergyInvestigationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientRestriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPharmacy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMProfession</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRaceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMReferringPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Image</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InClinicFileLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAuthorized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOnHold</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOutstanding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsVIP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsAddressCountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportExpireDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientHighlights</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalChartNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PictureRefused</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Pilot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreEmployment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreEmploymentProtocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrefModeOfCommunication</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvincialHealthCardExpDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvincialHealthCardNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RAMQ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableMerge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTablePatientDeactivate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecallDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferringPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefusedToProvidePicture</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefuseToSign</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefuseToSignAcknowledge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegisteredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Relationship</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RISRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Salutation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelfEmployed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmBusRelTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SocialSecurityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTable</Name>
			<Table>CustTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Affiliated_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgencyLocationCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentCancellationFees</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorityOffice_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCustPaymIdTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthCountyCode_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthPlace_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClearingPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBookingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client_Inactive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNAE_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegister</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterInsetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterSection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyChainId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdSiret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNAFCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsDay_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationVoid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardCVC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditRating</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Curp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustClassificationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeCollectionFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeInterestCharges</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFinalUser_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable_Parent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTradingPartnerCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWhtContributionType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWriteOffRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EinvoiceEANNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceRegister_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryCertificateRequired_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportSales_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressBillOfLading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FactoringAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FederalComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FedNonFedIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocType_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignerId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignResident_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateIncomingFiscalDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeAccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeCollectionletter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeFreeTextInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeInterestNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeProjInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAccountQualification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientAccountQualification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientExtraPaidBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientGenericNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientInvoicePrint</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClientM123InstallmentPayments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCollectionGrp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustBadCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustomerSince</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCustOnHold</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMEmployeeNumberRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMExtrasPaidByCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMGOPRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMIsPrePaymentAllowedForCust</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMJobTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMLateCancellationNoShowCovered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMM123InstallmentPayments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitAssigned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitHandling</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOverridePatientNameInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPONum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPONumberRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPOValidUntil</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMScope</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMTaxExempt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSContributor_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IENum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>INSSCEI_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAutoCreateOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IRS1099CIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsExternallyMaintained</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGurantor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsResident_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssueOwnEntryCertificate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssuerCountry_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPaymTransCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainContactWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryCreditLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryVatDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedParent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedRoot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NIT_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderEntryDeadlineGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OurAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackageDepositExcempt_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackMaterialFeeLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyCountry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNo_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientMerged</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentReference_EE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAccrued</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateTMAGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PresenceType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegNum_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResidenceForeignCountryRegionId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDCaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDPalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDistrictId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierFuelSurcharge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInscription_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubsegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaNumber_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaPISCOFINS_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Suframa_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBorderNumber_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGSTReliefGroupHeading_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThresholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usePurchRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WebSalesOrderDisplay</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<JoinSource>HMPatient</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustInvoiceTrans</Name>
			<Table>CustInvoiceTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetBookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillingCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoInsuranceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CoPayAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegionOfShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLineIdRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deductible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMDrugReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmountTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmountTaxMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineCreationSequenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OLAPCostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderLineReference_NO</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQtyPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProtocolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainBefore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnArrivalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnClosedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDispositionCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseChargeApplies_UK</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseChargeSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseCharge_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversedRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatLineAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StockedProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDiscMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAutogenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpenLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientChargeEntryTable</Name>
			<Table>HMPatientChargeEntryTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeEntryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCaseAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCase</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCase</Name>
			<Table>HMCase</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AddmisionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdmittingDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Clinic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRMCaseRefID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CSVFileGenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiagnosisandProcedureCodeQualifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DischargeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentControlNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecia</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecib</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ecic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ECode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBuildingUnit_Room</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMFinancialClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMParentCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPPSCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRoomType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperatingPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherPhysician1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientReasonC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PointOfOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAdmittingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalDiagnosisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrincipalProcedureDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remarks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>serviceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfAdmission</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMResourceSchedulingAppointment</Name>
			<Table>HMResourceSchedulingAppointment</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdmissionOrderSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentConfirmationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentEndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AppointmentTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArrivalTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Bed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookingNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChartPrepared</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChiefComplaint</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientBillingLogisticsPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientReportLogisticsPostalAddres</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CopyOfEmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTokenRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CriticalMedicalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DispositionComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DispositionFollowUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Duration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmployeeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EODProcessed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinanceBillingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinanceBillingStatus_Client</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForceBookingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreeFollowUpAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GOPNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAnesthesiaType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMAppointmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMBookingOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCancellationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClinicStaff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMConfirmationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceContractClassOrPlans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitAdmissionWard</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnitServiceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientInsurance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientVisit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMRecurrentApptDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceMaster_PerformingDoctor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingPlanningObject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMScheduleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMTreatmentClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMWaitingList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportedNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclinicNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompleteInfoLog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompleteReserveAppointmentTaskGeneratd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDelayed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHotspot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOnlineAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverBooked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReconfirmEmailSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSpecificConsultant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTable_AdvancePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientContact</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientRequestor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalChartRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PONum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Referral</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportSentContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestorContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RescheduleWithoutConfirmation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResultExpectedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResultVisitStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SendEmailTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmsSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysOutgoingEmailTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WalkinPatient</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCase</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCaseTrans</Name>
			<Table>HMCaseTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlternatDrugStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlternatePrimaryCaseTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRMOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deductible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleActual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductibleCollectionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductiblePercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductiblePerUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Discount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMClaimTableSetup_PatientStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMItemCptPcsCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMOrganizationalUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMResourceSchedulingAppointmentInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMServiceStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Instructions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsuranceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDim</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPPS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCaseTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PharmacyBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthorizationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreAuthValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Protocol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelatedAppointmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainingBillAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Urgency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustInvoiceTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMPatientChargeEntryLine</Name>
			<Table>HMPatientChargeEntryLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AuthorizationResponse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Charge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CPTCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Diagnosis4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Fee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMCaseTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMChargeEntryLineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Modifier4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PatientResponsibility</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerformingResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlaceOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcedureOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TODate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Units</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffReason</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HMCaseTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HMCustInvoiceBatch</Name>
			<Table>HMCustInvoiceBatch</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HMInsuranceCarrierBatchDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpen</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS58091</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>MainInstruction</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<FontSize>13</FontSize>
						<ForegroundColor>ScrollBar</ForegroundColor>
						<Style>MainInstruction</Style>
						<Text>@SYS58091</Text>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Body</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Body_Top</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentInfo</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PaymentInfo_Account</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>4</VerticalSpacing>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>AccountGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>4</VerticalSpacing>
												<VerticalSpacingMode>Fixed</VerticalSpacingMode>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CustAccount</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>CustAccount</ExtendedDataType>
														<Label>@MAZ10504</Label>
														<Mandatory>Yes</Mandatory>
													</AxFormControl>
												</Controls>
												<Columns>3</Columns>
												<Columnspace>0</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>BatchGroup</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>4</VerticalSpacing>
												<VerticalSpacingMode>Fixed</VerticalSpacingMode>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>BatchNumber</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ArrayIndex>1</ArrayIndex>
														<Label>@MAZ6995</Label>
													</AxFormControl>
												</Controls>
												<Columns>4</Columns>
												<Columnspace>0</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Columnspace>0</Columnspace>
										<ColumnspaceMode>Fixed</ColumnspaceMode>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PaymentInfo_TransDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>4</VerticalSpacing>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>TransDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Label>@SYS75144</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PaymentInfo_PaymMode</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>4</VerticalSpacing>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PaymMode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>CustPaymMode</ExtendedDataType>
												<Label>@MAZ6382</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PaymReference</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS22514</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<Columnspace>0</Columnspace>
										<ColumnspaceMode>Fixed</ColumnspaceMode>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PaymentInfo_Total</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>AmountDistributeGroup</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>PaymAmountCur</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>715827882</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS114317</HelpText>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@SYS53072</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>DistributeAmount</Name>
														<Type>Button</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS80080</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Columns>2</Columns>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TotalSettlePaymAmountCur</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS126697</HelpText>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Border>None</Border>
												<Label>@SYS77911</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>RemainingPaymAmountCur</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS126698</HelpText>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Border>None</Border>
												<Label>@SYS78228</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Caption>@MAZ10508</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ERA</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FileOpen</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>FilenameOpen</ExtendedDataType>
										<Label>Select file</Label>
									</AxFormControl>
									<AxFormControl>
										<Name>FileUpload1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FormControlExtension>
											<Name>FileUpload</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>fileTypesAccepted</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>fileNameLabel</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>browseText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>style</Name>
													<Type>Enum</Type>
													<TypeName>FileUploadStyle</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>baseFileUploadStrategyClassName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>imageMaxWidth</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>imageMaxHeight</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CheckERA</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>Verify EOB</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DateFilter</Name>
										<ElementPosition>1879048189</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>FromDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS312575</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Label>@MAZ1037</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>ToDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS312576</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Label>@MAZ7063</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>DateSearch</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1717986916</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@MAZ7064</HelpText>
												<Skip>Yes</Skip>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS60181</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
										<Caption>Date filter</Caption>
										<Style>CustomFilter</Style>
									</AxFormControl>
								</Controls>
								<Caption>Select ERA</Caption>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Body_Invoice</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>InvoiceActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>InvoiceActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>InvoiceActionButton</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuButtonControl">
														<Name>MarkAllInvoiceLine</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@MAZ10505</HelpText>
														<Type>MenuButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Visible>No</Visible>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>None</Name>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@MAZ10536</HelpText>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Text>@MAZ10506</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>WriteOff</Name>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@MAZ10510</HelpText>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Text>@SYS316545</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>TransferToPatient</Name>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@MAZ10509</HelpText>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Text>@MAZ7473</Text>
															</AxFormControl>
														</Controls>
														<Text>@MAZ10494</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDropDialogButtonControl">
														<Name>HMPaymentCenterApplyPayments</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>DropDialogButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustTransOpen</DataSource>
														<MenuItemName>HMPaymentCenterApplyPayments</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>HMBillPaymentPostingCreditNote</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustTrans</DataSource>
														<MenuItemName>HMBillPaymentPostingCreditNote</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>OpenInvoice_Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IsMarkedForSettlement</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>306783378</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS24864</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editIsMarkedForSettlement</DataMethod>
										<DataSource>CustTransOpen</DataSource>
										<Label>@SYS19120</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReferenceId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>460175067</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS107402</HelpText>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransRefId</DataField>
										<DataSource>custTransIdRef</DataSource>
										<Label>@SYS107394</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReferenceType</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS107403</HelpText>
										<Skip>Yes</Skip>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransRefType</DataField>
										<DataSource>custTransIdRef</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>caseNo</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>caseNo</DataMethod>
										<DataSource>HMClaimTable</DataSource>
										<Label>Case no</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMClaimTable_ClaimID</Name>
										<ElementPosition>818089008</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ClaimID</DataField>
										<DataSource>HMClaimTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTable_AccountNum</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>patientChartNum</DataMethod>
										<DataSource>HMPatientChargeEntryTable</DataSource>
										<Label>@MAZ4947</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HMInvoiceNextAction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editHMInvoiceNextAction</DataMethod>
										<DataSource>CustTransOpen</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Company</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS108571</HelpText>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>dataAreaId</DataField>
										<DataSource>CustTransOpen</DataSource>
										<Label>@SYS10499</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Voucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1380525201</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountNum</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS108572</HelpText>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>CustTransOpen</DataSource>
										<Label>@SYS24500</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DueDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1687308579</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>CustTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountAvailableToPay</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS114319</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>CustTransOpen</DataSource>
										<Label>@SYS114325</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Currency</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1994091957</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS114320</HelpText>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>CustTransOpen</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<DataSource>CustTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Body_InvoiceLIne</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>InvoiceLinesGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>HMPatientChargeEntryLine_PerformedDate</Name>
										<ElementPosition>278893980</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FromDate</DataField>
										<DataSource>HMPatientChargeEntryLine</DataSource>
										<Label>@SYS88746</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>HMPatientChargeEntryLine_CPTCodes</Name>
										<ElementPosition>418340970</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>HMPatientChargeEntryLine</DataSource>
										<Label>Code</Label>
										<ReferenceField>CPTCodes</ReferenceField>
										<ReplacementFieldGroup>Code</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>getitemname</Name>
										<ElementPosition>557787960</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>getitemname</DataMethod>
										<DataSource>HMPatientChargeEntryLine</DataSource>
										<Label>Description</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_AmountCur</Name>
										<ElementPosition>697234950</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_ExpectedAmount</Name>
										<AllowEdit>No</AllowEdit>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExpectedAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_AdditionalAmount</Name>
										<ElementPosition>766958445</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AdditionalAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_AmountMST</Name>
										<ElementPosition>836681940</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountMST</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<Label>Approved amount</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HMEOBReasons_Code</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EOBCode</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<Label>EOB Code</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HMBillPaymentSettlementTmp_LineStatus</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineStatus</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LineStatus</Name>
										<Type>ComboBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<EnumType>HMInvoiceLineStatus</EnumType>
										<Label>Line status</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>HMBillPaymentSettlementTmp_HMEOBReasonCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<Label>Transaction code</Label>
										<ReferenceField>HMEOBReasonCode</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_CoPayAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1115575920</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>CoPayAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_CoInsuranceAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1255022910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CoInsuranceAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_Deductible</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1394469900</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>Deductible</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<Label>Deductible</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_AmountPaid</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>AmountPaid</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_TransferAmount</Name>
										<ElementPosition>1673363880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_WriteOffAmount</Name>
										<ElementPosition>1812810870</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WriteOffAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>HMBillPaymentSettlementTmp_BalanceAmount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>BalanceAmount</DataField>
										<DataSource>HMBillPaymentSettlementTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>HMBillPaymentSettlementTmp</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PatientPaymentGroup</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PatientPayment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS81847</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@MAZ6569</Caption>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>HMBillPaymentPosting</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>HMBillPaymentPosting</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>