<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMDailyCensusInquiry</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMDailyCensusInquiry
{
    HMDailyCensusTmp    hmDailyCensusTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getHMDailyCensusTmp</Name>
				<Source><![CDATA[
    public HMDailyCensusTmp getHMDailyCensusTmp()
    {
        return hmDailyCensusTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processInquiry</Name>
				<Source><![CDATA[
    public void processInquiry()
    {
        HMCase                          hmCase;
        HMPatient                       hmPatient;
        HMClaimTableSetup               claimTableSetup;
        HMProcedureCodeMaster           procedureCodeMaster;
        RefRecId                        caseRecId;
        StartDateTime                   startDateTime;
        EndDateTime                     endDateTime;
    
        startDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 0);
        endDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), timeMax());
    
        while select * from hmCase
            where hmCase.HMCaseType != HMCaseType::OutPatient
               && hmCase.DischargeDate == DateTimeUtil::minValue()
    
            join hmPatient
                where hmCase.HMPatient == hmPatient.RecId
        {
            hmDailyCensusTmp.Room = HMBuildingUnit::find(hmCase.HMBuildingUnit_Room).Code;
            hmDailyCensusTmp.PatientName = CustTable::findRecId(hmPatient.CustTable).name();
            hmDailyCensusTmp.MRNo = CustTable::findRecId(hmPatient.CustTable).AccountNum;
            hmDailyCensusTmp.Age = str2int(hmPatient.patientAgeNew());
            hmDailyCensusTmp.HMCaseNo = hmCase.CaseNo;
            hmDailyCensusTmp.AdmissionDateTime = hmCase.AddmisionDate;
            hmDailyCensusTmp.DischargeDateTime = hmCase.DischargeDate;
            hmDailyCensusTmp.FinancialClass = hmCase.financialClass();
            hmDailyCensusTmp.PatientStatus = HMClaimTableSetup::findByRecEnum(hmCase.HMPatientStatus, HMClaimEnumList::PatientStatus).Code;
            hmDailyCensusTmp.HIPAA = hmPatient.HIPAA;
            hmDailyCensusTmp.Physician = HMResourceMaster::find(hmCase.HMResourceMaster).Description;
            hmDailyCensusTmp.insert();
        }
    
    
         //while select * from patientChargeEntryLine
            //join caseTrans
                //where patientChargeEntryLine.HMCaseTrans == caseTrans.RecId
                   //&& patientChargeEntryLine.createdDateTime >= startDateTime
                   //&& patientChargeEntryLine.createdDateTime <= endDateTime
                //join hmCase
                    //where caseTrans.HMCase == hmCase.RecId
                    //join hmPatient
                        //where hmCase.HMPatient == hmpatient.RecId
                           ////
        //{
            //recCount++;
            //hmBatchServiceChargeEntryTmp.SNo = recCount;
            //hmBatchServiceChargeEntryTmp.HMCaseNo = hmCase.CaseNo;
            //hmBatchServiceChargeEntryTmp.PatientName = CustTable::findRecId(hmPatient.CustTable).name();
            //hmBatchServiceChargeEntryTmp.PatientStatus = HMClaimTableSetup::findByRecEnum(hmCase.HMPatientStatus, HMClaimEnumList::PatientStatus).Code;
            //hmBatchServiceChargeEntryTmp.FromDate = patientChargeEntryLine.FromDate;
            //hmBatchServiceChargeEntryTmp.Location = HMOrganizationalUnit::find(caseTrans.HMOrganizationalUnit).Description;
            //hmBatchServiceChargeEntryTmp.Physician = HMResourceMaster::find(hmCase.HMResourceMaster).Description;
            //hmBatchServiceChargeEntryTmp.Itemid = caseTrans.ItemId;
            //hmBatchServiceChargeEntryTmp.ItemName = caseTrans.ItemName;
            //hmBatchServiceChargeEntryTmp.CPTCode = HMProcedureCodeMaster::find(patientChargeEntryLine.CPTCodes).Code;
            //hmBatchServiceChargeEntryTmp.Qty = caseTrans.Qty;
            //hmBatchServiceChargeEntryTmp.TotalAmount = caseTrans.TotalAmount;
            //hmBatchServiceChargeEntryTmp.insert();
        //}
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>