<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMDropDownService</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMDropDownService
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillEnumValues</Name>
				<Source><![CDATA[
    public List fillEnumValues(EnumId _enum, boolean _fillColor = false)
    {
        DictEnum    enum = new DictEnum(_enum);
        int         i;
        HMDropDownContract contract;
        List list = new List(Types::Class);
        int   red, green, blue;
    
        for (i = 0; i < enum.values(); i++)
        {
            contract = new HMDropDownContract();
    
            contract.parmDescription(enum.index2Label(i));
            contract.parmID(int2str(enum.index2Value(i)));
    
            if(i == 0 && _enum != enumNum(HMNationalIdType))
            {
                contract.parmIsDefault(true);
            }
    
            if(_enum == enumNum(HMNationalIdType) && i==1)
            {
                contract.parmIsDefault(true);
            }
    
            if(_fillColor)
            {
                [red,green,blue] = WinAPI::RGBint2Con(HMColourCodingParameters::findByElementIdAndValue(_enum,enum.index2Name(i)).ColourCode);
                contract.parmColorHex(rgb2Hex(red,green,blue));
            }
    
            list.addEnd(contract);
        }
    
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActivityStatus</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMDropDownContract))]
    public List getActivityStatus(HMActivityStatus _status)
    {
        return this.fillEnumValues(enumNum(HMActivityStatus), true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentTypes</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMDropDownContract))]
    public List getDocumentTypes()
    {
        DocuType    docuType;
        HMDropDownContract contract;
        List list = new List(Types::Class);
    
        while select * from docuType
        {
            contract = new HMDropDownContract();
    
            contract.parmDescription(docuType.Name);
            contract.parmID(docuType.TypeId);
    
            list.addEnd(contract);
        }
    
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGender</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMDropDownContract))]
    public List getGender()
    {
        return this.fillEnumValues(enumNum(HcmPersonGender));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNationalIdType</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMDropDownContract))]
    public List getNationalIdType()
    {
        return this.fillEnumValues(enumNum(HMNationalIdType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSearchPatientFilter</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMDropDownContract))]
    public List getSearchPatientFilter()
    {
        return this.fillEnumValues(enumNum(HMSearchPatientBy));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>