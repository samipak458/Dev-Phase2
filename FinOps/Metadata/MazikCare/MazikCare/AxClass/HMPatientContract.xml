<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPatientContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
class HMPatientContract
{
    RefRecId    patientRecId;
    str         apptTime,apptType,apptNum,arrivalTime, apptDate, patientBalanceStatus, patientImage, physicianImage, patientGender, patientAge, patientAddress, patientCompany,
                patientEmail, patientPhone, patientSkype, patientName, physicianName , physicianPhone, physicianEmail, physicianSkype,protocol,
                physicianAddress, patientCategory, patientBirthdate, patientFileNumber, patientClient,apptClientNumber,apptClientBillingAddress, patientPhysicalFileNumber;

    int         careBook, isAuthorized, isOutstanding, isOnHold;
    boolean     refusedToProvidePicture;

    Amount      patientBalanceAmount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAppointmentDate</Name>
				<Source><![CDATA[
    [ DataMemberAttribute('PatientAppointmentDate')]
    public str parmAppointmentDate(str _apptDate = apptDate)
    {
        apptDate = _apptDate;
    
        return apptDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAppointmentTime</Name>
				<Source><![CDATA[
    [ DataMemberAttribute('PatientAppointmentTime')]
    public Description255 parmAppointmentTime(Description255 _apptTime = apptTime)
    {
        apptTime = _apptTime;
    
        return apptTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptNum</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptNum(Description255 _apptNum = apptNum)
    {
        apptNum = _apptNum;
    
        return apptNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptType</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptType(Description255 _apptType = apptType)
    {
        apptType = _apptType;
    
        return apptType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArrivalTime</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmArrivalTime(Description255 _arrivalTime = arrivalTime)
    {
        arrivalTime = _arrivalTime;
    
        return arrivalTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCareBookRegistration</Name>
				<Source><![CDATA[
    [DataMemberAttribute("CareBookRegistration")]
    public int parmCareBookRegistration(int _CareBook = careBook)
    {
        careBook = _CareBook;
    
        return careBook;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClient</Name>
				<Source><![CDATA[
    [DataMemberAttribute("Client")]
    public str parmClient(str _client = patientClient)
    {
        patientClient = _client;
    
        return patientClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientBillingAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ClientBillingAddress")]
    public str parmClientBillingAddress(str _apptClientBillingAddress = apptClientBillingAddress)
    {
        apptClientBillingAddress = _apptClientBillingAddress;
    
        return apptClientBillingAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ClientNumber")]
    public str parmClientNumber(str _apptClientNumber = apptClientNumber)
    {
        apptClientNumber = _apptClientNumber;
    
        return apptClientNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAuthorized</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientisAuthorized")]
    public int parmIsAuthorized(int _IsAuthorized = isAuthorized)
    {
        isAuthorized = _IsAuthorized;
    
        return isAuthorized;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsOnHold</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientIsOnHold")]
    public int parmIsOnHold(int _IsOnHold = isOnHold)
    {
        isOnHold = _IsOnHold;
    
        return isOnHold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsOutstanding</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientisOutstanding")]
    public int parmIsOutstanding(int _IsOutstanding = isOutstanding)
    {
        isOutstanding = _IsOutstanding;
    
        return isOutstanding;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute('PatientAddress')]
    public str parmPatientAddress(str _patientAddress = patientAddress)
    {
        patientAddress = _patientAddress;
    
        return patientAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientAge</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientAge")]
    public str parmPatientAge(str _age = patientAge)
    {
        patientAge = _age;
    
        return patientAge;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientBalanceAmount</Name>
				<Source><![CDATA[
    [DataMemberAttribute('PatientBalanceAmount')]
    public Amount parmPatientBalanceAmount(Amount _patientBalanceAmount = patientBalanceAmount)
    {
        patientBalanceAmount = _patientBalanceAmount;
    
        return patientBalanceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientBalanceStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientBalanceStatus")]
    public str parmPatientBalanceStatus(str _patientBalanceStatus = patientBalanceStatus)
    {
        patientBalanceStatus = _patientBalanceStatus;
    
        return patientBalanceStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientBirthdate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientBirthdate")]
    public str parmPatientBirthdate(str _patientBirthdate = patientBirthdate)
    {
        patientBirthdate = _patientBirthdate;
    
        return patientBirthdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientEmail</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientEmail")]
    public str parmPatientEmail(str _patientEmail = patientEmail)
    {
        patientEmail = _patientEmail;
    
        return patientEmail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientFileNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientFileNumber")]
    public str parmPatientFileNumber(str _patientFileNumber = patientFileNumber)
    {
        patientFileNumber = _patientFileNumber;
    
        return patientFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientGender</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientGender")]
    public str parmPatientGender(str _patientGender = patientGender)
    {
        patientGender = _patientGender;
    
        return patientGender;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientImage</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientImage")]
    public str parmPatientImage(str _patientImage = patientImage)
    {
        patientImage = _patientImage;
    
        return patientImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientName</Name>
				<Source><![CDATA[
    [ DataMemberAttribute('PatientName')]
    public str parmPatientName(str _patientName = patientName)
    {
        patientName = _patientName;
    
        return patientName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientPhone</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientPhone")]
    public str parmPatientPhone(str _patientPhone = patientPhone)
    {
        patientPhone = _patientPhone;
    
        return patientPhone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientPhysicalFileNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("patientPhysicalFileNumber")]
    public str parmPatientPhysicalFileNumber(str _patientPhysicalFileNumber = patientPhysicalFileNumber)
    {
        patientPhysicalFileNumber = _patientPhysicalFileNumber;
    
        return patientPhysicalFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientRecId")]
    public RefRecId parmPatientRecId(RefRecId _patientRecId = patientRecId)
    {
        patientRecId = _patientRecId;
    
        return patientRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientSkype</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PatientSkype")]
    public str parmPatientSkype(str _patientSkype = patientSkype)
    {
        patientSkype = _patientSkype;
    
        return patientSkype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianAddress</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianAddress")]
    public str parmPhysicianAddress(str _physicianAddress = physicianAddress)
    {
        physicianAddress = _PhysicianAddress;
    
        return physicianAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianEmail</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianEmail")]
    public str parmPhysicianEmail(str _physicianEmail = physicianEmail)
    {
        physicianEmail = _physicianEmail;
    
        return physicianEmail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianImage</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianImage")]
    public str parmPhysicianImage(str _physicianImage = physicianImage)
    {
        physicianImage = _physicianImage;
    
        return physicianImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianName</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianName")]
    public str parmPhysicianName(str _physicianName = physicianName)
    {
        physicianName = _physicianName;
    
        return physicianName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianPhone</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianPhone")]
    public str parmPhysicianPhone(str _physicianPhone = physicianPhone)
    {
        physicianPhone = _physicianPhone;
    
        return physicianPhone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhysicianSkype</Name>
				<Source><![CDATA[
    [DataMemberAttribute("PhysicianSkype")]
    public str parmPhysicianSkype(str _physicianSkype = physicianSkype)
    {
        physicianSkype = _physicianSkype;
    
        return physicianSkype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProtocol</Name>
				<Source><![CDATA[
    [DataMemberAttribute("Protocol")]
    public str parmProtocol(str _protocol = protocol)
    {
        protocol = _protocol;
    
        return protocol;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefusedToProvidePicture</Name>
				<Source><![CDATA[
    [DataMemberAttribute("RefusedToProvidePicture")]
    public boolean  parmRefusedToProvidePicture(boolean _refusedToProvidePicture = refusedToProvidePicture)
    {
        refusedToProvidePicture = _refusedToProvidePicture;
    
        return refusedToProvidePicture;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populatePatientContract</Name>
				<Source><![CDATA[
    void populatePatientContract(HMPatient _patient,HMResourceSchedulingAppointment _appointment = null)
    {
        //CustTable       patientClientCust;
        CustTable       patientCust;
        str             patientImagestr;
        HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObject;
        HMResourceMaster hMResourceMaster;
        HcmWorker hcmWorker;
        VendTable vendTable;
    
        this.parmPatientRecId(_patient.RecId);
        this.parmPatientAge(_patient.patientAgeInYears());
        this.parmCareBookRegistration(_patient.HasCareBookRegistration);
        this.parmPatientAddress(_patient.getPrimaryContact());
        this.parmPatientBirthdate(date2str(_patient.getBirthDate(), 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4));
    
        this.parmPatientEmail(_patient.getPatientEmailAddress());
        this.parmPatientPhone(_patient.getPatientPhone());
        this.parmPatientSkype(_patient.getPatientSkype());
    
        this.parmPatientName(_patient.patientName());
        this.parmPatientGender(enum2str(_patient.Gender));
    
        this.parmIsOnHold(_patient.IsOnHold);
        this.parmIsAuthorized(_patient.IsAuthorized);
        this.parmIsOutstanding(_patient.IsOutstanding);
        this.parmPatientPhysicalFileNumber(_patient.PhysicalChartNumber);
    
        this.parmPatientBalanceAmount(_patient.outstandingBalance());//_patient.outstandingBalance()
    
            if(this.parmPatientBalanceAmount() > 0.00){
                if(_patient.IsAuthorized == 1){
                    this.parmPatientBalanceStatus("authorized");
                }
                else{
                    this.parmPatientBalanceStatus("outstanding");
                }
            }else{
                this.parmPatientBalanceStatus("clear");
            }
    
    
    
        //select firstOnly patientClientCust
        //where patientClientCust.RecId == _patient.Client && patientClientCust.CustType == 4;
    
        //if(patientClientCust)
       // {
            //this.parmClient(patientClientCust.name());
       // }
        if(_appointment)
        {
            this.parmApptNum(_appointment.AppointmentNumber);
            this.parmApptType(HMResourceSchedulingTypeCode::find(_appointment.HMResourceSchedulingTypeCode).Description);
            this.parmClient(_appointment.clientName());
            this.parmClientNumber(_appointment.Client);
            if(_appointment.ClientBillingLogisticsPostalAddress)
            {
                this.parmClientBillingAddress(LogisticsPostalAddress::findRecId(_appointment.ClientBillingLogisticsPostalAddress).Address);
            }
            //Evaluate current Physician is Vendor or Employee,
            hMResourceSchedulingPlanningObject = HMResourceSchedulingPlanningObject::find(_appointment.HMResourceSchedulingPlanningObject);
            hMResourceMaster = HMResourceMaster::find(HMResourceSchedulingPlanningObject.HMResourceMaster);
    
    
            if(hMResourceMaster.Type == HMResourceType::Vendor)
            {
                select vendTable
                where vendTable.RecId == hMResourceMaster.RefRecId;
                this.parmPhysicianName(vendTable.name());
            }
            else if(hMResourceMaster.Type == HMResourceType::Employee)
            {
                hcmWorker = HcmWorker::find(hMResourceMaster.RefRecId);
                if(hcmWorker)
                {
                this.parmPhysicianImage(HMWorkerImageHelper::getWorkerImageBase64Encode(hcmWorker.RecId));
                this.parmPhysicianName(hcmWorker.name());
                }
            }
            else if(hMResourceMaster.Type != HMResourceType::Employee && hMResourceMaster.Type != HMResourceType::Vendor)
            {    //Resource = Device Case
                 this.parmPhysicianName(_appointment.getAppointmentResource());
            }
    
    
    
        }
    
    
    
        select firstOnly patientCust
        where patientCust.RecId == _patient.CustTable;
    
        if(patientCust)
        {
            this.parmPatientFileNumber(patientCust.AccountNum);
            this.parmPatientAddress(patientCust.address());
        }
    
        //patientImagestr = HMWorkerImageHelper::getPatientImage(_patient);
    
        this.parmPatientImage(patientImagestr);
    
        this.parmRefusedToProvidePicture(_patient.RefusedToProvidePicture);
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>