<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMAppointmentSchedulingService</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMAppointmentSchedulingService
{
    HMAppointmentContract                 appointmentContract;
    HMPatient                             patient;
    HMResourceSchedulingAppointment       appointment;
    HMResourceSchedulingAppointment       appointmentByClinic;
    HMResourceSchedulingPlanningObject    hMResourceSchedulingPlanningObjectByClinic;
    HMOrganizationalUnit                  hmOrganizationalUnitByClinic;
    HMResourceSchedulingAppointmentInvent appointmentService;
    HMParameters                          params;

    List listAppointments;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAllAppointmentStatuses</Name>
				<Source><![CDATA[
    [AifCollectionTypeAttribute('return', Types::String)]
    public Map getAllAppointmentStatuses()
    {
        int i;
    
        Map         appointmentStatusValues = new Map(Types::String, Types::String);
        //DictEnum    enum                    = new DictEnum(enumName2Id("HMResourceSchedulingAppointmentStatus"));
    
        //for (i=0; i < enum.values(); i++)
        //{
        //    appointmentStatusValues.insert(enum.index2Label(i), int2str(enum.index2Value(i)));
        //}
    
        return appointmentStatusValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppointmentDetails</Name>
				<Source><![CDATA[
    public HMAppointmentContract getAppointmentDetails(recid _appointmentRecId)
    {
        HMAppointmentContract object;
    
        //select * from appointment
        //    where appointment.recid == _appointmentRecId;

        //object = new HMAppointmentContract();
        //object.populateAppointmentContract(appointment);
    
        return object;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppointmentsbyDate</Name>
				<Source><![CDATA[
    [AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentContract))]
    public List getAppointmentsbyDate(int _pageNumber, date _startDate, date _endDate)
    {
        //Query query = new Query();
        //QueryBuildDataSource qbds;
        //QueryRun qr;
        //Tableid tableId;
        //Common common;
        //tableid     = tablename2id('HMResourceSchedulingAppointment');

        //qbds = query.addDataSource(tableid);

        //qbds.addOrderByField(fieldname2id(tableid,'RecId'));
        ////  qbds.addRange(fieldNum(HMResourceSchedulingAppointment, appointmentDate)).value(.value(">=" + _startDate);
        ////  qbds.addRange(fieldNum(HMResourceSchedulingAppointment, appointmentDate)).value("<=" + _endDate);

        //qr = new QueryRun(Query);
        //qr.literals(true);

        //qr.enablePositionPaging(true);
        //qr.addPageRange(_pageNumber,2);
    
        listAppointments = new List(Types::Class);
    
        //while (qr.next())
        //{
        //    appointment = qr.getNo(1);
        //    appointmentContract = new HMAppointmentContract();
        //    appointmentContract.parmApptdate(date2strUsr(appointment.AppointmentDate));
        //    appointmentContract.parmApptnum(appointment.AppointmentNumber);
        //    appointmentContract.parmApptRecId(int642str(appointment.RecId));
        //    appointmentContract.parmApptStatus(enum2str(appointment.AppointmentStatus));
        //    appointmentContract.parmApptTime(appointment.displayTimeWithoutSec());
        //    appointmentContract.parmApptType(HMResourceSchedulingTypeCode::find(appointment.HMResourceSchedulingTypeCode).Description);
        //    appointmentContract.parmClinic(appointment.showClinic());
        //    appointmentContract.parmPatientFileNumber(appointment.getPatientChartNum());
        //    appointmentContract.parmPatientName(appointment.getPatientName());
        //    appointmentContract.parmPatientRecId(int642str(appointment.HMPatient));
        //    appointmentContract.parmApptConfrmStatus(enum2str(appointment.HMConfirmationStatus));
        //    listAppointments.addEnd(appointmentContract);
        //}
    
        return listAppointments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClinicsList</Name>
				<Source><![CDATA[
    [AifCollectionTypeAttribute('return', Types::Class, classstr(HMClinicDataContract))]
    public List getClinicsList(RecId _hmResourceMasterRecId)
    {
        HMOrganizationalUnit     hmOrganizationalUnitlocalForChildCheck;
        HMOrganizationalUnit     hmOrganizationalUnitForTree;
        HMClinicDataContract     hMClinicDataContract;
        HMSubClinicDataContract  hMSubClinicDataContract;
        List clinicList = new List(Types::Class);
        List subClinicList;
    
        RecId defaultClinicRecId;
    
        //defaultClinicRecId = this.getDefaultClinicRecId(_hmResourceMasterRecId);


        //while select HMOrganizationalUnit, RecId, Description from hmOrganizationalUnitForTree
        //    where hmOrganizationalUnitForTree.FileLocationType == HMFileLocationType::Clinic

        //{
        //    hMClinicDataContract = new HMClinicDataContract();
        //    hMClinicDataContract.parmClinicName(hmOrganizationalUnitForTree.Description);
        //    hMClinicDataContract.parmClinicRecId(hmOrganizationalUnitForTree.RecId);
        //    if(hmOrganizationalUnitForTree.RecId == defaultClinicRecId)
        //    {
        //        hMClinicDataContract.parmIsDefault(true);
        //    }
        //    else
        //    {
        //         hMClinicDataContract.parmIsDefault(false);
        //    }

        //    subClinicList  = new List(Types::Class);


        //    clinicList.addEnd(hMClinicDataContract);
        //}
    
        return clinicList;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultClinicRecId</Name>
				<Source><![CDATA[
    //[ AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentDashboardContract))]
    //public HMAppointmentDashboardContract getDashboardAppointments(int _fieldId, str _search,str _userType,str _drResourceMasterRecid,recid _clinicRecId, str _clinicType)
    //{
    //    int         counter;
    //    int         pageSize;
    //    boolean     shouldInsertAppointment;
    //    str         resource;
    //    int         hourTime;
    //    str         valueSearch;
    //    RecId       drResourceMasterRecid;
    //    HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObjectRange;
    //    HMResourceMaster hMResourceMasterRange;
    //    timeofday theTimeOfDay;
    //    str timeStr;
    //    str timeStrStart;
    //    str timeStrEnd;
    //    str timeStrCombined;
    //    str balanceStatusKey;
    //    Amount balanceStatus;
    //    boolean clinicRangeApplied = false;

    //    Query   query           = new Query();
    //    Map     GroupMap        = new  Map(Types::String, Types::Integer);

    //    QueryBuildDataSource    qbds_Appointment;
    //    QueryBuildDataSource    qbds_Patient;
    //    QueryBuildDataSource    qbds_Cust;
    //    QueryBuildDataSource    qbds_Party;

    //    HMPatient               hMPatientObj;
    //    QueryRun                qr;
    //    Tableid                 tableId;
    //    HMResourceSchedulingAppointment hMResourceSchedulingAppointmenttbl;

    //    HMAppointmentDashboardContract dashboardContract = new HMAppointmentDashboardContract();

    //    listAppointments    = new List(Types::Class);


    //    qbds_Appointment    = query.addDataSource(TableNum(HMResourceSchedulingAppointment));
    //    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, AppointmentDate)).value(SysQuery::value(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    //    if(_userType == '')
    //    {
    //        _userType = 'Receptionist';
    //    }
    //    if(_userType != 'Physician')
    //    {
    //       //Show only primary appointments to Nurse and Receptionist
    //       qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, PrimaryAppointment)).value(SysQuery::value(0));
    //    }
    //    else
    //    {
    //        //Show all appointments where Dr. is scheuled
    //        drResourceMasterRecid = str2int64(_drResourceMasterRecid);
    //        while select hMResourceSchedulingPlanningObjectRange
    //            where hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
    //        {
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, HMResourceSchedulingPlanningObject)).value(SysQuery::value(hMResourceSchedulingPlanningObjectRange.RecId));
    //        }

    //    }

    //    if(_clinicRecId == 0)
    //    {
    //        if(_drResourceMasterRecid != '')
    //        {
    //            _clinicRecId = this.getDefaultClinicRecId(str2int64(_drResourceMasterRecid));
    //        }
    //    }
    //    if(_clinicRecId > 0)
    //    {
    //        if(_clinicType == 'Main')  //All appoitments of this clinic
    //        {
    //            while select RecId,HMResourceSchedulingPlanningObject from appointmentByClinic
    //            where appointmentByClinic.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                join RecId,HMOrganizationalUnit from hMResourceSchedulingPlanningObjectByClinic
    //                where appointmentByClinic.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectByClinic.RecId
    //                && hMResourceSchedulingPlanningObjectByClinic.HMOrganizationalUnit == _clinicRecId
    //            {
    //                if(appointmentByClinic.RecId > 0)
    //                {
    //                    clinicRangeApplied = true;
    //                    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value(strFmt('%1',appointmentByClinic.RecId));
    //                }
    //            }
    //        }
    //        else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
    //        {
    //            while select RecId,HMOrganizationalUnitServiceLocation from appointmentByClinic
    //                where appointmentByClinic.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                && appointmentByClinic.HMOrganizationalUnitServiceLocation == _clinicRecId
    //            {
    //                if(appointmentByClinic.RecId > 0)
    //                {
    //                    clinicRangeApplied = true;
    //                    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value(strFmt('%1',appointmentByClinic.RecId));
    //                }
    //            }
    //        }
    //        if(clinicRangeApplied == false)
    //        {
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value('1');
    //        }

    //    }
    //    qbds_Appointment.addOrderByField(fieldname2id(hMResourceSchedulingAppointmenttbl.TableId,'AppointmentTime'));
    //    qbds_Appointment.relations(true);
    //    qbds_Appointment.joinMode(JoinMode::InnerJoin);

    //    qbds_Patient   = qbds_Appointment.addDataSource(tableNum(HMPatient));
    //    qbds_Patient.relations(true);
    //    qbds_Patient.joinMode(JoinMode::InnerJoin);

    //    qbds_Cust   = qbds_Patient.addDataSource(tableNum(CustTable));
    //    qbds_Cust.relations(false);
    //    qbds_Cust.joinMode(JoinMode::InnerJoin);
    //    qbds_Cust.addLink(fieldNum(CustTable, RecId),fieldNum(HMPatient, CustTable));

    //    qbds_Party    = qbds_Cust.addDataSource(tableNum(DirPartyTable));
    //    qbds_Party.relations(true);
    //    qbds_Party.joinMode(JoinMode::InnerJoin);

    //    if(_search)
    //    {
    //        valueSearch = "*" + _search +"*";
    //        qbds_Party.addRange(fieldNum(DirPartyTable, Name)).value(valueSearch);
    //    }
    //    select firstOnly HMAppointmentsDashboardPageSize from params;
    //    qr = new QueryRun(Query);

    //    qr.literals(true);
    //    qr.enablePositionPaging(true);

    //    pageSize = params.HMAppointmentsDashboardPageSize;

    //    if(params.HMAppointmentsDashboardPageSize < 1)
    //    {
    //        pageSize = 1;
    //    }

    //    dashboardContract.parmMessage("test");
    //    dashboardContract.parmPageSize(pageSize);


    //    switch(_fieldId)
    //    {
    //        case 1:
    //        dashboardContract.parmUniqueList(this.getUniqueValuesForField(1,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));

    //        while (qr.next())
    //        {
    //            appointment = qr.getNo(1);
    //            if(GroupMap.exists(enum2str(appointment.AppointmentStatus)))
    //            {
    //                counter = GroupMap.lookup(enum2str(appointment.AppointmentStatus));

    //                if (Counter >= pageSize)
    //                {
    //                    shouldInsertAppointment = false;
    //                }
    //                else
    //                {
    //                    shouldInsertAppointment = true;
    //                    counter = counter +1;
    //                    GroupMap.remove(enum2str(appointment.AppointmentStatus));
    //                    GroupMap.insert(enum2str(appointment.AppointmentStatus), counter);
    //                }
    //            }
    //            else
    //            {
    //                GroupMap.insert(enum2str(appointment.AppointmentStatus), 1);
    //                shouldInsertAppointment = true;
    //            }

    //            if(shouldInsertAppointment)
    //            {
    //                appointmentContract      = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);

    //                listAppointments.addEnd(appointmentContract);
    //            }
    //        }
    //        break;

    //        case 2:
    //        dashboardContract.parmUniqueList(this.getUniqueValuesForField(2,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //        while (qr.next())
    //        {
    //            appointment = qr.getNo(1);
    //            resource = appointment.getAppointmentResource();
    //            //appointmentContract      = new HMAppointmentContract();
    //            //resource = appointmentContract.getResourceName(appointment);

    //            if(GroupMap.exists(resource))
    //            {
    //                counter = GroupMap.lookup(resource);

    //                if (Counter >= pageSize)
    //                {
    //                    shouldInsertAppointment = false;
    //                }
    //                else
    //                {
    //                    shouldInsertAppointment = true;
    //                    counter = counter + 1;
    //                    GroupMap.remove(resource);
    //                    GroupMap.insert(resource, counter);
    //                }
    //            }
    //            else
    //            {
    //                GroupMap.insert(resource, 1);
    //                shouldInsertAppointment = true;
    //            }

    //            if(shouldInsertAppointment)
    //            {
    //                appointmentContract      = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment,resource);

    //                listAppointments.addEnd(appointmentContract);
    //            }
    //        }
    //        break;

    //        case 3:
    //        dashboardContract.parmUniqueList(this.getUniqueValuesForField(3,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //        while (qr.next())
    //        {
    //            appointment = qr.getNo(1);
    //            hourTime = appointment.AppointmentTime/3600;
    //            timeStr = time2str(appointment.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
    //            timeStrStart = subStr(timeStr,0,2);
    //            timeStrEnd = subStr(timeStr,10,2);
    //            timeStrCombined = timeStrStart + ' ' + timeStrEnd;

    //            if(GroupMap.exists(timeStrCombined))
    //            {
    //                counter = GroupMap.lookup(timeStrCombined);

    //                if (Counter >= pageSize)
    //                {
    //                    shouldInsertAppointment = false;
    //                }
    //                else
    //                {
    //                    shouldInsertAppointment = true;
    //                    counter = counter + 1;
    //                    GroupMap.remove(timeStrCombined);
    //                    GroupMap.insert(timeStrCombined, counter);
    //                }
    //            }
    //            else
    //            {
    //                GroupMap.insert(timeStrCombined, 1);
    //                shouldInsertAppointment = true;
    //            }

    //            if(shouldInsertAppointment)
    //            {
    //                appointmentContract      = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);

    //                listAppointments.addEnd(appointmentContract);
    //            }
    //        }
    //        break;
    //        case 4:
    //        dashboardContract.parmUniqueList(this.getUniqueValuesForField(4,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //        while (qr.next())
    //        {

    //            appointment = qr.getNo(1);
    //            hMPatientObj =HMPatient::find(appointment.HMPatient);
    //            balanceStatus= hMPatientObj.outstandingBalance();
    //            if(balanceStatus > 0){
    //                if(HMPatientObj.IsAuthorized){
    //                    balanceStatusKey = "authorized";
    //                }else{
    //                    balanceStatusKey = "outstanding";
    //                }
    //            }else{
    //                    balanceStatusKey = "clear";
    //            }
    //            if(GroupMap.exists(balanceStatusKey))
    //            {
    //                counter = GroupMap.lookup(balanceStatusKey);

    //                if (Counter >= pageSize)
    //                {
    //                    shouldInsertAppointment = false;
    //                }
    //                else
    //                {
    //                    shouldInsertAppointment = true;
    //                    counter = counter +1;
    //                    GroupMap.remove(balanceStatusKey);
    //                    GroupMap.insert(balanceStatusKey, counter);
    //                }
    //            }
    //            else
    //            {
    //                GroupMap.insert(balanceStatusKey, 1);
    //                shouldInsertAppointment = true;
    //            }

    //            if(shouldInsertAppointment)
    //            {
    //                appointmentContract      = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);

    //                listAppointments.addEnd(appointmentContract);
    //            }
    //        }

    //        break;
    //    }

    //    dashboardContract.parmAppointmentList(listAppointments);

    //    return dashboardContract ;
    //}

    private recid getDefaultClinicRecId(int64 _drResourceMasterRecid)
    {
    
        HMOrganizationalUnit            hmOrganizationalUnitForTree;
        HMResourceOrganizationalUnit    hMResourceOrganizationalUnit;
    
        //Get any clinic where appointment is present of This resource
        select firstOnly1 HMOrganizationalUnit, RecId  from hmOrganizationalUnitForTree
            where hmOrganizationalUnitForTree.FileLocationType == HMFileLocationType::Clinic
                join recid,HMResourceMaster,HMOrganizationalUnit from hMResourceOrganizationalUnit
                    where hMResourceOrganizationalUnit.HMResourceMaster == _drResourceMasterRecid
                        && hMResourceOrganizationalUnit.HMOrganizationalUnit == hmOrganizationalUnitForTree.RecId;
    
        //If no record found then, Get any clinic where appointment is present of any resource
        if(hmOrganizationalUnitForTree.RecId == 0)
        {
            select firstOnly1 HMOrganizationalUnit, RecId  from hmOrganizationalUnitForTree
                where hmOrganizationalUnitForTree.FileLocationType == HMFileLocationType::Clinic
                    join recid,HMResourceMaster,HMOrganizationalUnit from hMResourceOrganizationalUnit
                        where hMResourceOrganizationalUnit.HMOrganizationalUnit == hmOrganizationalUnitForTree.RecId;
        }
        //If no record found then, Get any clinic where appointment is present
        if(hmOrganizationalUnitForTree.RecId == 0)
        {
            select firstOnly1 HMOrganizationalUnit, RecId  from hmOrganizationalUnitForTree
                where hmOrganizationalUnitForTree.FileLocationType == HMFileLocationType::Clinic;
        }
    
    
    
        return hmOrganizationalUnitForTree.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOpenAppointments</Name>
				<Source><![CDATA[
    //[ AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentDashboardContract))]
    //public HMAppointmentDashboardContract getFilteredAppointments(int _pageNumber, int _fieldId, str _value, str _search,str _userType,str _drResourceMasterRecid,recid _clinicRecId, str _clinicType)
    //{
    //    HMAppointmentDashboardContract dashboardContract = new HMAppointmentDashboardContract();
    //    CustTable custTableforBal;
    //    Amount custTableBal;
    //    HMPatient hmPatientForBal;
    //    HMResourceSchedulingAppointment hMResourceSchedulingAppointmentForBal;
    //    HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObject;
    //    int64 pageSize;
    //    int startingPosition;
    //    str valueExpression;
    //    str valueSearch;
    //    HMResourceSchedulingPlanningObject DrName;
    //    HMResourceMaster DrNameRealHMResourceMaster;
    //    Str60 strDrName;
    //    timeofday theTimeOfDay;
    //    str timeStr;
    //    str timeStrStart;
    //    str timeStrEnd;
    //    str timeStrCombined;
    //    boolean clinicRangeApplied = false;

    //    Query                   query = new Query();
    //    QueryRun                qr;
    //    Tableid                 tableId;
    //    RecId                   drResourceMasterRecid;
    //    HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObjectRange;
    //    QueryBuildDataSource    qbds_Planning;
    //    QueryBuildDataSource    qbds_Resource;
    //    QueryBuildDataSource    qbds_Appointment;
    //    QueryBuildDataSource    qbds_Patient;
    //    QueryBuildDataSource    qbds_Cust;
    //    QueryBuildDataSource    qbds_Party;
    //    HMResourceSchedulingAppointment hMResourceSchedulingAppointmenttbl;
    //    tableid             = tablename2id('HMResourceSchedulingAppointment');
    //    listAppointments    = new List(Types::Class);

    //    qbds_Appointment    = query.addDataSource(tableid);
    //    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, AppointmentDate)).value(SysQuery::value(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    //     if(_userType == '')
    //    {
    //        _userType = 'Receptionist';
    //    }
    //    if(_userType != 'Physician')
    //    {
    //       //Show only primary appointments to Nurse and Receptionist
    //       qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, PrimaryAppointment)).value(SysQuery::value(0));
    //    }
    //    else
    //    {
    //        //Show all appointments where Dr. is scheuled
    //        drResourceMasterRecid = str2int64(_drResourceMasterRecid);
    //        while select hMResourceSchedulingPlanningObjectRange
    //            where hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
    //        {
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, HMResourceSchedulingPlanningObject)).value(SysQuery::value(hMResourceSchedulingPlanningObjectRange.RecId));
    //        }

    //    }

    //    if(_clinicRecId == 0)
    //    {
    //        if(_drResourceMasterRecid != '')
    //        {
    //            _clinicRecId = this.getDefaultClinicRecId(str2int64(_drResourceMasterRecid));
    //        }
    //    }
    //    if(_clinicRecId > 0)
    //    {
    //        if(_clinicType == 'Main')  //All appoitments of this clinic
    //        {
    //            while select RecId,HMResourceSchedulingPlanningObject from appointmentByClinic
    //                where appointmentByClinic.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //            join RecId,HMOrganizationalUnit from hMResourceSchedulingPlanningObjectByClinic
    //            where appointmentByClinic.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectByClinic.RecId
    //            && hMResourceSchedulingPlanningObjectByClinic.HMOrganizationalUnit == _clinicRecId
    //            {
    //                if(appointmentByClinic.RecId > 0)
    //                {
    //                    clinicRangeApplied = true;
    //                    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value(strFmt('%1',appointmentByClinic.RecId));
    //                }
    //            }
    //        }
    //        else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
    //        {
    //            while select RecId,HMOrganizationalUnitServiceLocation from appointmentByClinic
    //                where appointmentByClinic.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                && appointmentByClinic.HMOrganizationalUnitServiceLocation == _clinicRecId
    //            {
    //                if(appointmentByClinic.RecId > 0)
    //                {
    //                    clinicRangeApplied = true;
    //                    qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value(strFmt('%1',appointmentByClinic.RecId));
    //                }
    //            }
    //        }
    //        if(clinicRangeApplied == false)
    //        {
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, RecId)).value('1');
    //        }

    //    }
    //    qbds_Appointment.addOrderByField(fieldname2id(hMResourceSchedulingAppointmenttbl.TableId,'AppointmentTime'));
    //    qbds_Appointment.relations(true);
    //    qbds_Appointment.joinMode(JoinMode::InnerJoin);

    //    qbds_Patient   = qbds_Appointment.addDataSource(tableNum(HMPatient));
    //    qbds_Patient.relations(true);
    //    qbds_Patient.joinMode(JoinMode::InnerJoin);

    //    qbds_Cust   = qbds_Patient.addDataSource(tableNum(CustTable));
    //    qbds_Cust.relations(false);
    //    qbds_Cust.joinMode(JoinMode::InnerJoin);
    //    qbds_Cust.addLink(fieldNum(CustTable, RecId),fieldNum(HMPatient, CustTable));

    //    qbds_Party    = qbds_Cust.addDataSource(tableNum(DirPartyTable));
    //    qbds_Party.relations(true);
    //    qbds_Party.joinMode(JoinMode::InnerJoin);

    //    if(_search)
    //    {
    //        valueSearch = "*" + _search +"*";
    //        qbds_Party.addRange(fieldNum(DirPartyTable, Name)).value(valueSearch);
    //    }

    //    select firstOnly HMAppointmentsPageSize from params;

    //    pageSize = params.HMAppointmentsPageSize;

    //    if(pageSize < 1)
    //    {
    //        pageSize = 1;
    //    }

    //    if(_pageNumber <= 1)
    //    {
    //        _pageNumber = 1;
    //        startingPosition = 1;
    //    }
    //    else
    //    {
    //        startingPosition = ((_pageNumber - 1) * pageSize)+1;
    //    }

    //    dashboardContract.parmPageSize(pageSize);
    //    switch(_fieldId)
    //    {
    //        case 1:
    //            dashboardContract.parmUniqueList(this.getUniqueValuesForField(1,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, AppointmentStatus)).value(_value);
    //            qr = new QueryRun(Query);

    //            qr.literals(true);
    //            qr.enablePositionPaging(true);
    //            qr.addPageRange(startingPosition, pageSize);

    //            while (qr.next())
    //            {
    //                appointment         = qr.getNo(1);
    //                appointmentContract = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);
    //                listAppointments.addEnd(appointmentContract);
    //            }
    //            break;

    //        case 2:
    //            dashboardContract.parmUniqueList(this.getUniqueValuesForField(2,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //            if(_value)
    //            {
    //            /*qbds_Planning = qbds_Appointment.addDataSource(tableNum(HMResourceSchedulingPlanningObject));
    //            qbds_Planning.joinMode(JoinMode::InnerJoin);

    //            qbds_Resource = qbds_Planning.addDataSource(tableNum(HMResourceMaster));
    //            qbds_Resource.joinMode(JoinMode::InnerJoin);

    //            qbds_Resource.addRange(fieldNum(HMResourceMaster, Description)).value(_value); */
    //            strDrName = _value;
    //            select firstOnly RecId,Description from DrNameRealHMResourceMaster
    //            where DrNameRealHMResourceMaster.Description ==  strDrName;
    //            select firstOnly  HMResourceMaster,RecId from DrName
    //            where DrName.HMResourceMaster == DrNameRealHMResourceMaster.RecId;
    //            if(DrName)
    //            {
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, HMResourceSchedulingPlanningObject)).value(SysQuery::value(DrName.RecId));
    //            }

    //            }
    //            qr = new QueryRun(Query);

    //            qr.literals(true);
    //            qr.enablePositionPaging(true);

    //            qr.addPageRange(startingPosition, pageSize);

    //            while (qr.next())
    //            {
    //                appointment = qr.getNo(1);

    //                appointmentContract      = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);
    //                listAppointments.addEnd(appointmentContract);
    //            }
    //            break;

    //            case 3:
    //            dashboardContract.parmUniqueList(this.getUniqueValuesForField(3,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));

    //            valueExpression = "((AppointmentTime >= " +int2str(str2int(_value)*3600) + ") && (AppointmentTime < " +int2str((str2int(_value)+1)*3600)+"))";
    //            qbds_Appointment.addRange(fieldNum(HMResourceSchedulingAppointment, appointmentTime)).value(valueExpression );
    //            qr = new QueryRun(Query);

    //            qr.literals(true);
    //            qr.enablePositionPaging(true);
    //            qr.addPageRange(startingPosition, pageSize);

    //            while (qr.next())
    //            {
    //                appointment         = qr.getNo(1);
    //                appointmentContract = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);
    //                listAppointments.addEnd(appointmentContract);
    //            }
    //            break;
    //            case 4:
    //            dashboardContract.parmUniqueList(this.getUniqueValuesForField(4,_userType,_drResourceMasterRecid,_clinicRecId,_clinicType));
    //                if(_value == 'clear')
    //                {
    //                      if(_userType != 'Physician')
    //                        {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                          && hMResourceSchedulingAppointmentForBal.PrimaryAppointment == 0
    //                            {
    //                            custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if(custTableBal <= 0)
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                         }
    //                    else
    //                    {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                            join hMResourceSchedulingPlanningObject
    //                            where hMResourceSchedulingPlanningObject.RecId == hMResourceSchedulingAppointmentForBal.HMResourceSchedulingPlanningObject
    //                            && hMResourceSchedulingPlanningObject.HMResourceMaster == drResourceMasterRecid

    //                            {
    //                                custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if(custTableBal <= 0)
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                    }
    //                }else if(_value == 'outstanding')
    //                {
    //                      if(_userType != 'Physician')
    //                        {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                          && hMResourceSchedulingAppointmentForBal.PrimaryAppointment == 0
    //                            {
    //                            custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if((custTableBal > 0) && (!hmPatientForBal.IsAuthorized))
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                         }
    //                    else
    //                    {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                            join hMResourceSchedulingPlanningObject
    //                            where hMResourceSchedulingPlanningObject.RecId == hMResourceSchedulingAppointmentForBal.HMResourceSchedulingPlanningObject
    //                            && hMResourceSchedulingPlanningObject.HMResourceMaster == drResourceMasterRecid

    //                            {
    //                                custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if((custTableBal > 0) && (!hmPatientForBal.IsAuthorized))
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                    }
    //                }else if(_value == 'authorized')
    //                {
    //                      if(_userType != 'Physician')
    //                        {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                          && hMResourceSchedulingAppointmentForBal.PrimaryAppointment == 0
    //                            {
    //                            custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if((custTableBal > 0) && (hmPatientForBal.IsAuthorized))
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                         }
    //                    else
    //                    {
    //                        while select custTableforBal
    //                        join hmPatientForBal
    //                         where hmPatientForBal.CustTable == custTableforBal.RecId
    //                         join hMResourceSchedulingAppointmentForBal
    //                         where hMResourceSchedulingAppointmentForBal.HMPatient == hmPatientForBal.RecId
    //                          && hMResourceSchedulingAppointmentForBal.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
    //                            join hMResourceSchedulingPlanningObject
    //                            where hMResourceSchedulingPlanningObject.RecId == hMResourceSchedulingAppointmentForBal.HMResourceSchedulingPlanningObject
    //                            && hMResourceSchedulingPlanningObject.HMResourceMaster == drResourceMasterRecid

    //                            {
    //                                custTableBal = 0;
    //                            custTableBal = custTableforBal.openBalanceCur();
    //                                if((custTableBal > 0) && (hmPatientForBal.IsAuthorized))
    //                                    {
    //                                    qbds_Cust.addRange(fieldNum(CustTable, RecId)).value(queryValue(custTableforBal.RecId));
    //                                    }
    //                            }
    //                    }
    //                }
    //            qr = new QueryRun(Query);

    //            qr.literals(true);
    //            qr.enablePositionPaging(true);
    //            qr.addPageRange(startingPosition, pageSize);

    //            while (qr.next())
    //            {
    //                appointment         = qr.getNo(1);
    //                appointmentContract = new HMAppointmentContract();

    //                appointmentContract.populateAppointmentContract(appointment);
    //                listAppointments.addEnd(appointmentContract);
    //            }
    //            break;
    //    }

    //    dashboardContract.parmAppointmentList(listAppointments);

    //    return dashboardContract ;
    //}

    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentContract))]
    public List getOpenAppointments(int _pageNumber)
    {
        Query query = new Query();
        QueryBuildDataSource qbds;
        QueryRun qr;
        Tableid tableId;
        Common common;
        //tableid     = tablename2id('HMResourceSchedulingAppointment');

        //qbds = query.addDataSource(tableid);

        //qbds.addOrderByField(fieldname2id(tableid,'RecId'));
        //qbds.addRange(fieldNum(HMResourceSchedulingAppointment, AppointmentStatus)).value("Open");

        //qr = new QueryRun(Query);
        //qr.literals(true);

        //qr.enablePositionPaging(true);
        //qr.addPageRange(_pageNumber,2);

        //while (qr.next())
        //    {
        //        appointment = qr.getNo(1);

        //        appointmentContract      = new HMAppointmentContract();

        //        appointmentContract.populateAppointmentContract(appointment);

        //        listAppointments.addEnd(appointmentContract);

        //}
        return listAppointments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTodaysAppointments</Name>
				<Source><![CDATA[
    [ AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentContract))]
    public List getTodaysAppointments(int _pageNumber)
    {
        Query query = new Query();
        QueryBuildDataSource qbds;
        QueryRun qr;
        Tableid tableId;
        Common common;
        //tableid     = tablename2id('HMResourceSchedulingAppointment');

        //qbds = query.addDataSource(tableid);

        //qbds.addOrderByField(fieldname2id(tableid,'RecId'));
        //qbds.addRange(fieldNum(HMResourceSchedulingAppointment, appointmentDate)).value(date2str( DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),321,DateDay::Digits2,DateSeparator::Slash,DateMonth::Digits2,DateSeparator::Slash,DateYear::Digits4));

        //qr = new QueryRun(Query);
        //qr.literals(true);

        //qr.enablePositionPaging(true);
        //qr.addPageRange(_pageNumber,2);

        //while (qr.next())
        //{
        //    appointment = qr.getNo(1);
        //    appointmentContract = new HMAppointmentContract();

        //        appointmentContract      = new HMAppointmentContract();

        //        appointmentContract.populateAppointmentContract(appointment);

        //        listAppointments.addEnd(appointmentContract);

        //}
        return listAppointments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUniqueValuesForField</Name>
				<Source><![CDATA[
    [AifCollectionTypeAttribute('return', Types::String)]
    public boolean getUniqueValuesForField(int _fielId,str _userType,str _drResourceMasterRecid,recid _clinicRecId, str _clinicType)
    {
        Map distinctValues             = new Map(Types::String, Types::String);
        int hourlyTime;
        int counter=0;
        RecId drResourceMasterRecid;
        HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObjectRange;
    
        HMResourceSchedulingAppointment     Appointments;
        HMResourceSchedulingAppointment     Appointments_Count;
        HMResourceSchedulingPlanningObject  Planning;
        HMResourceMaster                    resourceMaster;
        HMPatient                           HMPatientObj;
        timeofday theTimeOfDay;
        str timeStr;
        str timeStrStart;
        str timeStrEnd;
        str timeStrCombined;
        Amount  patientBalance;
        str balanceStatusKey;
        str resourceNameDistinct;
    
        //drResourceMasterRecid = str2int64(_drResourceMasterRecid);
        //switch (_fielId)
        //{
        //    case 1:
        //        {
        //            if(_userType != 'Physician')
        //            {
        //                if(_clinicRecId == 0)
        //                {
        //                    while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                    {
        //                        select count(RecId) from Appointments_Count
        //                        where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                        && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                        && Appointments_Count.PrimaryAppointment == 0;

        //                        distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                    }
        //                }
        //                else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                        while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                        {
        //                            select count(RecId) from Appointments_Count
        //                            where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                            && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments_Count.PrimaryAppointment == 0
        //                            //+
        //                            join RecId,HMOrganizationalUnit from hMResourceSchedulingPlanningObjectByClinic
        //                            where Appointments_Count.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectByClinic.RecId
        //                            && hMResourceSchedulingPlanningObjectByClinic.HMOrganizationalUnit == _clinicRecId;

        //                            distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                        }

        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                        while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                        {
        //                            select count(RecId),HMOrganizationalUnitServiceLocation from Appointments_Count
        //                            where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                            && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments_Count.PrimaryAppointment == 0
        //                            //+
        //                            && Appointments_Count.HMOrganizationalUnitServiceLocation == _clinicRecId;



        //                            distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                        }

        //                    }

        //                }
        //            }
        //            else
        //            {
        //                if(_clinicRecId == 0)
        //                {
        //                     while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                        {
        //                            select count(RecId) from Appointments_Count
        //                            where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                            && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            join hMResourceSchedulingPlanningObjectRange
        //                            where Appointments_Count.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                            && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid;

        //                            distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                        }
        //                }
        //                else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                         while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                             {
        //                                    select count(RecId) from Appointments_Count
        //                                    where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                                    && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                                    join hMResourceSchedulingPlanningObjectRange
        //                                    where Appointments_Count.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                    && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
        //                                    && hMResourceSchedulingPlanningObjectRange.HMOrganizationalUnit == _clinicRecId;



        //                                    distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                             }

        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                        while select AppointmentStatus from Appointments group by Appointments.AppointmentStatus
        //                             {
        //                                    select count(RecId),HMOrganizationalUnitServiceLocation from Appointments_Count
        //                                    where Appointments_Count.AppointmentStatus == Appointments.AppointmentStatus
        //                                    && Appointments_Count.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                                    && Appointments_Count.HMOrganizationalUnitServiceLocation == _clinicRecId
        //                                    join hMResourceSchedulingPlanningObjectRange
        //                                    where Appointments_Count.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                    && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid;

        //                                    distinctValues.insert(strFmt("%1",Appointments.AppointmentStatus), strFmt("%1",Appointments_Count.RecId));
        //                             }

        //                    }

        //                }
        //            }
        //            break;
        //        }



        //    case 2: //Group by Dr. will be visible to nurse and receptionist but not to a Dr. so showing primary apointments only
        //        // and not matching dr. range.
        //    {
        //        if(_clinicRecId == 0)
        //        {

        //            while select
        //            count(RecId)
        //            from Appointments
        //            join Planning
        //            where appointments.HMResourceSchedulingPlanningObject ==  Planning.recId
        //            && appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //            && appointments.PrimaryAppointment == 0
        //                join resourceMaster
        //                group by resourceMaster.Description
        //                where Planning.HMResourceMaster == resourceMaster.RecId

        //               {
        //                   distinctValues.insert(strFmt("%1",resourceMaster.Description), strFmt("%1",Appointments.RecId));
        //               }
        //        }
        //        else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                            while select
        //                            count(RecId)
        //                            from Appointments
        //                            join Planning
        //                            where appointments.HMResourceSchedulingPlanningObject ==  Planning.recId
        //                            && appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && appointments.PrimaryAppointment == 0
        //                            && Planning.HMOrganizationalUnit == _clinicRecId

        //                                join resourceMaster
        //                                group by resourceMaster.Description
        //                                where Planning.HMResourceMaster == resourceMaster.RecId

        //                               {
        //                               distinctValues.insert(strFmt("%1",resourceMaster.Description), strFmt("%1",Appointments.RecId));
        //                               }


        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                            while select
        //                            count(RecId),HMOrganizationalUnitServiceLocation
        //                            from Appointments
        //                            where appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && appointments.PrimaryAppointment == 0
        //                            && appointments.HMOrganizationalUnitServiceLocation == _clinicRecId
        //                                join Planning
        //                                where appointments.HMResourceSchedulingPlanningObject ==  Planning.recId
        //                                    join resourceMaster
        //                                    group by resourceMaster.Description
        //                                    where Planning.HMResourceMaster == resourceMaster.RecId

        //                               {
        //                               distinctValues.insert(strFmt("%1",resourceMaster.Description), strFmt("%1",Appointments.RecId));
        //                               }

        //                    }

        //                }


        //        break;
        //    }

        //    case 3:
        //    {
        //        if(_userType != 'Physician')
        //        {
        //            if(_clinicRecId == 0)
        //            {
        //                while select AppointmentTime from Appointments
        //                where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                && Appointments.PrimaryAppointment == 0
        //                {
        //                    hourlyTime = Appointments.AppointmentTime/3600;
        //                    timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                    timeStrStart = subStr(timeStr,0,2);
        //                    timeStrEnd = subStr(timeStr,10,2);
        //                    timeStrCombined = timeStrStart + ' ' + timeStrEnd;
        //                    if(distinctValues.exists(timeStrCombined))
        //                    {
        //                        counter = distinctValues.lookup(timeStrCombined);
        //                        counter += 1;
        //                        distinctValues.remove(timeStrCombined);
        //                        distinctValues.insert(timeStrCombined, int2str(counter));
        //                    }
        //                    else
        //                    {
        //                        distinctValues.insert(timeStrCombined, int2str(1));
        //                    }
        //                } // while end
        //            }
        //            else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                            while select AppointmentTime,HMResourceSchedulingPlanningObject from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            join RecId,HMOrganizationalUnit from hMResourceSchedulingPlanningObjectByClinic
        //                            where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectByClinic.RecId
        //                            && hMResourceSchedulingPlanningObjectByClinic.HMOrganizationalUnit == _clinicRecId

        //                            {
        //                                hourlyTime = Appointments.AppointmentTime/3600;
        //                                timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                                timeStrStart = subStr(timeStr,0,2);
        //                                timeStrEnd = subStr(timeStr,10,2);
        //                                timeStrCombined = timeStrStart + ' ' + timeStrEnd;
        //                                if(distinctValues.exists(timeStrCombined))
        //                                {
        //                                    counter = distinctValues.lookup(timeStrCombined);
        //                                    counter += 1;
        //                                    distinctValues.remove(timeStrCombined);
        //                                    distinctValues.insert(timeStrCombined, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(timeStrCombined, int2str(1));
        //                                }
        //                             } // while end

        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                            while select AppointmentTime,HMOrganizationalUnitServiceLocation from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            && Appointments.HMOrganizationalUnitServiceLocation == _clinicRecId

        //                            {
        //                                hourlyTime = Appointments.AppointmentTime/3600;
        //                                timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                                timeStrStart = subStr(timeStr,0,2);
        //                                timeStrEnd = subStr(timeStr,10,2);
        //                                timeStrCombined = timeStrStart + ' ' + timeStrEnd;
        //                                if(distinctValues.exists(timeStrCombined))
        //                                {
        //                                    counter = distinctValues.lookup(timeStrCombined);
        //                                    counter += 1;
        //                                    distinctValues.remove(timeStrCombined);
        //                                    distinctValues.insert(timeStrCombined, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(timeStrCombined, int2str(1));
        //                                }
        //                            } // while end

        //                    }

        //                }
        //        } // if end
        //        else
        //        {
        //            if(_clinicRecId == 0)
        //            {
        //                    while select AppointmentTime from Appointments
        //                    where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                    join hMResourceSchedulingPlanningObjectRange
        //                            where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                            && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
        //                    {
        //                        hourlyTime = Appointments.AppointmentTime/3600;
        //                        timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                        timeStrStart = subStr(timeStr,0,2);
        //                        timeStrEnd = subStr(timeStr,10,2);
        //                        timeStrCombined = timeStrStart + ' ' + timeStrEnd;

        //                        if(distinctValues.exists(timeStrCombined))
        //                        {
        //                            counter = distinctValues.lookup(timeStrCombined);
        //                            counter += 1;
        //                            distinctValues.remove(timeStrCombined);
        //                            distinctValues.insert(timeStrCombined, int2str(counter));
        //                        }
        //                        else
        //                        {
        //                            distinctValues.insert(timeStrCombined, int2str(1));
        //                        }
        //                    } // while end
        //            }
        //            else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                        while select AppointmentTime from Appointments
        //                        where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            join hMResourceSchedulingPlanningObjectRange
        //                            where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                            && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
        //                            && hMResourceSchedulingPlanningObjectRange.HMOrganizationalUnit == _clinicRecId

        //                        {
        //                            hourlyTime = Appointments.AppointmentTime/3600;
        //                            timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                            timeStrStart = subStr(timeStr,0,2);
        //                            timeStrEnd = subStr(timeStr,10,2);
        //                            timeStrCombined = timeStrStart + ' ' + timeStrEnd;

        //                            if(distinctValues.exists(timeStrCombined))
        //                            {
        //                                counter = distinctValues.lookup(timeStrCombined);
        //                                counter += 1;
        //                                distinctValues.remove(timeStrCombined);
        //                                distinctValues.insert(timeStrCombined, int2str(counter));
        //                            }
        //                            else
        //                            {
        //                                distinctValues.insert(timeStrCombined, int2str(1));
        //                            }
        //                        } // while end

        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                            while select AppointmentTime from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.HMOrganizationalUnitServiceLocation == _clinicRecId
        //                                join hMResourceSchedulingPlanningObjectRange
        //                                where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid


        //                            {
        //                                hourlyTime = Appointments.AppointmentTime/3600;
        //                                timeStr = time2str(Appointments.AppointmentTime,TimeSeparator::Auto,TimeFormat::AMPM);
        //                                timeStrStart = subStr(timeStr,0,2);
        //                                timeStrEnd = subStr(timeStr,10,2);
        //                                timeStrCombined = timeStrStart + ' ' + timeStrEnd;

        //                                if(distinctValues.exists(timeStrCombined))
        //                                {
        //                                    counter = distinctValues.lookup(timeStrCombined);
        //                                    counter += 1;
        //                                    distinctValues.remove(timeStrCombined);
        //                                    distinctValues.insert(timeStrCombined, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(timeStrCombined, int2str(1));
        //                                }
        //                            } // while end

        //                    }

        //                }

        //        }
        //         break;
        //    } // case end
        //    case 4:
        //        {

        //            if(_userType != 'Physician')
        //            {
        //                if(_clinicRecId == 0)
        //                {
        //                            while select HMPatient from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end
        //                }
        //                else if(_clinicRecId > 0)
        //                {
        //                    if(_clinicType == 'Main')
        //                    {
        //                        while select HMPatient from Appointments
        //                        where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                        && Appointments.PrimaryAppointment == 0
        //                                join RecId,HMOrganizationalUnit from hMResourceSchedulingPlanningObjectByClinic
        //                                where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectByClinic.RecId
        //                                && hMResourceSchedulingPlanningObjectByClinic.HMOrganizationalUnit == _clinicRecId

        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end

        //                    }
        //                    else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                    {
        //                        while select HMPatient from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            && Appointments.HMOrganizationalUnitServiceLocation == _clinicRecId

        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end

        //                    }

        //                }
        //            }
        //                else
        //                { // Not Physician
        //                    if(_clinicRecId == 0)
        //                    {
        //                            while select HMPatient from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0 join hMResourceSchedulingPlanningObjectRange
        //                                where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end
        //                    }
        //                     else if(_clinicRecId > 0)
        //                    {
        //                        if(_clinicType == 'Main')
        //                        {
        //                            while select HMPatient from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            join hMResourceSchedulingPlanningObjectRange
        //                                where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid
        //                                && hMResourceSchedulingPlanningObjectRange.HMOrganizationalUnit == _clinicRecId

        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end

        //                        }
        //                        else if(_clinicType == 'Sub') //All appoitments of this sub-clinic
        //                        {
        //                            while select HMPatient from Appointments
        //                            where Appointments.AppointmentDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())
        //                            && Appointments.PrimaryAppointment == 0
        //                            && Appointments.HMOrganizationalUnitServiceLocation == _clinicRecId
        //                            join hMResourceSchedulingPlanningObjectRange
        //                                where Appointments.HMResourceSchedulingPlanningObject == hMResourceSchedulingPlanningObjectRange.RecId
        //                                && hMResourceSchedulingPlanningObjectRange.HMResourceMaster == drResourceMasterRecid

        //                            {
        //                                HMPatientObj=HMPatient::find(Appointments.HMPatient);
        //                                patientBalance = HMPatientObj.outstandingBalance();
        //                                if(patientBalance > 0){
        //                                    if(HMPatientObj.IsAuthorized){
        //                                        balanceStatusKey = "authorized";
        //                                    }else{
        //                                        balanceStatusKey = "outstanding";
        //                                    }
        //                                }else{
        //                                    balanceStatusKey = "clear";
        //                                 }
        //                                if(distinctValues.exists(balanceStatusKey))
        //                                {
        //                                    counter = distinctValues.lookup(balanceStatusKey);
        //                                    counter += 1;
        //                                    distinctValues.remove(balanceStatusKey);
        //                                    distinctValues.insert(balanceStatusKey, int2str(counter));
        //                                }
        //                                else
        //                                {
        //                                    distinctValues.insert(balanceStatusKey, int2str(1));
        //                                }

        //                            } // while end

        //                        }

        //                    }



        //                }
        //            break;
        //        }
        //}
    
        return true;//distinctValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUserAppointments</Name>
				<Source><![CDATA[
    [AifCollectionTypeAttribute('return', Types::Class, classstr(HMAppointmentContract))]
    public List getUserAppointments(RecId _resourceRecId, recid _clinicRecId, TransDate _startDate, TransDate _endDate, boolean onlyTriaged, str searchValue)
    {
        HMResourceSchedulingAppointment             hmResourceSchedulingAppointmentLocal;
        HMResourceSchedulingPlanningObject          hmResourceSchedulingPlanningObjectLocal;
        Query                                       qry = new Query(queryStr(HMAppointmentService));
        QueryRun                                    qryRun;
        QueryBuildDataSource                        qbdsAppointment, qbds, qbdsChild, qbdsPatient;
    
        str             apptStatusFilterString, searchFiltering;
    
        //qbdsAppointment =  qry.dataSourceTable(tableNum(HMResourceSchedulingAppointment));
        //apptStatusFilterString = strFmt('((%1 != %2) && (%1 != %3) && (%1 != %4))','AppointmentStatus',enum2int(HMResourceSchedulingAppointmentStatus::Cancelled),enum2int(HMResourceSchedulingAppointmentStatus::Reserved),enum2int(HMResourceSchedulingAppointmentStatus::ToBeReschedule));
        ////qbds.addRange(fieldNum(HMResourceSchedulingAppointment,AppointmentStatus)).value(SysQuery::valueNot(HMResourceSchedulingAppointmentStatus::Cancelled));
        //qbdsAppointment.addRange(fieldNum(HMResourceSchedulingAppointment,RecId)).value(apptStatusFilterString);

        //qbdsAppointment.addRange(fieldNum(HMResourceSchedulingAppointment,AppointmentDate)).value(SysQuery::range(_startDate,_endDate));
        //qbdsAppointment.addOrderByField(fieldNum(HMResourceSchedulingAppointment,AppointmentDate),SortOrder::Ascending);
        //qbdsAppointment.addOrderByField(fieldNum(HMResourceSchedulingAppointment,AppointmentTime),SortOrder::Ascending);
        //qbds = qry.dataSourceTable(tableNum(HMResourceSchedulingPlanningObject));

        //if(_clinicRecId)
        //{
        //    qbds.addRange(fieldNum(HMResourceSchedulingPlanningObject,HMOrganizationalUnit)).value(SysQuery::value(_clinicRecId));
        //}

        //if(_resourceRecId)
        //{
        //    qbds.addRange(fieldNum(HMResourceSchedulingPlanningObject,HMResourceMaster)).value(SysQuery::value(_resourceRecId));
        //}

        //qbds.addRange(fieldNum(HMResourceSchedulingPlanningObject,CaseType)).value(SysQuery::value(HMCaseType::OutPatient));
        //qbds.addRange(fieldNum(HMResourceSchedulingPlanningObject,CaseType)).value(SysQuery::value(HMCaseType::Surgery));

        //if(onlyTriaged)
        //{
        //    qbdsChild = qbds.addDataSource(tableNum(HMOrganizationalUnit));
        //    qbdsChild.addLink(fieldNum(HMResourceSchedulingPlanningObject, HMOrganizationalUnit), fieldNum(HMOrganizationalUnit, RecId));

        //    qbdsChild = qbdsChild.addDataSource(tableNum(HMSpecialtyCode));
        //    qbdsChild.relations(true);

        //    qbdsChild.addRange(fieldNum(HMSpecialtyCode,IsTriageRequired)).value(SysQuery::value(NoYes::Yes));
        //}

        //if(searchValue)
        //{
        //    qbdsChild = qry.dataSourceTable(tableNum(HMPatient));

        //    searchFiltering = strFmt('((DirPartyTable_1.Name like "*%1*") || (CustTable_1.AccountNum like "*%1*"))', searchValue);

        //    qbdsChild.addRange(fieldNum(HMPatient,RecId)).value(searchFiltering);
        //}

        //qryRun = new QueryRun(qry);

        //listAppointments    = new List(Types::Class);

        //while(qryRun.next())
        //{
        //    hmResourceSchedulingAppointmentLocal =  qryRun.get(tableNum(HMResourceSchedulingAppointment));
        //    hmResourceSchedulingPlanningObjectLocal =  qryRun.get(tableNum(HMResourceSchedulingPlanningObject));

        //    appointmentContract      = new HMAppointmentContract();

        //    appointmentContract.populateAppointmentContract(hmResourceSchedulingAppointmentLocal);

        //    listAppointments.addEnd(appointmentContract);
        //}
    
        return listAppointments ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAppointmentProgressive</Name>
				<Source><![CDATA[
    public boolean isAppointmentProgressive(recid _appointmentRecId)
    {
        boolean isAppointment;
        //HMResourceSchedulingPlanningObject      hmResourceSchedulingPlanningObject;
        //HMResourceSchedulingAppointment apptLocal = HMResourceSchedulingAppointment::find(_appointmentRecId);

        //select count(RecId) from appointment
        //    exists join hmResourceSchedulingPlanningObject
        //    where appointment.HMResourceSchedulingPlanningObject == hmResourceSchedulingPlanningObject.RecId
        //    && (hmResourceSchedulingPlanningObject.CaseType == HMCaseType::OutPatient
        //    || hmResourceSchedulingPlanningObject.CaseType == HMCaseType::Surgery)
        //    && appointment.RecId != _appointmentRecId
        //    && appointment.HMPatient == apptLocal.HMPatient
        //    && (appointment.AppointmentStatus == HMResourceSchedulingAppointmentStatus::CheckedIn
        //    || appointment.AppointmentStatus == HMResourceSchedulingAppointmentStatus::CheckedOut)
        //    && hmResourceSchedulingPlanningObject.HMResourceMaster == apptLocal.getAppointmentResourceRecId();


        //return appointment.RecId > 0;
        return isAppointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ObsoletepopulateAppointmentContract</Name>
				<Source><![CDATA[
    private void ObsoletepopulateAppointmentContract()
    {
      /*  date DOB;
        HMPatientContract patientContract = new HMPatientContract();
    
        appointmentContract.parmApptConfrmStatus(enum2str(appointment.HMConfirmationStatus));
        appointmentContract.parmApptdate(date2strUsr(appointment.AppointmentDate));
        appointmentContract.parmApptnum(appointment.AppointmentNumber);
        appointmentContract.parmApptRecId(int642str(appointment.RecId));
        appointmentContract.parmApptStatus(enum2str(appointment.AppointmentStatus));
        appointmentContract.parmApptTime(appointment.displayTimeWithoutSec());
        appointmentContract.parmApptType(HMResourceSchedulingTypeCode::find(appointment.HMResourceSchedulingTypeCode).Description);
        appointmentContract.parmClinic(appointment.showClinic());
        appointmentContract.parmDoctorName(appointment.getAppointmentResource());
    
        patient = HMPatient::find(appointment.HMPatient);
    
        if(patient)
        {
            patientContract.populatePatientContract(patient);
    
            appointmentContract.parmCompanyName(patientContract.parmClient());
            appointmentContract.parmEmail(patientContract.parmPatientEmail());
            appointmentContract.parmPhone(patientContract.parmPatientPhone());
            appointmentContract.parmPatientFileNumber(patientContract.parmPatientFileNumber());
            appointmentContract.parmPatientName(patientContract.parmPatientName());
            appointmentContract.parmPatientRecId(int642str(patientContract.parmPatientRecId()));
            appointmentContract.parmPatientImage(patientContract.parmPatientImage());
        }
        DOB = patient.getBirthDate();
        appointmentContract.parmPatientDOB(date2str(DOB, 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4));
        appointmentContract.parmAge(patient.patientAgeInYears());*/
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAppointmentNotes</Name>
				<Source><![CDATA[
    //[ AifCollectionTypeAttribute('return', Types::String)]
    //public Map SetAppointmentStatus(RecId _appointmentRecId, RecId _reasonRecId, RecId _userRecId, boolean _isWorker, int _appointmentStatusId, str _note)
    //{
    //    Map     response = new Map(Types::String, Types::String);

    //    HMAppoinmentLog                       appointmentLog;
    //    ReasonTable                           reason;
    //    HMResourceSchedulingAppointmentStatus hMResourceSchedulingAppointmentStatus;
    //    HMResourceSchedulingHelper hMResourceSchedulingHelper;
    //    boolean serviceFound, reasonFound;

    //    appointment =  HMResourceSchedulingAppointment::find(_appointmentRecId, true);
    //    reason      =  ReasonTable::findByRecid(_reasonRecId);

    //    if(appointment)//&& reason
    //    {
    //        ttsBegin;
    //        appointment.AppointmentStatus = _appointmentStatusId;
    //        appointment.update();
    //        ttsCommit;
    //        response.insert("1", "Appointment successfully updated");

    //        ttsBegin;
    //        appointmentLog.HMAppointLogDate         = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
    //        appointmentLog.HMAppointLogTime         = DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone());
    //        appointmentLog.HMResScheduleAppointment = _appointmentRecId;
    //        appointmentLog.HMAppointLogNote         = _note;
    //        appointmentLog.HMAppointLogStatus       = _appointmentStatusId;
    //        //Todo:
    //        //appointmentLog.hmUserRecId              = _userRecId;
    //        //appointmentLog.HMIsWorker               = _isWorker;
    //        appointmentLog.insert();
    //        ttsCommit;

    //        //Expand BOM
    //        hMResourceSchedulingAppointmentStatus = _appointmentStatusId;
    //        if(hMResourceSchedulingAppointmentStatus == HMResourceSchedulingAppointmentStatus::CheckedIn)
    //        {
    //            while select appointmentService
    //                where appointmentService.HMResourceSchedulingAppointment == appointment.RecId
    //            {
    //            hMResourceSchedulingHelper =  new HMResourceSchedulingHelper();
    //            hMResourceSchedulingHelper.expandProtocolServices(appointmentService);
    //            }
    //        }
    //    }

    //    if(!appointment)
    //    {
    //        response.insert("0", "Appointment not found, The recId "+ int642str(_appointmentRecId) +" does not correspond to any Service.");
    //    }
    //    //if(!reason)
    //   // {
    //    //    response.insert("0", "Reason not found, The recId "+ int642str(_reasonRecId) + " does not correspond to any Reason.");
    //   // }

    //    return  response;
    //}

    [AifCollectionTypeAttribute('return', Types::String)]
    public str updateAppointmentNotes(RecId _appointmentRecId,str _updatedNotes)
    {
        //HMResourceSchedulingAppointment hMResourceSchedulingAppointment;
        str updatedNotes;
    
        //hMResourceSchedulingAppointment = HMResourceSchedulingAppointment::find(_appointmentRecId,true);
        //if(_updatedNotes != '')
        //{
        //    if(hMResourceSchedulingAppointment.Notes != '')
        //    {
        //        updatedNotes = hMResourceSchedulingAppointment.Notes + ' ' + _updatedNotes;
        //    }
        //    else
        //    {
        //       updatedNotes = _updatedNotes;
        //    }
        //    ttsBegin;
        //    hMResourceSchedulingAppointment.Notes = updatedNotes;
        //    hMResourceSchedulingAppointment.update();
        //    ttsCommit;
        //}
        //return hMResourceSchedulingAppointment.Notes;
        return updatedNotes;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDispositionDetails</Name>
				<Source><![CDATA[
    public boolean updateDispositionDetails(RecId _appointmentRecId,str _dispositionComments, str _dispositionFollowUp)
    {
        //HMResourceSchedulingAppointment hMResourceSchedulingAppointment;
    
        try
        {
            //ttsBegin;

            //hMResourceSchedulingAppointment = HMResourceSchedulingAppointment::find(_appointmentRecId,true);

            //if(hMResourceSchedulingAppointment)
            //{
            //    hMResourceSchedulingAppointment.DispositionComments = _dispositionComments;
            //    hMResourceSchedulingAppointment.DispositionFollowUp = _dispositionFollowUp;

            //    hMResourceSchedulingAppointment.update();
            //}

            //ttsCommit;
    
            return true;
        }
        catch
        {
            return false;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>