<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMCalendarControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
[FormControlAttribute('HMCalendar', '/resources/html/HMCalendar', classstr(HMCalendarControlBuild))]

class HMCalendarControl extends FormTemplateControl
{

    FormProperty dataSource;
    FormProperty eventDS;
    FormProperty resourceDS;
    FormProperty appTypeDS;
    FormProperty operatingTime;
    FormProperty workStartTime;
    FormProperty workEndTime;
    FormProperty refreshData;
    System.DateTime rangeStartDate,rangeEndDate;
    System.Collections.Generic.List<HMAppointmentCalendarSlotData> apptSlot;
    System.Collections.Generic.List<HMAppointmentCalendarResource> appResource;
    System.Collections.Generic.List<HMAppointmentColorData> apptColor;
   

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormBuildControl _build, FormRun _formRun)
    {
        super(_build, _formRun);
 
        this.setTemplateId('HMCalendar');
        this.setResourceBundleName('/resources/html/HMCalendar');

        dataSource = properties.addProperty(methodStr(HMCalendarControl, parmDatasource), Types::String);
        eventDS = properties.addProperty(methodStr(HMCalendarControl, parmEventDS), Types::String);
        resourceDS = properties.addProperty(methodStr(HMCalendarControl, parmResourceDS), Types::String);
        appTypeDS = properties.addProperty(methodStr(HMCalendarControl, parmAppTypeDS), Types::String);
        operatingTime = properties.addProperty(methodStr(HMCalendarControl, parmOperatingTime), Types::String);
        workStartTime = properties.addProperty(methodStr(HMCalendarControl, parmWorkStartTime), Types::String);
        workEndTime = properties.addProperty(methodStr(HMCalendarControl, parmWorkEndTime), Types::String);
        refreshData = properties.addProperty(methodStr(HMCalendarControl, parmRefreshData), Types::String);
        apptSlot = new System.Collections.Generic.List<HMAppointmentCalendarSlotData>();
        appResource = new System.Collections.Generic.List<HMAppointmentCalendarResource>();
        apptColor = new System.Collections.Generic.List<HMAppointmentColorData>(); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyBuild</Name>
				<Source><![CDATA[
    public void applyBuild()
    {
        super();
 
        HMCalendarControlBuild build = this.build();
 
        if (build)
        {
            this.parmDatasource(build.parmDatasource());
            this.parmEventDS(build.parmEventDS());
            this.parmResourceDS(build.parmResourceDS());
            this.parmAppTypeDS(build.parmAppTypeDS()); 
            this.parmOperatingTime(build.parmOperatingTime());
            this.parmWorkStartTime(build.parmWorkStartTime());
            this.parmWorkEndTime(build.parmWorkEndTime());
            this.parmRefreshData(build.parmRefreshData());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDatasource</Name>
				<Source><![CDATA[
    // Control Properties
    [FormPropertyAttribute(FormPropertyKind::Value, "Datasource")]
    public str parmDatasource(str _value = dataSource.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            dataSource.setValueOrBinding(_value);
        }
 
        return dataSource.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefreshData</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "RefreshData")]
    public str parmRefreshData(str _value = refreshData.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            refreshData.setValueOrBinding(_value);
        }

        return refreshData.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEventDS</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "EventDS")]
    public str parmEventDS(str _value = eventDS.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            eventDS.setValueOrBinding(_value);
        }
 
        return eventDS.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResourceDS</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "ResourceDS")]
    public str parmResourceDS(str _value = resourceDS.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            resourceDS.setValueOrBinding(_value);
        }
 
        return resourceDS.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAppTypeDS</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "AppTypeDS")]
    public str parmAppTypeDS(str _value = appTypeDS.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            appTypeDS.setValueOrBinding(_value);
        }
 
        return appTypeDS.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOperatingTime</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "OperatingTime")]
    public str parmOperatingTime(str _value = operatingTime.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            operatingTime.setValueOrBinding(_value);
        }
 
        return operatingTime.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkStartTime</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "WorkStartTime")]
    public str parmWorkStartTime(str _value = workStartTime.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            workStartTime.setValueOrBinding(_value);
        }
 
        return workStartTime.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkEndTime</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, "WorkEndTime")]
    public str parmWorkEndTime(str _value = workEndTime.parmValue())
    {
        if (!prmIsDefault(_value))
        {
            workEndTime.setValueOrBinding(_value);
        }
 
        return workEndTime.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>SlotSelected</Name>
				<Source><![CDATA[
   // Control Events
    [FormCommandAttribute("SlotSelected")]
    public void SlotSelected(str events, boolean isEvent, str startDate, str endDate)
    {
        

        
    }

]]></Source>
			</Method>
			<Method>
				<Name>Navigation</Name>
				<Source><![CDATA[
    [FormCommandAttribute("Navigation")]
    public void Navigation(str startDate, str endDate)
    {
        rangeStartDate = System.DateTime::Parse(StartDate);
        rangeEndDate = System.DateTime::Parse(endDate);
        //info(strFmt("Start date : %1, End date : %2",date2StrUsr(rangestartDate),date2StrUsr(rangeEndDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>DefaultRefreshValue</Name>
				<Source><![CDATA[
    [FormCommandAttribute("DefaultRefreshValue")]
    public void DefaultRefreshValue()
    {
        //info(strFmt("Start date : %1, End date : %2",date2StrUsr(rangestartDate),date2StrUsr(rangeEndDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getData</Name>
				<Source><![CDATA[
    [FormCommandAttribute("GetData")]
    public str getData(str a)
    {
        return a;
    }

]]></Source>
			</Method>
			<Method>
				<Name>get_rangeStartDate</Name>
				<Source><![CDATA[
    public date get_rangeStartDate()
    {
        return rangeStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>get_rangeEndDate</Name>
				<Source><![CDATA[
    public date get_rangeEndDate()
    {
        return rangeEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addNewItem</Name>
				<Source><![CDATA[
    public void addNewItem(HMAppointmentCalendarSlotData _slot)
    {
        apptSlot.add(_slot);
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddResourceType</Name>
				<Source><![CDATA[
    public void AddResourceType(HMAppointmentCalendarResource _resource)
    {
        appResource.add(_resource);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addColor</Name>
				<Source><![CDATA[
    public void addColor(HMAppointmentColorData _colorData)
    {
        apptColor.add(_colorData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindAppointmentColor</Name>
				<Source><![CDATA[
    public void bindAppointmentColor()
    {
        System.Web.Script.Serialization.JavaScriptSerializer js;
        if(apptColor.get_Count() > 0)
        {
            js = new System.Web.Script.Serialization.JavaScriptSerializer();
            var json = js.Serialize(apptColor);
            this.parmAppTypeDS(json.ToString());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindAppointment</Name>
				<Source><![CDATA[
    public void bindAppointment()
    {
        System.Web.Script.Serialization.JavaScriptSerializer js;
        if(apptSlot.get_Count() > 0)
        {
            js = new System.Web.Script.Serialization.JavaScriptSerializer();
            var json = js.Serialize(apptSlot);
            this.parmDatasource(json.ToString());
        }
        else
        {
            this.parmDatasource("[]");
        }
        if(appResource.get_Count() > 0)
        {
            js = new System.Web.Script.Serialization.JavaScriptSerializer();
            var json = js.Serialize(appResource);
            this.parmResourceDS(json.ToString());
        }
        else
        {
            this.parmResourceDS("[]");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>AddGroupCollection</Name>
				<Source><![CDATA[
    public void AddGroupCollection()
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAllAppointment</Name>
				<Source><![CDATA[
    public void deleteAllAppointment()
    {
        apptSlot.clear();
        appResource.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ReInitializeResource</Name>
				<Source><![CDATA[
    public void ReInitializeResource()
    {

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>