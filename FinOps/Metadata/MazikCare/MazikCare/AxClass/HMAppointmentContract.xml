<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMAppointmentContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
class HMAppointmentContract
{
    str             patientDOB,apptConfrmStatus,patientName,patientFileNumber,apptRecId,apptStatus,apptType,physician,clinic,apptdate,apptTime,arrivalTime,nextAvlblDate,nextAvlblTime,confirmationStatus,
                    patientRecId, clientName, patientImage,apptnum, age, doctorName, companyName, balanceStatus, email, phone,patientPhysicalFileNumber,isPrimaryApp, apptTypeRecId, caseId,
                    doctorPrimaryContact, doctorFirstName, doctorMiddleName, doctorLastname, roomName, doctorCode,clinicCode, apptEndDate, apptEndTime;

    int             duration, onHoldStatus, isRegistered;

    HMResourceSchedulingAppointmentStatus statusValue;

    Amount            balanceAmount;


    boolean     refusedToProvidePicture;
    boolean   triageRequired;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getResourceName</Name>
				<Source><![CDATA[
    public  str getResourceName(HMResourceSchedulingAppointment appointment,HMResourceMaster  _hMResourceMaster = null)
    {
        HMResourceSchedulingPlanningObject hMResourceSchedulingPlanningObject;
        HMResourceMaster hMResourceMaster;
        HcmWorker hcmWorker;
        VendTable vendTable;
    
         if(_hMResourceMaster == null)
            {
            hMResourceSchedulingPlanningObject = HMResourceSchedulingPlanningObject::find(appointment.HMResourceSchedulingPlanningObject);
            hMResourceMaster = HMResourceMaster::find(HMResourceSchedulingPlanningObject.HMResourceMaster);
            }
         else
            {
            hMResourceMaster = HMResourceMaster::find(_hMResourceMaster.RecId);
            }
    
         if(hMResourceMaster.Type == HMResourceType::Vendor)
            {
                select vendTable
                where vendTable.RecId == hMResourceMaster.RefRecId;
                this.parmDoctorName(vendTable.name());
            }
            else if(hMResourceMaster.Type == HMResourceType::Employee)
            {
                hcmWorker = HcmWorker::find(hMResourceMaster.RefRecId);
                if(hcmWorker)
                {
                this.parmDoctorName(hcmWorker.name());
                }
            }
            else if(hMResourceMaster.Type != HMResourceType::Employee && hMResourceMaster.Type != HMResourceType::Vendor)
            {    //Resource = Device Case
                 this.parmDoctorName(appointment.getAppointmentResource());
            }
    
        return this.parmDoctorName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAge</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmAge(str _age = age)
    {
        age = _age;
    
        return age;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptConfrmStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute('ConfirmationStatus')]
    public String50 parmApptConfrmStatus(String50 _apptConfrmStatus = apptConfrmStatus)
    {
        apptConfrmStatus = _apptConfrmStatus;
    
        return apptConfrmStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptdate</Name>
				<Source><![CDATA[
    [ DataMemberAttribute('AppointmentDate')]
    public Description255 parmApptdate(Description255 _apptdate = apptdate)
    {
        apptdate = _apptdate;
    
        return apptdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptEndDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptEndDate(Description255 _apptEndDate = apptEndDate)
    {
        apptEndDate = _apptEndDate;
    
        return apptEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptEndTime</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptEndTime(Description255 _apptEndTime = apptEndTime)
    {
        apptEndTime = _apptEndTime;
    
        return apptEndTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptnum</Name>
				<Source><![CDATA[
    [DataMemberAttribute("AppointmentNum")]
    public String50 parmApptnum(String50 _apptnum = apptnum)
    {
        apptnum = _apptnum;
    
        return apptnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptRecId(Description255 _apptRecId = apptRecId)
    {
        apptRecId = _apptRecId;
    
        return apptRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptStatus(Description255 _apptStatus = apptStatus)
    {
        apptStatus = _apptStatus;
    
        return apptStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptTime</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptTime(Description255 _apptTime = apptTime)
    {
        apptTime = _apptTime;
    
        return apptTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptType</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmApptType(Description255 _apptType = apptType)
    {
        apptType = _apptType;
    
        return apptType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApptTypeRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmApptTypeRecId(str _apptTypeRecId = apptTypeRecId)
    {
        apptTypeRecId = _apptTypeRecId;
    
        return apptTypeRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArrivalTime</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmArrivalTime(Description255 _arrivalTime = arrivalTime)
    {
        arrivalTime = _arrivalTime;
    
        return arrivalTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmbalanceAmount</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Amount parmbalanceAmount(Amount _balanceAmount = balanceAmount)
    {
        balanceAmount = _balanceAmount;
    
        return balanceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBalanceStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmBalanceStatus(str _balanceStatus = balanceStatus)
    {
        balanceStatus = _balanceStatus;
    
        return balanceStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCaseId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmCaseId(str _caseId = caseId)
    {
        caseId = _caseId;
    
        return caseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmClientName(Description255 _clientName = clientName)
    {
        clientName = _clientName;
    
        return clientName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClinic</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmClinic(Description255 _clinic = clinic)
    {
        clinic = _clinic;
    
        return clinic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClinicCode</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmClinicCode(str _clinicCode = clinicCode)
    {
        clinicCode = _clinicCode;
    
        return clinicCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompanyName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmCompanyName(str _companyName = companyName)
    {
        companyName = _companyName;
    
        return companyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmationStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public String50 parmConfirmationStatus(String50 _confirmationStatus = confirmationStatus)
    {
        confirmationStatus = _confirmationStatus;
    
        return confirmationStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorCode</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorCode(str _doctorCode = doctorCode)
    {
        doctorCode = _doctorCode;
    
        return doctorCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorFirstName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorFirstName(str _doctorFirstName = doctorFirstName)
    {
        doctorFirstName = _doctorFirstName;
    
        return doctorFirstName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorLastname</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorLastname(str _doctorLastname = doctorLastname)
    {
        doctorLastname = _doctorLastname;
    
        return doctorLastname;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorMiddleName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorMiddleName(str _doctorMiddleName = doctorMiddleName)
    {
        doctorMiddleName = _doctorMiddleName;
    
        return doctorMiddleName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorName(str _doctorName = doctorName)
    {
        doctorName = _doctorName;
    
        return doctorName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoctorPrimaryContact</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmDoctorPrimaryContact(str _doctorPrimaryContact = doctorPrimaryContact)
    {
        doctorPrimaryContact = _doctorPrimaryContact;
    
        return doctorPrimaryContact;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDuration</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Integer parmDuration(Integer _duration = duration)
    {
        duration = _duration;
    
        return duration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmail</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmEmail(str _email = email)
    {
        email = _email;
    
        return email;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCareBookRegistered</Name>
				<Source><![CDATA[
    [ DataMemberAttribute('IsCareBookRegistered')]
    public int parmIsCareBookRegistered(int _isRegistered = isRegistered)
    {
        isRegistered = _isRegistered;
    
        return isRegistered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrimaryApp</Name>
				<Source><![CDATA[
    [DataMemberAttribute('isPrimaryApp')]
    public String50 parmIsPrimaryApp(String50 _isPrimaryApp = isPrimaryApp)
    {
        isPrimaryApp = _isPrimaryApp;
    
        return isPrimaryApp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNextAvlblDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmNextAvlblDate(str _nextAvlblDate = nextAvlblDate)
    {
        nextAvlblDate = _nextAvlblDate;
    
        return nextAvlblDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNextAvlblTime</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmNextAvlblTime(str _nextAvlblTime = nextAvlblTime)
    {
        nextAvlblTime = _nextAvlblTime;
    
        return nextAvlblTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOnHoldStatus</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public int parmOnHoldStatus(int _onHoldStatus = OnHoldStatus)
    {
        OnHoldStatus = _onHoldStatus;
    
        return OnHoldStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientDOB</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public description parmPatientDOB(description _patientDOB = patientDOB)
    {
        patientDOB = _patientDOB;
    
        return patientDOB;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientFileNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmPatientFileNumber(Description255 _patientFileNumber = patientFileNumber)
    {
        patientFileNumber = _patientFileNumber;
    
        return patientFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientImage</Name>
				<Source><![CDATA[
    [DataMemberAttribute('PatientImage')]
    public str parmPatientImage(str  _patientImage = patientImage)
    {
        patientImage = _patientImage;
        return patientImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public Description255 parmPatientName(Description255 _patientName = patientName)
    {
        patientName = _patientName;
    
        return patientName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientPhysicalFileNumber</Name>
				<Source><![CDATA[
    [DataMemberAttribute("patientPhysicalFileNumber")]
    public str parmPatientPhysicalFileNumber(str _patientPhysicalFileNumber = patientPhysicalFileNumber)
    {
        patientPhysicalFileNumber = _patientPhysicalFileNumber;
    
        return patientPhysicalFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPatientRecId</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public String50 parmPatientRecId(String50 _patientRecId = patientRecId)
    {
        patientRecId = _patientRecId;
    
        return patientRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhone</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmPhone(str _phone = phone)
    {
        phone = _phone;
    
        return phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefusedToProvidePicture</Name>
				<Source><![CDATA[
    [DataMemberAttribute("RefusedToProvidePicture")]
    public boolean  parmRefusedToProvidePicture(boolean _refusedToProvidePicture = refusedToProvidePicture)
    {
        refusedToProvidePicture = _refusedToProvidePicture;
    
        return refusedToProvidePicture;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRoomName</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public str parmRoomName(str _roomName = roomName)
    {
        roomName = _roomName;
    
        return roomName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatusValue</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public HMResourceSchedulingAppointmentStatus parmStatusValue(HMResourceSchedulingAppointmentStatus _statusValue = statusValue)
    {
        statusValue = _statusValue;
    
        return statusValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTriageRequired</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public boolean parmTriageRequired(boolean _triageRequired = triageRequired)
    {
        triageRequired = _triageRequired;
    
        return triageRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAppointmentContract</Name>
				<Source><![CDATA[
    void populateAppointmentContract(HMResourceSchedulingAppointment appointment,str _resource = '')
    {
        date DOB;
        str imageString;
        HMPatient patient;
        HMPatientContract patientContract;
        HMCase hmCase;
        HMResourceSchedulingPlanningObject  hmResourceSchedulingPlanningObject;
        HMOrganizationalUnit                hmOrganizationalUnit;
        HMSpecialtyCode                     hmSpecialtyCode;
        HMResourceMaster                    hmResourceMaster;
        DirPartyTable                       dirPartyResource;
        DirPersonName                       dirPersonName;
    
        HMTime hmTime;
    
        this.parmApptConfrmStatus(enum2str(appointment.HMConfirmationStatus));
        this.parmApptdate(date2strUsr(appointment.AppointmentDate));
        this.parmApptEndDate(date2strUsr(appointment.AppointmentEndDate));
        this.parmApptnum(appointment.AppointmentNumber);
        this.parmApptRecId(int642str(appointment.RecId));
        this.parmApptStatus(enum2str(appointment.AppointmentStatus));
        this.parmStatusValue(appointment.AppointmentStatus);
        this.parmApptTime(appointment.displayTimeWithoutSec());
        this.parmApptEndTime(strDel(time2str(appointment.AppointmentEndTime,TimeSeparator::Colon,TimeFormat::AMPM),6,3));
        if(appointment.ArrivalTime!= -1)
        {
            this.parmArrivalTime(strDel(time2str(appointment.AppointmentTime - appointment.ArrivalTime,TimeSeparator::Colon,TimeFormat::AMPM),6,3));
        }
    
        this.parmApptType(HMResourceSchedulingTypeCode::find(appointment.HMResourceSchedulingTypeCode).Description);
        this.parmApptTypeRecId(int642str(appointment.HMResourceSchedulingTypeCode));
    
        hmOrganizationalUnit = HMOrganizationalUnit::find(appointment.getClinicRecId());
        this.parmClinic(hmOrganizationalUnit.Description);
        this.parmClinicCode(hmOrganizationalUnit.Code);
        this.parmRoomName(HMBuildingUnit::find(HMResourceSchedulingPlanningObject::find(appointment.HMResourceSchedulingPlanningObject).HMBuildingUnit).Description);
    
        if(_resource != '')
        {
            this.parmDoctorName(_resource);
        }
        else
        {
            select * from hmResourceMaster where hmResourceMaster.RecId == appointment.getAppointmentResourceRecId();
    
            dirPartyResource = DirPartyTable::findRec(hmResourceMaster.partyRefRecId());
    
            select * from dirPersonName where dirPersonName.Person == dirPartyResource.RecId;
    
            this.parmDoctorCode(hmResourceMaster.Code);
            this.parmDoctorName(dirPartyResource.Name);
            this.parmDoctorFirstName(dirPersonName.FirstName);
            this.parmDoctorMiddleName(dirPersonName.MiddleName);
            this.parmDoctorLastname(dirPersonName.LastName);
            this.parmDoctorPrimaryContact(dirPartyResource.primaryPhone());
        }
        //Pupulates this.parmDoctorName();
        /*if(_resource == '')
        {
        this.getResourceName(appointment);
        }
        else
        {
            this.parmDoctorName(_resource);
        } */
    
        select CRMCaseRefID from hmCase where hmCase.RecId == appointment.HMCase;
    
        this.parmCaseId(guid2str(hmCase.CRMCaseRefID));
    
        select RecId from hmResourceSchedulingPlanningObject where hmResourceSchedulingPlanningObject.RecId == appointment.HMResourceSchedulingPlanningObject
        join RecId from hmOrganizationalUnit where hmOrganizationalUnit.RecId == hmResourceSchedulingPlanningObject.HMOrganizationalUnit
        join IsTriageRequired from hmSpecialtyCode where hmSpecialtyCode.RecId == hmOrganizationalUnit.HMSpecialtyCode;
    
        this.parmTriageRequired(hmSpecialtyCode.IsTriageRequired);
        this.parmIsPrimaryApp(enum2str(appointment.PrimaryAppointment));
    
        patient = HMPatient::find(appointment.HMPatient);
    
        if(patient)
        {
            patientContract = new HMPatientContract();
            patientContract.populatePatientContract(patient);
    
            this.parmCompanyName(appointment.clientName());
            this.parmEmail(patientContract.parmPatientEmail());
            this.parmPhone(patientContract.parmPatientPhone());
            this.parmPatientFileNumber(patientContract.parmPatientFileNumber());
            this.parmPatientPhysicalFileNumber(patient.PhysicalChartNumber);
            this.parmPatientName(patientContract.parmPatientName());
            this.parmPatientRecId(int642str(patientContract.parmPatientRecId()));
            this.parmbalanceAmount(patient.outstandingBalance());
    
            if(this.parmbalanceAmount() > 0.00){
                if(patient.IsAuthorized == 1){
                    this.parmBalanceStatus("authorized");
                }
                else{
                    this.parmBalanceStatus("outstanding");
                }
            }else{
                this.parmBalanceStatus("clear");
            }
    
            this.parmOnHoldStatus(patientContract.parmIsOnHold());
            this.parmIsCareBookRegistered(patientContract.parmCareBookRegistration());
    
            DOB = patient.getBirthDate();
            this.parmPatientDOB(date2str(DOB, 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4));
            this.parmAge(patient.patientAgeInYears());
            this.parmPatientImage(patientContract.parmPatientImage());
            this.parmClientName(appointment.clientName());
            this.parmRefusedToProvidePicture(patient.RefusedToProvidePicture);
        }
    
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>