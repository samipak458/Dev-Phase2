<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMClaimTableListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMClaimTableListPageInteraction extends ListPageInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        QueryBuildRange         qbr;
        QueryBuildDataSource    qbd;
    
        if(this.listPage().listPageArgs().menuItemName() == menuitemDisplayStr(HMClaimTableDeniedListPage))
        {
            qbd = _query.dataSourceName('HMClaimVersion_1').addDataSource(tableNum(HMClaimReasonTable));
            qbd.relations(true);
            qbd.joinMode(JoinMode::InnerJoin);
            qbr = _query.dataSourceName('HMClaimVersion_1').addRange(fieldNum(HMClaimVersion, Status));
            qbr.value(SysQuery::value(HMClaimStatus::Denied));
            this.listPage().actionPaneControlVisible(formControlStr(HMClaimTableListPage,HMClaimReasonDropDialogDenialFilter),true);
            this.listPage().actionPaneControlVisible(formControlStr(HMClaimTableListPage,ResetFilter),true);
        }
        else if (this.listPage().listPageArgs().menuItemName() == menuItemDisplayStr(HMPaidClaimTableListPage))
        {
            _query.dataSourceName('HMClaimVersion_1').clearRange(fieldNum(HMClaimVersion, Status));
            qbr = _query.dataSourceName('HMClaimVersion_1').addRange(fieldNum(HMClaimVersion, Status));
            qbr.value(SysQuery::value(HMClaimStatus::Paid));
        }
        else if(this.listPage().listPageArgs().menuItemName() == menuitemDisplayStr(HMClaimTableOnHoldListPage))
        {
            qbr = _query.dataSourceName('HMClaimVersion_1').addRange(fieldNum(HMClaimVersion, Status));
            qbr.value(SysQuery::value(HMClaimStatus::Rejected));
        }
        else if(this.listPage().listPageArgs().menuItemName() == menuitemDisplayStr(HMClaimTableUnassignedListPage))
        {
            qbr = _query.dataSourceName('HMClaimTable_1').addRange(fieldNum(HMClaimTable, ClaimPool));
            qbr.value(SysQuery::value(0));
        }
        super(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    public void selectionChanged()
    {
        HMClaimVersion          hmClaimVersion;
        super();
    
        hmClaimVersion=HMClaimVersion::find(this.listPage().activeRecord('HMClaimVersion_1').RecId);
    /*
        if (hmClaimVersion.Status == HMClaimStatus::Generated)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
        else if (hmClaimVersion.Status == HMClaimStatus::InReview)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
    
        else if (hmClaimVersion.Status == HMClaimStatus::SubmitReady)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
        else if(hmClaimVersion.Status == HMClaimStatus::Submitted)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    true);
        }
        else if(hmClaimVersion.Status == HMClaimStatus::Rejected)
        {
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
        else if(hmClaimVersion.Status == HMClaimStatus::Denied)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        true);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
        else if(hmClaimVersion.Status == HMClaimStatus::Approved)
        {
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_InReview),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_SubmitReady), false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Submitted),   false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Denied),      false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Rejected),    false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Paid),        false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, EditButton),              false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, HMClaimAddNewDocDialog),  false);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, DeleteCommandButton),     true);
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, WriteOff),                false);
    
            this.listPage().actionPaneControlEnabled(formControlStr(HMClaimTableListPage, ClaimStatus_Approved),    false);
        }
    */
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>