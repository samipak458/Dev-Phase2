<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsPoolFormDatasourceMZ_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is extended to implement the sequence number logic.
/// </summary>
[ExtensionOf(formDataSourceStr(CustCollectionsPool, CustCollectionsPool))]
final class CustCollectionsPoolFormDatasourceMZ_Extension
{
    private real prevSeq;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializing and implementing the sequence number logic.
    /// </summary>
    public void initValue()
    {        
        CustCollectionsPool custCollectionsPoolCount, custCollectionsPool;
        real enableAutoSequence;

        next initValue();

        enableAutoSequence = HMBillParameters::find().HMEnableAutoSequenceNumber;

        if (enableAutoSequence)
        {
            custCollectionsPool = this.cursor();

            if (prevSeq == 0)
            {
                custCollectionsPool.HMSequenceNumber = 10;
            }

            else
            {
                custCollectionsPool.HMSequenceNumber = prevSeq;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>active</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the previous sequence number.
    /// </summary>
    /// <returns>int</returns>
    public int active()
    {
        CustCollectionsPool custCollectionsPool;
        custCollectionsPool = this.cursor();

        if (custCollectionsPool.RecId)
        {
            prevSeq = custCollectionsPool.HMSequenceNumber;
        }

        int ret = next active();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the sequence number before writing to database.
    /// </summary>
    public void write()
    {
        CustCollectionsPool custCollectionsPoollocal, custCollectionsPool;
        real enableAutoSequence;

        enableAutoSequence = HMBillParameters::find().HMEnableAutoSequenceNumber;

        custCollectionsPool = this.cursor();
  
        if (enableAutoSequence)
        {
            custCollectionsPoollocal.skipDataMethods(true);
                update_recordset custCollectionsPoollocal
                    setting HMSequenceNumber = custCollectionsPoollocal.HMSequenceNumber + 10
                        where custCollectionsPoollocal.HMSequenceNumber >= prevSeq
                            && custCollectionsPoollocal.Name != custCollectionsPool.Name;
        }

        next write();
        this.research(true);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>