<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMClaimClinicalDataHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMClaimClinicalDataHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCheifComplaintFromCase</Name>
				<Source><![CDATA[
    public static str getCheifComplaintFromCase(RecId appointmentRecId, guid CRMCaseId)
    {
        HMServiceAppHelper  appHelper = new HMServiceAppHelper();
        container           conResponse, conComplaint;
    
        boolean ret;
        int     indexValue;
        str     chiefComplaint;
    
        #define.indexOfComplaint(4);
    
        if (CRMCaseId || appointmentRecId)
        {
            try
            {
                ret = appHelper.callPostWebAPI('api/PatientEncounter/getCheifComplaintFromClinicalTemplate', "{'CaseId':'"+ guid2str(CRMCaseId)+"', 'AxAppoitnmentRefRecId':'"+ int642str(appointmentRecId)+"','currentPage':'1','searchOrder':'Chief Complaint'}"); //+ guid2str(CRMCaseId) + "\",\"currentPage\":\"1\"}");
            }
            catch (Exception::Error)
            {
                throw error("@MAZ13515");
            }
            if(ret)
            {
                conResponse = appHelper.parmRecordsCon();
            }
    
            if (conLen(conResponse) > 3)
            {
                conComplaint = conPeek(conResponse, #indexOfComplaint);
    
                if (conComplaint)
                {
                    indexValue = conFind(conComplaint, "Complaint");
    
                    indexValue += 1;
    
                    chiefComplaint = conPeek(conComplaint, indexValue);
                }
            }
        }
    
        return chiefComplaint;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDurationOfIllnessFromCase</Name>
				<Source><![CDATA[
    public static str getDurationOfIllnessFromCase(RecId appointmentRecId, guid CRMCaseId)
    {
        HMServiceAppHelper  appHelper = new HMServiceAppHelper();
        container           conResponse, conComplaint;
    
        boolean ret;
        int     indexValue;
        str     chiefComplaint;
    
        #define.indexOfComplaint(4);
    
        if (CRMCaseId || appointmentRecId)
        {
            try
            {
                ret = appHelper.callPostWebAPI('api/PatientEncounter/getCheifComplaintFromClinicalTemplate', "{'CaseId':'"+ guid2str(CRMCaseId)+"', 'AxAppoitnmentRefRecId':'"+ int642str(appointmentRecId)+"','currentPage':'1','searchOrder':'Duration of Illness'}"); //+ guid2str(CRMCaseId) + "\",\"currentPage\":\"1\"}");
            }
            catch (Exception::Error)
            {
                throw error("@MAZ13515");
            }
            if(ret)
            {
                conResponse = appHelper.parmRecordsCon();
            }
    
            if (conLen(conResponse) > 3)
            {
                conComplaint = conPeek(conResponse, #indexOfComplaint);
    
                if (conComplaint)
                {
                    indexValue = conFind(conComplaint, "Complaint");
    
                    indexValue += 1;
    
                    chiefComplaint = conPeek(conComplaint, indexValue);
                }
            }
        }
    
        return chiefComplaint;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>