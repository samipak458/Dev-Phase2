<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMScanning</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMScanning
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customException</Name>
				<Source><![CDATA[
    public static void customException(System.Exception _ex)
    {
        #define.DEVICE_UNAVAILABLE("0x80210015")
        #define.DEVICE_NOTSELECTED("0x80210064")
    
        if (strContains(_ex.get_Message(),#DEVICE_UNAVAILABLE))
        {
            checkFailed("@MAZ6080");
        }
        if (strContains(_ex.get_Message(),#DEVICE_NOTSELECTED))
        {
            checkFailed("@MAZ6081");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>scan</Name>
				<Source><![CDATA[
    public static Image scan()
    {
        #define.JPEG("{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}")
    
        System.Byte[]           imageBytes;
        System.IO.MemoryStream  ms;
        Image    image = null;
        System.Exception        ex;
        //todo: Ax7 services
        /*
        WIA.CommonDialogClass   commonDialogClass;
        WIA.VectorClass         vector;
        WIA.ImageFile           scannedImage    = null;
        WIA.DeviceManager       manager         = new WIA.DeviceManagerClass();
    
        try
        {
            commonDialogClass   = new WIA.CommonDialogClass();
    
            scannedImage  = commonDialogClass.ShowAcquireImage(WIA.WiaDeviceType::ScannerDeviceType, WIA.WiaImageIntent::UnspecifiedIntent, WIA.WiaImageBias::MinimizeSize, #JPEG, true, true, false);
    
            if (scannedImage != null)
            {
                vector      = scannedImage.get_FileData();   // <â€“ Converts the ImageFile to a byte array
                imageBytes  = vector.get_BinaryData();
                ms          = new System.IO.MemoryStream(imageBytes);
                image       = System.Drawing.Image::FromStream(ms);
    
                return image;
            }
            else
            {
                return image;
            }
        }
        catch
        {
            ex = ClrInterop::getLastException();
            if (ex != null)
            {
                ex = ex.get_InnerException();
                if (ex != null)
                {
                    HMScanning::customException(ex);
                    //error(ex.get_Message());
                }
            }
            return image;
        }
        */
        //todo: ax7 delete following return after uncommenting above code
        return image;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>