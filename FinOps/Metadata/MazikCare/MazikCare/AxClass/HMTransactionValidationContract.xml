<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMTransactionValidationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(HMTransactionValidationUIBuilder))
]
class HMTransactionValidationContract implements SysOperationValidatable
{
    TransDate       transDate;
    CustAccount     customerAccount;
    VendAccount     vendorAccount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr('Transaction Date')),
        SysOperationHelpTextAttribute(literalStr('Enter transaction date')),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmTransDate(TransDate _transDate = transDate)
    {
        transDate = _transDate;
        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr('Customer Account')),
        SysOperationHelpTextAttribute(literalStr('Enter customer account')),
        SysOperationDisplayOrderAttribute('2')
    ]
    public CustAccount parmCustomerAccount(CustAccount _customerAccount = customerAccount)
    {
        customerAccount = _customerAccount;
        return customerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendorAccount</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr('Vendor Account')),
        SysOperationHelpTextAttribute(literalStr('Enter vendor account')),
        SysOperationDisplayOrderAttribute('3')
    ]
    public VendAccount parmVendorAccount(VendAccount _vendorAccount = vendorAccount)
    {
        vendorAccount = _vendorAccount;
        return vendorAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean isValid = true;
        TransDate currentDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        if (!transDate)
        {
            isValid = checkFailed("Transaction Date must be filled");
        }
        else if (transDate < currentDate)
        {
            isValid = checkFailed("Transaction Date cannot be before today");
        }

        if (!customerAccount)
        {
            isValid = checkFailed("Customer Account must be filled");
        }

        if (!vendorAccount)
        {
            isValid = checkFailed("Vendor Account must be filled");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>