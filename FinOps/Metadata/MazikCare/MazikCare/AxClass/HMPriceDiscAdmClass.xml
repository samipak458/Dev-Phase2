<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPriceDiscAdmClass</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMPriceDiscAdmClass
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findDiscByJournalNum</Name>
				<Source><![CDATA[
    public static container findDiscByJournalNum(ItemId _itemId, PriceDiscJournalNum _journalNum, date _date = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
    {
        DiscPct   dsc1,dsc2;
        str         warningMsg;
        PriceDiscAdmTrans   priceDiscAdmTrans;
        select RecId,Percent1,Percent2,FromDate, ToDate from priceDiscAdmTrans
            where priceDiscAdmTrans.relation == PriceType::LineDiscSales
            && priceDiscAdmTrans.JournalNum == _journalNum
            && priceDiscAdmTrans.ItemRelation == _itemId;
        if(priceDiscAdmTrans)
        {
            if(_date >= priceDiscAdmTrans.FromDate && _date <= priceDiscAdmTrans.ToDate)
            {
                dsc1 = priceDiscAdmTrans.Percent1;
                dsc2 = priceDiscAdmTrans.Percent2;
            }
            else
            {
                warningMsg = strFmt("Discount trade agreement for service %1 expired",_itemId);
                dsc1 = 0;
                dsc2 = 0;
            }
        }
        else
        {
            warningMsg = strFmt("Discount trade agreement for service %1 does not exist",_itemId);
            dsc1 = 0;
            dsc2 = 0;
        }
        return [dsc1,dsc2,warningMsg];
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriceByJournalNum</Name>
				<Source><![CDATA[
    public static container findPriceByJournalNum(ItemId _itemId, PriceDiscJournalNum _journalNum, date _date = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
    {
        AmountMST   price;
        str         warningMsg;
        PriceDiscAdmTrans   priceDiscAdmTrans;
        select RecId,Amount,FromDate, ToDate from priceDiscAdmTrans
            where priceDiscAdmTrans.relation == PriceType::PriceSales
            && priceDiscAdmTrans.JournalNum == _journalNum
            && priceDiscAdmTrans.ItemRelation == _itemId;
        if(priceDiscAdmTrans)
        {
            if(_date >= priceDiscAdmTrans.FromDate && _date <= priceDiscAdmTrans.ToDate)
            {
                price = priceDiscAdmTrans.Amount;
            }
            else
            {
                warningMsg = strFmt("Trade agreement for service %1 expired",_itemId);
                price = 0;
            }
        }
        else
        {
            warningMsg = strFmt("Trade agreement for service %1 does not exist",_itemId);
            price = 0;
        }
        return [price,warningMsg];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>