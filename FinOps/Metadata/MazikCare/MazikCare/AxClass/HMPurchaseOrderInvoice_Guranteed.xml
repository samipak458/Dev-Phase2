<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPurchaseOrderInvoice_Guranteed</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMPurchaseOrderInvoice_Guranteed //extends RunBaseBatch 
{
    FromDate fromDate;
    ToDate   toDate;
    VendAccount custAccount;
    HMPurchaseOrderInvoiceDataContract contract;
    


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>performAction</Name>
				<Source><![CDATA[
    [SysEntryPointAttribute]
    public void performAction(HMPurchaseOrderInvoiceDataContract _dataContract)
    {
        contract = _dataContract;
        /*
        if (contract.parmCustAccount())
        {
            this.runForSingleCustomer();
        }
        else if (!contract.parmFromDate() && !contract.parmToDate())
        {
            this.prepareDates();
            this.run(fromDate, toDate);
        }
        else
        {
            this.run(contract.parmFromDate(), contract.parmToDate());
        }
        */
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareDates</Name>
				<Source><![CDATA[
    private void prepareDates()
    {
        fromDate = DateTimeUtil::date(DateTimeUtil::addMonths(DateTimeUtil::getSystemDateTime(), -1));
        toDate   = DateTimeUtil::date(DateTimeUtil::addDays(DateTimeUtil::getSystemDateTime(), -1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    private void run(FromDate _fromDate, ToDate _toDate, CustAccount _custAccount = custAccount)
    {
        /*
        HMClientInvoiceBillingMonthlyInvoice monthlyInvoice = HMClientInvoiceBillingMonthlyInvoice::construct();
        monthlyInvoice.parmFromDate(_fromDate);
        monthlyInvoice.parmToDate(_toDate);
        monthlyInvoice.parmCustAccount(_custAccount);

        monthlyInvoice.startProcess();
       */
    }

]]></Source>
			</Method>
			<Method>
				<Name>runForSingleCustomer</Name>
				<Source><![CDATA[
    private void runForSingleCustomer()
    {
        /*
        if (!contract.parmFromDate() && !contract.parmToDate())
        {
            this.prepareDates();
            this.run(fromDate, toDate, contract.parmCustAccount());
        }
        else
        {
            this.run(contract.parmFromDate(), contract.parmToDate(), contract.parmCustAccount());
        }*/
    }
    
    /*
    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
    #ENDMACRO

    TransDate           transDate;
    DialogField        dlgTransDate;
    VendAccount         VendAccount;
    DialogField         dlgVendAccount;
    
    /*
    protected Object dialog()
    {
        DialogRunbase       dialog = super();
        dialog.addGroup("@MAZ11647");
        dlgTransDate = dialog.addFieldValue(identifierStr(transDate),transDate);
        return dialog;
    }
*/
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public Object dialog()
    {
        /*
        Object ret;
    
        ret = super();
    
        return ret;
        */
        DialogRunbase       dialog = super();
        dialog.addGroup("@MAZ11647");
        dlgTransDate = dialog.addFieldValue(identifierStr(transDate),transDate);
        
        return dialog;
    }

    public boolean getFromDialog()
    {
        transDate   = dlgTransDate.value();

        return super();
    }

    public container pack()
    {
        return conNull();
    }

    public void run()
    {
        HMPurchaseOrderInvoiceClass HMPurchaseOrderInvoiceClass = new HMPurchaseOrderInvoiceClass();
        if(this.isInBatch())
        {
            HMPurchaseOrderInvoiceClass.createGuranteedInvoice(today());
        }
        else
        {
            HMPurchaseOrderInvoiceClass.createGuranteedInvoice(transDate);
        }
        super();
    }

    public boolean unpack(container packedClass)
    {
        return true;
    }

    client server static ClassDescription description()
    {
        return "@MAZ11646";
    }

    static void main(Args _args)
    {
        HMPurchaseOrderInvoice_Guranteed      runBaseBatch = new HMPurchaseOrderInvoice_Guranteed();
        if(HMBillParameters::find().InventTable_GuaranteedInvoice == '')
        {
            warning("@MAZ11651");
            return;
        }
        if( runBaseBatch.prompt() )
        {
            runBaseBatch.run();
        }
    }
    */

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>