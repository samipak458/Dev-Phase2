<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TestClaimVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Data;

class TestClaimVersion
{        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the class with the specified arguments.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {       
       /* HMClaimTable   claim;
        HMClaimVersion  ver;
        utcdatetime d1, d2;
 
        d1 = DateTimeUtil::minValue();
        d2 = DateTimeUtil::maxValue();

        while select validtimestate(d1, d2) * from ver
            join * from claim            
            where claim.RecId == ver.HMClaimTable
            && claim.ClaimID == 'MZKT-000038'
        {
            info(claim.ClaimID + enum2Str(ver.Status) + datetime2Str(ver.ValidFrom) + datetime2Str(ver.ValidTo));
        }*/

     /*   priceDiscAdmTrans priceDiscAdmTrans;
        InventDim inv;
        priceDiscTable priceDiscTable;
         

        inv.InventSiteId = 'Site1';
        inv.InventLocationId = 'DefaultWH';
        inv = InventDim::findOrCreate(inv);

       /* while select  priceDiscAdmTrans
                            order by QuantityAmountFrom, FromDate
                            where // priceDiscAdmTrans.OriginalPriceDiscAdmTransRecId == priceDiscAdmTrans.RecId
        priceDiscAdmTrans.Relation == PriceType::PriceSales
                                && priceDiscAdmTrans.ItemCode == TableGroupAll::Table
                                && priceDiscAdmTrans.ItemRelation == '0001'
                               // && priceDiscTable.AccountCode == accountCode
        //  && priceDiscTable.AccountRelation == accountRelation
        && priceDiscAdmTrans.UnitId == 'pcs'
                                && (priceDiscAdmTrans.Currency          == 'USD'
                                ||  (priceDiscAdmTrans.GenericCurrency
                                &&   priceDiscAdmTrans.Currency         == 'USD'))
                                && (priceDiscAdmTrans.InventDimId       == inv.inventDimId) //|| this.parmMCRPriceHistoryPotentialCalc())
        && priceDiscAdmTrans.AccountCode == TableGroupAll::Table
        && priceDiscAdmTrans.AccountRelation == 'BCBS'
                                && priceDiscAdmTrans.HMInsuranceContract == 5637144577
                                && priceDiscAdmTrans.HMInsuranceContractClassOrPlans == 5637144577
                                && priceDiscAdmTrans.HMInsuranceNetwork == 5637144576
                                && priceDiscAdmTrans.HMCaseType == HMCaseType::InPatient
                                && priceDiscAdmTrans.HMCPTHCPCCode == ''
                                && priceDiscAdmTrans.HMRevenueCode == ''
                                && priceDiscAdmTrans.Modifier1 == 0
                                && priceDiscAdmTrans.Modifier2 == 0
                                && priceDiscAdmTrans.Modifier3 == 0
                                && priceDiscAdmTrans.Modifier4 == 0*/
        while select priceDiscTable
                order by QuantityAmountFrom, FromDate
                join priceDiscAdmTrans
                where priceDiscTable.OriginalPriceDiscAdmTransRecId == priceDiscAdmTrans.RecId
            && priceDiscTable.Relation            == 4
                    && priceDiscTable.ItemCode           == TableGroupAll::Table
                    && priceDiscTable.ItemRelation       == '0001'
                    && priceDiscTable.AccountCode        == TableGroupAll::Table
                    // <GEERU>
                    && priceDiscTable.AccountRelation    == 'bcbs'
                    // </GEERU>
                    && priceDiscTable.UnitId             == 'pcs'
                    && (priceDiscTable.Currency          == 'USD'
                    || (priceDiscTable.GenericCurrency
                    &&  priceDiscTable.Currency          == 'USD'))
                    //Zain -- new parameter conditions
                    && priceDiscAdmTrans.AccountCode == TableGroupAll::Table//TableGroupAll::Table
                                && priceDiscAdmTrans.AccountRelation == 'BCBs'
                    && priceDiscAdmTrans.HMInsuranceContract == 5637144577
                    && priceDiscAdmTrans.HMInsuranceContractClassOrPlans == 5637144577
                    && priceDiscAdmTrans.HMInsuranceNetwork == 5637144576
                    && priceDiscAdmTrans.HMCaseType == HMCaseType::InPatient
                    && priceDiscAdmTrans.HMCPTHCPCCode == ''
                                && priceDiscAdmTrans.HMRevenueCode == ''
                                && priceDiscAdmTrans.Modifier1 == 0
                                && priceDiscAdmTrans.Modifier2 == 0
                                && priceDiscAdmTrans.Modifier3 == 0
                                && priceDiscAdmTrans.Modifier4 == 0
                    //Zain
                    // <GEERU>
                    //&& (!countryRegion_RU || priceDiscTable.AgreementHeaderExt_RU == _agreementHeaderExtRecId)
                    // </GEERU>
                    && (priceDiscTable.InventDimId       == inv.inventDimId )
        {
            real pr = priceDiscAdmTrans.Amount;
        }*/

   /*    RecId               contractRecId = 0;
        TableGroupAll       stateCode = TableGroupAll::GroupId;
        str stateGroup = "";
        TableGroupAll       productCode = TableGroupAll::GroupId;
        str productGroup = "";

        HMPriceMatrix       priceMatrix;
        HMPriceRuleTypeDetails  priceRuleTypeDetails;


        HMPriceListMatrix   priceListMatrix;
        PriceDiscAdmTable   priceDiscAdmTable;
        PriceDiscAdmTrans   priceDiscAdmTrans;
        Integer             idx;
        Set priceSet = new Set(Types::Real);
        /*
        idx = 0;

        while (idx < 9)
        {
            productCode         = idx mod 3;
            stateCode           = idx div 3;

            switch(productCode)
            {
                case TableGroupAll::Table:
                    productGroup = "";
                    break;
                case TableGroupAll::GroupId:
                    productGroup = "";
                    break;
                case TableGroupAll::All:
                    productGroup = "";
                    break;
            }

            switch(stateCode)
            {
                case TableGroupAll::Table:
                    stateGroup = "";
                    break;
                case TableGroupAll::GroupId:
                    stateGroup = "";
                    break;
                case TableGroupAll::All:
                    stateGroup = "";
                    break;
            }

            select RecId, HMPriceRuleType from priceMatrix
                where priceMatrix.HMInsuranceContract == contractRecId
                && priceMatrix.ProductCode == productCode
                && priceMatrix.Product == productGroup
                && priceMatrix.State == stateGroup
                && priceMatrix.StateCode == stateCode
                && priceMatrix.StartDate >= today()
                && priceMatrix.EndDate <= today();

            if(priceMatrix.RecId)
            {
                while select * from priceRuleTypeDetails
                    order by priceRuleTypeDetails.Priority
                    where priceRuleTypeDetails.HMPriceRuleType == priceMatrix.HMPriceRuleType
                {
                    if(priceRuleTypeDetails.Evaluate == HMEvaluate::InterPriceGroup)
                    {
                        int priceGroup = 1;

                        while(priceGroup)
                        {
                            while select * from priceListMatrix
                            order by  priceListMatrix.Priority
                            where priceListMatrix.HMPriceMatrix == priceMatrix.RecId
                                && priceListMatrix.PriceGroup == priceGroup                            
                                join * from priceDiscAdmTrans
                                join RecId from priceDiscAdmTable
                                where priceDiscAdmTrans.JournalNum == priceDiscAdmTable.JournalNum
                                && priceDiscAdmTable.RecId == priceListMatrix.PriceDiscAdmTable
                                //complete query
                            {
                                switch(priceListMatrix.Operator)
                                {
                                    case HMPriceOperator::Multiplication:
                                        // stateGroup = "";
                                        break;
                                    case HMPriceOperator::Division:
                                        // stateGroup = "";
                                        break;
                                    case HMPriceOperator::Minus:
                                        // stateGroup = "";
                                        break;
                                    case HMPriceOperator::Plus:
                                        // stateGroup = ""; 
                                        break;
                                }

                                priceSet.add(priceDiscAdmTrans.Amount);
                            }                            

                            if(priceSet.empty())
                            {
                                priceGroup++;
                            }
                            else
                            {
                                break;
                            }
                        }

                        //get price based on rule
                        //priceRuleTypeDetails.PricingRule
                    }
                    else  if(priceRuleTypeDetails.Evaluate == HMEvaluate::IntraPriceGroup)
                    {

                    }
                }


                



                break;
            }
            else
            {
                idx++;
            }
        }    */
              
        while select * from priceListMatrix
                        order by  priceListMatrix.Priority
                        where priceListMatrix.HMPriceMatrix == 5637144576
                            && priceListMatrix.PriceGroup == 1
                            join * from priceDiscAdmTrans
                            join RecId from priceDiscAdmTable
                            where priceDiscAdmTrans.JournalNum == priceDiscAdmTable.JournalNum
                            && priceDiscAdmTable.RecId == priceListMatrix.PriceDiscAdmTable
                            && priceDiscAdmTrans.ItemCode == TableGroupAll::Table
                            && priceDiscAdmTrans.ItemRelation == '77073'
                            && priceDiscAdmTrans.InventDimId == 'MZKT-000001'
                            && priceDiscAdmTrans.UnitId       == 'ea'
            && priceDiscAdmTrans.HMCaseType == HMCaseType::OutPatient
                          //  && priceDiscAdmTrans.HMCPTHCPCCode == _CPTCode
                          && priceDiscAdmTrans.HMRevenueCode == ''
                            && priceDiscAdmTrans.Modifier1 == 0
                            && priceDiscAdmTrans.Modifier2 == 0
                            && priceDiscAdmTrans.Modifier3 == 0
                            && priceDiscAdmTrans.Modifier4 == 0
        {
            Amount priceTmp = priceDiscAdmTrans.Amount;

            
        }*/

        HMCaseService ser = new HMCaseService();

        ser.updateCaseTransStatus(5637246984, HMServiceStatus::Complete, true, 0, "123", emptyGuid(), 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>