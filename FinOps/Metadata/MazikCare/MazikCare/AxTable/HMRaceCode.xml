<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMRaceCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMRaceCode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(HMRaceCodeRecId _recid)
    {
        boolean ret = true;
    
        if(!HMRaceCode::exist(_recid))
        {
            ret = checkFailed(strfmt(HMRaceCode::txtNotExist(), 'The specific record in '+tableid2name(tablenum(HMRaceCode))));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>HMRaceCode</c> table exists.
    /// </summary>
    /// <param name="_recid">
    ///    The record ID of the <c>HMRaceCode</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(HMRaceCodeRecId   _recid)
    {
        return _recid && (select firstonly RecId from hmRaceCode
                                 where hmRaceCode.RecId == _recid).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMRaceCode</c> table.
    /// </summary>
    /// <param name="_recid">
    ///    The record ID of the <c>HMRaceCode</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMRaceCode</c> table; otherwise, an empty record.
    /// </returns>
    
    public static HMRaceCode find(
    HMRaceCodeRecId   _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMRaceCode  raceCode;
        raceCode.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            raceCode.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from raceCode where raceCode.RecId == _recid;
    
        return raceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRaceCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>HMRaceCode</c> table specified by a template name.
    /// </summary>
    /// <param name="_raceCodeID">
    ///    The race code id of the <c>HMRaceCode</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMRaceCode</c> table; otherwise, an empty record.
    /// </returns>
    
    public static HMRaceCode findByRaceCode(
    HMRaceCodeId        _raceCodeID,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMRaceCode  raceCode;
        raceCode.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            raceCode.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly RecId from raceCode where raceCode.RaceCodeId == _raceCodeID;
    
        return raceCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupRacecode</Name>
				<Source><![CDATA[
    public client static void lookupRacecode(FormStringControl _racecodeSetStringControl)
    {
        Args e;
        FormRun formRun;
    
        if (_racecodeSetStringControl!=null)
        {
            e=new Args();
            e.name(formStr(HMRaceCodeLookup));
            e.lookupField(fieldNum(HMRaceCode,RaceCodeId));
            e.lookupValue(_racecodeSetStringControl.valueStr());
            e.caller(_racecodeSetStringControl);
    
            formRun = classFactory.formRunClass(e);
            formRun.init();
    
           _racecodeSetStringControl.performFormLookup(formRun);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMRaceCode</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@MAZ860</DeveloperDocumentation>
	<FormRef>HMRaceCode</FormRef>
	<Label>@MAZ13</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RaceCodeId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex></ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>RaceCodeIdIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RaceCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RaceCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RaceCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RaceCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RaceCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@MAZ661</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RaceCodeId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>HMRaceCodeId</ExtendedDataType>
			<HelpText>@MAZ1269</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RaceCodeIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RaceCodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>