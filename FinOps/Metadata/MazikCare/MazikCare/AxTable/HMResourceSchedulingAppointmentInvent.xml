<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMResourceSchedulingAppointmentInvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMResourceSchedulingAppointmentInvent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public str caption()
    {
        str ret;
        HMResourceSchedulingAppointment hmResourceSchedulingAppointment;
    
        select HMpatient from  hmResourceSchedulingAppointment
            where hmResourceSchedulingAppointment.RecId == this.HMResourceSchedulingAppointment;
    
        ret = hmResourceSchedulingAppointment.getPatientName();
    
        return ret;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultResourceMasterFromVendor</Name>
				<Source><![CDATA[
    public void defaultResourceMasterFromVendor()
    {
        HMResourceMaster    hmResourceMaster;
        VendTable           vendTable;
    
        if(!this.VendTable)
        {
            this.HMResourceMaster = 0;
        }
        else
        {
            select RecId from vendTable
                where vendTable.AccountNum == this.VendTable;
    
            select RecId from hmResourceMaster
            where hmResourceMaster.RefRecId == vendTable.RecId
            && hmResourceMaster.Type == HMResourceType::Vendor;
    
            if(hmResourceMaster.RecId)
            {
                this.HMResourceMaster = hmResourceMaster.RecId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultVendorFromResourceMaster</Name>
				<Source><![CDATA[
    public void defaultVendorFromResourceMaster()
    {
        HMResourceMaster    hmResourceMaster;
        VendTable           vendTable;
    
        if(!this.HMResourceMaster)
        {
            this.VendTable = '';
        }
        else
        {
            select RefRecId,Type from hmResourceMaster
            where hmResourceMaster.RecId == this.HMResourceMaster;
    
            if(hmResourceMaster.Type == HMResourceType::Vendor)
            {
                select AccountNum from vendTable
                where vendTable.recid == hmResourceMaster.RefRecId;
                this.VendTable = vendTable.AccountNum;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        RecId apptRecId;
        apptRecId = this.HMResourceSchedulingAppointment;
        super();
        HMResourceSchedulingAppointmentBilling::updateBillingStatus(apptRecId);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProtocol</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public display boolean isProtocol()
    {
        InventTable     inventTable = InventTable::find(this.InventTable);
    
        return inventTable.PmfProductType == PmfProductType::BOM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pastDue</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display NoYes pastDue()
    {
        return this.ResultExpectedDate+1 <= DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()) ? NoYes::Yes :  NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performedBy</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display Name performedBy()
    {
        HMServiceLog    hmserviceLog;
        Name            retVal;
        VendTable       vendTable;
        HcmWorker       hcmWorker;
    
        if(this.HMServiceStatus == HMServiceStatus::Complete)
        {
            select firstOnly HMIsWorker, HMUserRecId from hmserviceLog
            order by hmserviceLog.HMServiceLogDate desc, hmserviceLog.HMServiceLogTime desc
                where hmserviceLog.HMResourceSchedulingAppointmentInvent == this.RecId
                && hmserviceLog.HMServiceLogStatus == HMServiceStatus::Complete;
    
            if(hmserviceLog.HMIsWorker)
            {
                select Person from hcmWorker where hcmWorker.RecId == hmserviceLog.HMUserRecId;
    
                retVal = hcmWorker.name();
            }
            else
            {
                select Party from vendTable where vendTable.RecId == hmserviceLog.HMUserRecId;
    
                retVal = vendTable.name();
            }
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performedDate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display TransDate performedDate()
    {
        HMServiceLog    hmserviceLog;
    
        if(this.HMServiceStatus == HMServiceStatus::Complete)
        {
            select firstOnly HMServiceLogDate from hmserviceLog
            order by hmserviceLog.HMServiceLogDate desc, hmserviceLog.HMServiceLogTime desc
                where hmserviceLog.HMResourceSchedulingAppointmentInvent == this.RecId
                && hmserviceLog.HMServiceLogStatus == HMServiceStatus::Complete;
        }
    
        return hmserviceLog.HMServiceLogDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>protocolItemDescription</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display EcoResProductName protocolItemDescription()
    {
        CustAccount clientAccount;
        HMClientProtocol    hmClientProtocol;
        if(this.Protocol == '')
        {
            return '';
        }
        clientAccount = HMResourceSchedulingAppointment::getClientAccount(this.HMResourceSchedulingAppointment);
        if(clientAccount)
        {
            select * from hmClientProtocol
            where hmClientProtocol.ClientAccount == clientAccount
            && hmClientProtocol.ItemId == this.Protocol;
            if(hmClientProtocol)
            {
                return hmClientProtocol.itemAlias();
            }
        }
        return InventTable::find(this.Protocol).itemDescriptionOrName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>receivedDate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display TransDate receivedDate()
    {
        HMResultsLog    hmResultsLog;
    
        if(this.ResultStatus != HMResultStatus::AwaitingResult && this.ResultStatus != HMResultStatus::AbnormalReceived)
        {
            select firstOnly LogDate from hmResultsLog
            order by hmResultsLog.LogDate desc, hmResultsLog.LogTime desc
                where hmResultsLog.HMResourceSchedulingAppointmentInvent == this.RecId
                && (hmResultsLog.Status == HMResultStatus::ResultReceived
                || hmResultsLog.Status == HMResultStatus::Abnormal);
        }
    
        return hmResultsLog.LogDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showItemDescription</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public display EcoResDescription showItemDescription()
    {
        return HMInventTableClass::showDescription(this.InventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update(boolean createLog = true)
    {
        HMServicesService objService = new HMServicesService();
        RecId userRecId;
        boolean isWorker = true, updateVisit;
        UserExternalParty       userExternalParty;
        VendTable               vendTable;
    
        if(this.orig().HMServiceStatus != this.HMServiceStatus)
        {
            if(createLog)
            {
                userRecId = HcmWorkerLookup::currentWorker();
                if(userRecId)
                {
                    isWorker = true;
                }
                else
                {
                    select firstOnly ExternalParty from userExternalParty
                        where userExternalParty.User == curUserId()
                        && userExternalParty.ExternalEntityType == UserExternalPartyEntityType::Vendor
                            join RecId from vendTable
                                where vendTable.Party == userExternalParty.ExternalParty;
    
                    if(vendTable.RecId)
                    {
                        isWorker = false;
                        userRecId = vendTable.RecId;
                    }
                }
    
                HMResourceSchedulingHelper::createServiceLog(this.RecId, userRecId, isWorker, this.HMServiceStatus, '', ReasonTable::find(this.ServiceSubStatus).RecId, NoYes::No, NoYes::No);
            }
    
            if(this.HMServiceStatus == HMServiceStatus::Complete)
            {
                if(!HMInventTableClass::isCancelaltionNoShowCode(this.InventTable))
                {
                    this.ResultExpectedDate = HMResultsManagement::getExpectedDate(this.InventTable, HMResourceMasterHelper::isResourceExternal(HMResourceSchedulingAppointment::find(this.HMResourceSchedulingAppointment).getAppointmentResourceRecId()));
    
                    if(this.ResultExpectedDate != DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
                    {
                        this.ResultStatus = HMResultStatus::AwaitingResult;
                    }
                    else
                    {
                        this.ResultStatus = HMResultStatus::ResultReceived;
                    }
    
                    HMResultsManagement::createResultLog(this.RecId, this.ResultStatus);
                    updateVisit = true;
                }
            }
            else if(this.orig().HMServiceStatus == HMServiceStatus::Complete)
            {
                this.ResultStatus = HMResultStatus::None;
    
                this.ResultExpectedDate = dateNull();
    
                HMResultsManagement::createResultLog(this.RecId, this.ResultStatus);
                updateVisit = true;
            }
        }
    
        super();
    
        if(updateVisit)
        {
            HMResultsManagement::updateVisitResultStatus(this.HMResourceSchedulingAppointment);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        HMInventTable                           hmInventTable;
        HMClientProtocol                        hmClientProtocol;
        HMClientProtocolPriceOverrideDetails    HMClientProtocolPriceOverrideDetails;
        ret = super();
    
        if(ret)
        {
            if(this.PatientResponsibility == HMPatientPaymentResponsibility::Client)
            {
                if(HMResourceSchedulingAppointment::getClientAccount(this.HMResourceSchedulingAppointment) == '')
                {
                    ret = checkfailed(strFmt("@MAZ11762", this.InventTable));
                }
            }
            else if(this.PatientResponsibility == HMPatientPaymentResponsibility::Government)
            {
                select RAMQ,RamqClient from hmInventTable
                where hmInventTable.InventTable == this.InventTable;
                if(hmInventTable.RAMQ == NoYes::No || hmInventTable.RamqClient == '')
                {
                    ret = checkFailed(strFmt("@MAZ11763",this.inventTable));
                }
            }
    
            if(this.NotRequired == NoYes::Yes && this.Protocol != '')
            {
                select RecId from hmClientProtocol
                where hmClientProtocol.ItemId == this.Protocol
                && hmClientProtocol.ClientAccount == HMResourceSchedulingAppointment::getClientAccount(this.HMResourceSchedulingAppointment)
                && hmClientProtocol.CalculationMethod == HMProtocolCalculationMethod::PriceOverride;
    
                if(hmClientProtocol.RecId != 0)
                {
                    select RecId from HMClientProtocolPriceOverrideDetails
                    where HMClientProtocolPriceOverrideDetails.HMClientProtocol == hmClientProtocol.RecId
                    && HMClientProtocolPriceOverrideDetails.ItemId == this.InventTable;
                    if(HMClientProtocolPriceOverrideDetails.RecId != 0)
                    {
                        ret = checkFailed(strFmt("@MAZ12249",this.InventTable));
                    }
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMResourceSchedulingAppointmentInvent</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMResourceSchedulingAppointmentInvent</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMResourceSchedulingAppointmentInvent</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMResourceSchedulingAppointmentInvent::exist(_recId))
        {
            ret = checkFailed(strfmt(HMResourceSchedulingAppointmentInvent::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createApptInvent</Name>
				<Source><![CDATA[
    public static RecId createApptInvent(RecId _appointmentRecId,
                                            ItemId _itemId,
                                            HMProtocolId _protocolId,
                                            HMPatientPaymentResponsibility _responsibility,
                                            HMServiceStatus _serviceStatus,
                                            HMPriorAuthorizationNumber _preAuthNumber,
                                            date _preAuthDate)
    {
        hmResourceSchedulingAppointmentInvent   hmResourceSchedulingAppointmentInvent;
        try
        {
            hmResourceSchedulingAppointmentInvent.clear();
            hmResourceSchedulingAppointmentInvent.initValue();
            hmResourceSchedulingAppointmentInvent.HMResourceSchedulingAppointment = _appointmentRecId;
            hmResourceSchedulingAppointmentInvent.InventTable = _itemId;
            hmResourceSchedulingAppointmentInvent.PatientResponsibility = _responsibility;
            hmResourceSchedulingAppointmentInvent.HMServiceStatus = _serviceStatus;
            hmResourceSchedulingAppointmentInvent.Protocol = _protocolId;
            hmResourceSchedulingAppointmentInvent.PreAuthorizationNumber = _preAuthNumber;
            hmResourceSchedulingAppointmentInvent.PreAuthValidityDate = _preAuthDate;
            hmResourceSchedulingAppointmentInvent.insert();
            return hmResourceSchedulingAppointmentInvent.RecId;
        }
        catch
        {
            return 0;
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMResourceSchedulingAppointmentInvent</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMResourceSchedulingAppointmentInvent</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     HMResourceSchedulingAppointmentInvent
                 where
                     HMResourceSchedulingAppointmentInvent.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMResourceSchedulingAppointmentInvent</c> table.
    /// </summary>
    /// <param name="_recid">
    ///    The record ID of the <c>HMResourceSchedulingAppointmentInvent</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMResourceSchedulingAppointmentInvent</c> table; otherwise, an empty record.
    /// </returns>
    public static HMResourceSchedulingAppointmentInvent find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMResourceSchedulingAppointmentInvent   hmResourceSchedulingAppointmentInvent;
    
        hmResourceSchedulingAppointmentInvent.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmResourceSchedulingAppointmentInvent.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmResourceSchedulingAppointmentInvent
            where hmResourceSchedulingAppointmentInvent.RecId == _recid;
    
        return hmResourceSchedulingAppointmentInvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMResourceSchedulingAppointmentInvent</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
			<Method>
				<Name>ItemDescription</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display Name ItemDescription()
    {
    return InventTable::find(this.InventTable).NameAlias;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MazikCarePhysio</ConfigurationKey>
	<DeveloperDocumentation>@MAZ7837</DeveloperDocumentation>
	<Label>@MAZ7836</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>HMResourceSchedulingAppointment</TitleField1>
	<TitleField2>InventTable</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS110757</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrugReference</Name>
			<ExtendedDataType>HMDrugReference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmWorker</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>Specify doctor</HelpText>
			<Label>@MAZ11884</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMMedSite</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ12094</HelpText>
			<Label>@MAZ12094</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMResourceMaster</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ12086</HelpText>
			<Label>@SYS89158</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMResourceSchedulingAppointment</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMServiceProviderType</Name>
			<Label>@MAZ1877</Label>
			<EnumType>HMServiceProviderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMServiceStatus</Name>
			<EnumType>HMServiceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTable</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Invoiced</Name>
			<HelpText>@MAZ10657</HelpText>
			<Label>@PSA11524</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NotRequired</Name>
			<HelpText>@MAZ12195</HelpText>
			<Label>@SYS115755</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PatientResponsibility</Name>
			<EnumType>HMPatientPaymentResponsibility</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>POPosted</Name>
			<Label>@MAZ:HMPOPosted</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PreAuthorizationNumber</Name>
			<ExtendedDataType>HMPriorAuthorizationNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PreAuthValidityDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@MAZ13061</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Price</Name>
			<ExtendedDataType>SalesPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Protocol</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@MAZ10609</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchLine</Name>
			<Label>@MAZ:HMPurchLine</Label>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RelatedAppointmentRecId</Name>
			<Label>@MAZ11527</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ResultExpectedDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@MAZ12544</HelpText>
			<Label>@SYS93538</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ResultStatus</Name>
			<EnumType>HMResultStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesLine</Name>
			<Label>@MAZ:HMSalesline</Label>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceSubStatus</Name>
			<ExtendedDataType>ReasonCode</ExtendedDataType>
			<Label>@MAZ12269</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendTable</Name>
			<HelpText>Specify doctor</HelpText>
			<Label>@MAZ11883</Label>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendTableResult</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ12574</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HMResourceSchedulingAppointmentInvent</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HMResourceSchedulingAppointment</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Protocol</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HcmWorker</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmWorker</Name>
					<Field>HcmWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMMedSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMMedSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMMedSite</Name>
					<Field>HMMedSite</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMResourceMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMResourceMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMResourceMaster</Name>
					<Field>HMResourceMaster</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMResourceSchedulingAppointment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMResourceSchedulingAppointment</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMResourceSchedulingAppointment</Name>
					<Field>HMResourceSchedulingAppointment</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable_protocol</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTable_protocol</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Protocol</Name>
					<Field>Protocol</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchLine</Name>
					<Field>PurchLine</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTable_DeclineStatus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ReasonTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceSubStatus</Name>
					<Field>ServiceSubStatus</Field>
					<RelatedField>Reason</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ReasonIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesLine</Name>
					<Field>SalesLine</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PaymentType</Name>
					<RelatedField>PaymentType</RelatedField>
					<Value>5</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PaymentType_1</Name>
					<RelatedField>PaymentType</RelatedField>
					<Value>4</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PaymentType_2</Name>
					<RelatedField>PaymentType</RelatedField>
					<Value>3</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PaymentType_3</Name>
					<RelatedField>PaymentType</RelatedField>
					<Value>2</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PaymentType_4</Name>
					<RelatedField>PaymentType</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendTable</Name>
					<Field>VendTable</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTableResult</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTableResult</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendTableResult</Name>
					<Field>VendTableResult</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>