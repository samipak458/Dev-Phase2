<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPatientChargeEntryLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMPatientChargeEntryLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        /*
        RecId  chargeEntry;
        int procedureOrder;

        chargeEntry =  this.HMPatientChargeEntryTable;
        procedureOrder = this.ProcedureOrder;

        */

        super();
        /*
        this.updateOrdering(chargeEntry, procedureOrder);
        */
        //todo: bupa code comment

    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCPTcode</Name>
				<Source><![CDATA[
    display HMProcedureMasterCode displayCPTcode()
    {
        return HMInventTable::findByItemId(this.InventTable).HMProcedureMasterCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllProcedureDiagnosis</Name>
				<Source><![CDATA[
    display Description255 getAllProcedureDiagnosis()
    {
    
        HMDiagnosisDictionary           hmDiagnosisDictionary;
        Description255                  appendDiagnosis;
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis1;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = hmDiagnosisDictionary.Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis2;
        if (hmDiagnosisDictionary.RecId > 0)
        {
          appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis3;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis4;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.Code;
        }
    
       //         ret = strFmt("%1 (%2)", hmDiagnosisDictionary.Description, hmDiagnosisDictionary.Code);
        return appendDiagnosis;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllProcedureDiagnosisICD</Name>
				<Source><![CDATA[
    display Description255 getAllProcedureDiagnosisICD()
    {
    
        HMDiagnosisDictionary           hmDiagnosisDictionary;
        Description255                  appendDiagnosis;
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis1;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = hmDiagnosisDictionary.ICD9Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis2;
        if (hmDiagnosisDictionary.RecId > 0)
        {
          appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.ICD9Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis3;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.ICD9Code;
        }
    
        select * from hmDiagnosisDictionary
        where hmDiagnosisDictionary.RecId == this.Diagnosis4;
        if (hmDiagnosisDictionary.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmDiagnosisDictionary.ICD9Code;
        }
    
       //         ret = strFmt("%1 (%2)", hmDiagnosisDictionary.Description, hmDiagnosisDictionary.Code);
        return appendDiagnosis;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllProcedureModifier</Name>
				<Source><![CDATA[
    display Description255 getAllProcedureModifier()
    {
    
        HMProcedureModifier           hmProcedureModifier;
        Description255                  appendDiagnosis;
    
        select * from hmProcedureModifier
        where hmProcedureModifier.RecId == this.Modifier1;
        if (hmProcedureModifier.RecId > 0)
        {
            appendDiagnosis = hmProcedureModifier.Code;
        }
    
        select * from hmProcedureModifier
        where hmProcedureModifier.RecId == this.Modifier2;
        if (hmProcedureModifier.RecId > 0)
        {
          appendDiagnosis = appendDiagnosis + ', '+ hmProcedureModifier.Code;
        }
    
        select * from hmProcedureModifier
        where hmProcedureModifier.RecId == this.Modifier3;
        if (hmProcedureModifier.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmProcedureModifier.Code;
        }
    
        select * from hmProcedureModifier
        where hmProcedureModifier.RecId == this.Modifier4;
        if (hmProcedureModifier.RecId > 0)
        {
            appendDiagnosis = appendDiagnosis + ', '+ hmProcedureModifier.Code;
        }
    
       //         ret = strFmt("%1 (%2)", hmProcedureModifier.Description, hmProcedureModifier.Code);
        return appendDiagnosis;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppointmentRecid</Name>
				<Source><![CDATA[
    public RecId getAppointmentRecid()
    {
        return HMPatientChargeEntryTable::find(this.HMPatientChargeEntryTable).HMResourceSchedulingAppointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFee</Name>
				<Source><![CDATA[
    display HMChargeEntryFee getFee()
    {
        return  this.Fee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getitemname</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    Public display ItemName getitemname()
    {
        HMCaseTrans hmCaseTrans;
    
        select * from hmCaseTrans where hmCaseTrans.RecId == this.HMCaseTrans;
    
        return HMInventTableClass::showDescription(hmCaseTrans.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcedureCode</Name>
				<Source><![CDATA[
    display Description255 getProcedureCode()
    {
        return this.InventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcedureDescription</Name>
				<Source><![CDATA[
    display Description255 getProcedureDescription()
    {
        return HMInventTableClass::showDescription(this.InventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        hmNumberSequenceHandler hmNumberSequenceHandler;
        hmNumberSequenceHandler = new hmNumberSequenceHandler();
        this.HMChargeEntryLineNumber = hmNumberSequenceHandler.generateNumberSequenceDataArea(extendedtypenum(HMChargeEntryLineNumber));
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    public server void moveDown()
    {
        UnitofWork  uow = new UnitofWork();
    
        //1 means highest priority
        HMPatientChargeEntryLine   hmPatientChargeEntryLineLocal;
    
        select count(recId) from hmPatientChargeEntryLineLocal
            where hmPatientChargeEntryLineLocal.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
        if (hmPatientChargeEntryLineLocal.RecId > 1 && hmPatientChargeEntryLineLocal.RecId != this.ProcedureOrder)
        {
            select firstOnly forUpdate hmPatientChargeEntryLineLocal
                where hmPatientChargeEntryLineLocal.ProcedureOrder == (this.ProcedureOrder + 1)
                && hmPatientChargeEntryLineLocal.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
            if (hmPatientChargeEntryLineLocal)
            {
                hmPatientChargeEntryLineLocal.ProcedureOrder--;
    
                uow.updateonSaveChanges(hmPatientChargeEntryLineLocal);
    
                this.ProcedureOrder++;
    
                uow.updateonSaveChanges(this);
            }
    
            uow.saveChanges();
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    public server void moveUp()
    {
        UnitofWork  uow = new UnitofWork();
    
        //1 means highest priority
        HMPatientChargeEntryLine   hmPatientChargeEntryLineLocal;
    
        if (this.ProcedureOrder > 1)
        {
            select firstOnly forUpdate hmPatientChargeEntryLineLocal
                where hmPatientChargeEntryLineLocal.ProcedureOrder == (this.ProcedureOrder - 1)
                && hmPatientChargeEntryLineLocal.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
            if (hmPatientChargeEntryLineLocal)
            {
                hmPatientChargeEntryLineLocal.ProcedureOrder++;
    
                uow.updateonSaveChanges(hmPatientChargeEntryLineLocal);
    
                this.ProcedureOrder--;
    
                uow.updateonSaveChanges(this);
            }
    
            uow.saveChanges();
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>showGroupedCharge</Name>
				<Source><![CDATA[
    public display Real showGroupedCharge()
    {
        HMPatientChargeEntryLine record;
        select sum(Charge) from record where record.InventTable == this.InventTable
        && record.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
        return record.Charge;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showGroupedFee</Name>
				<Source><![CDATA[
    public display Real showGroupedFee()
    {
        HMPatientChargeEntryLine record;
        select sum(Fee) from record where record.InventTable == this.InventTable
        && record.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
        return record.Fee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showGroupedUnits</Name>
				<Source><![CDATA[
    public display Integer showGroupedUnits()
    {
        HMPatientChargeEntryLine record;
        select sum(Units) from record where record.InventTable == this.InventTable
        && record.HMPatientChargeEntryTable == this.HMPatientChargeEntryTable;
    
        return record.Units;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOrdering</Name>
				<Source><![CDATA[
    private void updateOrdering(RecId _chargeEntry, int _order)
    {
        HMPatientChargeEntryLine   hmPatientChargeEntryLineLocal;
    
        ttsBegin;
        while select forUpdate HMPatientChargeEntryTable, ProcedureOrder from hmPatientChargeEntryLineLocal
            where hmPatientChargeEntryLineLocal.HMPatientChargeEntryTable == _chargeEntry
            && hmPatientChargeEntryLineLocal.ProcedureOrder > _order
        {
            hmPatientChargeEntryLineLocal.ProcedureOrder--;
            hmPatientChargeEntryLineLocal.update();
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if (ret)
        {
            //if (((this.Diagnosis1 != 0 || this.Diagnosis2 != 0) && (this.Diagnosis1 == this.Diagnosis2)) || ((this.Diagnosis1 != 0 || this.Diagnosis3 != 0) && (this.Diagnosis1 == this.Diagnosis3)) || ((this.Diagnosis1 != 0 || this.Diagnosis4 != 0) && (this.Diagnosis1 == this.Diagnosis4)))
            //{
                //ret = checkFailed("@MAZ6465");
            //}
            //if (((this.Diagnosis2 != 0 || this.Diagnosis3 != 0) && (this.Diagnosis2 == this.Diagnosis3)) || ((this.Diagnosis2 != 0 || this.Diagnosis4 != 0) && (this.Diagnosis2 == this.Diagnosis4)))
            //{
                //ret = checkFailed("@MAZ6465");
            //}
            //if (((this.Diagnosis3 != 0 || this.Diagnosis4 != 0) && (this.Diagnosis3 == this.Diagnosis4)))
            //{
                //ret = checkFailed("@MAZ6465");
            //}
    //
            //if (((this.Modifier1 != 0 || this.Modifier2 != 0) && (this.Modifier1 == this.Modifier2)) || ((this.Modifier1 != 0 || this.Modifier3 != 0) && (this.Modifier1 == this.Modifier3)) || ((this.Modifier1 != 0 || this.Modifier4 != 0) && (this.Modifier1 == this.Modifier4)))
            //{
                //ret = checkFailed("@MAZ6466");
            //}
            //if (((this.Modifier2 != 0 || this.Modifier3 != 0) && (this.Modifier2 == this.Modifier3)) || ((this.Modifier2 != 0 || this.Modifier4 != 0) && (this.Modifier2 == this.Modifier4)))
            //{
                //ret = checkFailed("@MAZ6466");
            //}
            //if (((this.Modifier3 != 0 || this.Modifier4 != 0) && (this.Modifier3 == this.Modifier4)))
            //{
                //ret = checkFailed("@MAZ6466");
            //}
    //
            //if (this.FromDate > this.TODate)
            //{
                //ret = checkFailed("@MAZ6464");
            //}
    //
            //if ((this.Diagnosis2 != 0 && this.Diagnosis1 == 0) || (this.Diagnosis3 != 0 && (this.Diagnosis1 == 0 || this.Diagnosis2 == 0)) || (this.Diagnosis4 != 0 && (this.Diagnosis1 == 0 || this.Diagnosis2 == 0 || this.Diagnosis3 == 0)))
            //{
                //ret = checkFailed("@MAZ6474");
            //}
    //
            //if ((this.Modifier2 != 0 && this.Modifier1 == 0) || (this.Modifier3 != 0 && (this.Modifier1 == 0 || this.Modifier2 == 0)) || (this.Modifier4 != 0 && (this.Modifier1 == 0 || this.Modifier2 == 0 || this.Modifier3 == 0)))
            //{
                //ret = checkFailed("@MAZ6533");
            //}
    
            //if (ret && this.Diagnosis1 == 0 && HMPatientChargeEntryTable::find(this.HMPatientChargeEntryTable).CaseType == HMCaseType::OutPatient)
            //{
                //ret = checkFailed("@MAZ6473");
            //}
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMPatientChargeEntryLine</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMPatientChargeEntryLine</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMPatientChargeEntryLine</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMPatientChargeEntryLine::exist(_recId))
        {
            ret = checkFailed(strfmt(HMPatientChargeEntryLine::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultChargeLine</Name>
				<Source><![CDATA[
    public static HMPatientChargeEntryLine defaultChargeLine(RecId _chargeEntryTableRecId)
    {
        HMPatientChargeEntryLine HMPatientChargeEntryLine;
    
        select firstOnly HMPatientChargeEntryLine
             order by CreatedDateTime desc
                where HMPatientChargeEntryLine.HMPatientChargeEntryTable==_chargeEntryTableRecId;
    
        return HMPatientChargeEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMPatientChargeEntryLine</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMPatientChargeEntryLine</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     hmPatientChargeEntryLine
                 where
                     hmPatientChargeEntryLine.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMPatientChargeEntryLine</c> table.
    /// </summary>
    /// <param name="_recid">
    ///    The record ID of the <c>HMPatientChargeEntryLine</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMPatientChargeEntryLine</c> table; otherwise, an empty record.
    /// </returns>
    public static HMPatientChargeEntryLine find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMPatientChargeEntryLine   hmPatientChargeEntryLine;
    
        hmPatientChargeEntryLine.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmPatientChargeEntryLine.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmPatientChargeEntryLine
            where hmPatientChargeEntryLine.RecId == _recid;
    
        return hmPatientChargeEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCaseTrans</Name>
				<Source><![CDATA[
    public static HMPatientChargeEntryLine findByCaseTrans(
    RecId               _caseTransRecId,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMPatientChargeEntryLine   hmPatientChargeEntryLine;
    
        hmPatientChargeEntryLine.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmPatientChargeEntryLine.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmPatientChargeEntryLine
            where hmPatientChargeEntryLine.HMCaseTrans == _caseTransRecId;
    
        return hmPatientChargeEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMPatientChargeEntryLine</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BillNClaimMgmt</ConfigurationKey>
	<DeveloperDocumentation>@MAZ7797</DeveloperDocumentation>
	<Label>Charge entry line</Label>
	<TitleField1>HMPatientChargeEntryTable</TitleField1>
	<TitleField2>InventTable</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Charge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlaceOfService</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TODate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeOfService</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcedureOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationResponse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Diagnosis</Name>
			<Label>@SYS89410</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Diagnosis1</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Modifiers</Name>
			<Label>@MAZ6357</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Charge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Diagnosis4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlaceOfService</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TODate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TypeOfService</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcedureOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Modifier1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationResponse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AuthorizationResponse</Name>
			<ExtendedDataType>HMPatientAuthorizationResponse</ExtendedDataType>
			<EnumType>HMAuthorizationResponse</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Charge</Name>
			<ExtendedDataType>HMChargeEntryCharge</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CPTCodes</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>CPT codes</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceLine</Name>
			<ExtendedDataType>RecId</ExtendedDataType>
			<Label>@SYS125148</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Diagnosis1</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6431</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Diagnosis2</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6431</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Diagnosis3</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6431</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Diagnosis4</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6431</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Fee</Name>
			<ExtendedDataType>HMChargeEntryFee</ExtendedDataType>
			<HelpText>@MAZ6355</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@MAZ6429</HelpText>
			<Label>@MAZ6400</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMCaseTrans</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMChargeEntryLineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>HMChargeEntryLineNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMInsuranceCarrierBatchDetails</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ13273</HelpText>
			<Label>@MAZ6995</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientChargeEntryTable</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>Charge entry table</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTable</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@MAZ672</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Modifier1</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6432</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Modifier2</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6432</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Modifier3</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6432</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Modifier4</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6432</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<ExtendedDataType>HMNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrderType</Name>
			<EnumType>HMOrderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PatientResponsibility</Name>
			<EnumType>HMPatientPaymentResponsibility</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PerformedDate</Name>
			<HelpText>Service performed date</HelpText>
			<Label>Performed date</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PerformingResource</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>Performing resource</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlaceOfService</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5929</HelpText>
			<Label>@MAZ186</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ProcedureOrder</Name>
			<ExtendedDataType>HMBillInteger</ExtendedDataType>
			<HelpText>@MAZ6472</HelpText>
			<Label>@SYS69861</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RevenueCode</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>Revenue Code</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TODate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@MAZ6430</HelpText>
			<Label>@SYS53942</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TypeOfService</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5930</HelpText>
			<Label>@MAZ5434</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Units</Name>
			<ExtendedDataType>HMChargeEntryUnits</ExtendedDataType>
			<HelpText>@MAZ6356</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WriteOffReason</Name>
			<Label>Reason code</Label>
			<StringSize>200</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExpectedAmount</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>Expected amount</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProcedureIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>HMCaseTrans</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HMPatientChargeEntryTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CPTCodes</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureCodeMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CPTCodes</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CPTCodes</Name>
					<Field>CPTCodes</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceLine</Name>
					<Field>CustInvoiceLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Diagnosis1</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>HMDiagnosisDictionary</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Diagnosis1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Diagnosis1</Name>
					<Field>Diagnosis1</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Diagnosis2</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>HMDiagnosisDictionary</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Diagnosis2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Diagnosis2</Name>
					<Field>Diagnosis2</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Diagnosis3</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>HMDiagnosisDictionary</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Diagnosis3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Diagnosis3</Name>
					<Field>Diagnosis3</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Diagnosis4</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>HMDiagnosisDictionary</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Diagnosis4</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Diagnosis4</Name>
					<Field>Diagnosis4</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMCaseTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HMCaseTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMCaseTrans</Name>
					<Field>HMCaseTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMInsuranceCarrierBatchDetails</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMInsuranceCarrierBatchDetails</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMInsuranceCarrierBatchDetails</Name>
					<Field>HMInsuranceCarrierBatchDetails</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPatientChargeEntryTable</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HMPatientChargeEntryTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMPatientChargeEntryTable</Name>
					<Field>HMPatientChargeEntryTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>HMProductType</Name>
					<RelatedField>HMProductType</RelatedField>
					<Value>4</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Modifier1</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureModifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Modifier1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Modifier1</Name>
					<Field>Modifier1</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Modifier2</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureModifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Modifier2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Modifier2</Name>
					<Field>Modifier2</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Modifier3</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureModifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Modifier3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Modifier3</Name>
					<Field>Modifier3</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Modifier4</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureModifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Modifier4</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMPatientEncounterCharge</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Modifier4</Name>
					<Field>Modifier4</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PlaceOfService_FK</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>HMPlaceOfService</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlaceOfService</Name>
					<Field>PlaceOfService</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RevenueCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMProcedureCodeMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RevenueCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
					<Value>3</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RevenueCode</Name>
					<Field>RevenueCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TypeOfService</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMTypeOfService</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TypeOfService</Name>
					<Field>TypeOfService</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPerformingResource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMResourceMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HMPerformingResource</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PerformingResource</Name>
					<Field>PerformingResource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>