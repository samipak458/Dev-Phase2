<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMCaseInsurance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMCaseInsurance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caseNo</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display HMCode caseNo()
    {
        /*Todo:HMPatientEncounter      hmPatientEncounter;
        select * from HMPatientEncounter where hmPatientEncounter.RecId == this.HMPatientEncounter;
    
    
        return HMPatientEncounter.CaseNo;*/
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonName</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display ContactPersonName contactPersonName()
    {
        return this.getCustTable().editContactPersonName(false, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>coveragePlanName</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display Description coveragePlanName()
    {
        return HMInsuranceCoveragePlan::find(this.HMInsuranceCoveragePlan).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>decreasePriority</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Decreases the priority of the selected transaction type.
    /// </summary>
    /// <returns>
    ///    true if the priority is decreased; otherwise, false.
    /// </returns>
    private boolean decreasePriority()
    {
        boolean ret;
       // int newPriority;
        #Define.MinPriority(0)
    
        HMCaseInsurance hmCaseInsurance;
    
        if (this.Priority == #MinPriority)
        {
            ret = false;
        }
        else
        {
            // find the secondary order to swap
            hmCaseInsurance = HMCaseInsurance::findByPriorityInDirection(this.HMPatientEncounter, this.Priority, false, true);
            this.swapPriority(this, HMCaseInsurance, HMCaseInsurance.Priority);
            ret = true;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        HMCaseInsurance HMCaseInsurance;
        RecId caseRecid = this.HMCase;
        hmcase  hmcase;
        super();
        select firstonly RecId from HMCaseInsurance
        where HMCaseInsurance.HMCase == caseRecId;
    
        if(!HMCaseInsurance)
        {
            ttsBegin;
            hmcase = HMCase::find(this.HMCase,true);
            hmcase.HMFinancialClass = HMFinancialClass::findByCode(HMBillParameters::find().HMFinancialClass).recid;
            hmcase.update();
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>email</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display Email email()
    {
        return this.getCustTable().email();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTable</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public CustTable getCustTable()
    {
        CustTable   custTable;
    
        select firstOnly custTable where custTable.AccountNum == this.InsuranceCarrier;
    
        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCarrierName</Name>
				<Source><![CDATA[
    display str getCarrierName()
	{
	    CustTable   carrier;
	   
        select firstOnly recId from carrier where carrier.AccountNum == this.InsuranceCarrier;
	   
	    return carrier.name();
	}

]]></Source>
			</Method>
			<Method>
				<Name>GuarantorName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the gurantor name from  <c>HMPatientGuarantor</c>table.
    /// </summary>
    /// <param name="_set">
    /// The <c>HMPatientGuarantor</c> table buffer.
    /// </param>
    /// <param name="_guarantorName">
    /// The <c>HMPatientGuarantor</c> table buffer.
    /// </param>
    /// <returns>
    /// The gurantor name from<c>HMPatientGuarantor</c>table.
    /// </returns>
    //BP Deviation Documented
    edit Name GuarantorName(boolean _set, Name _guarantorName)
    {
       // HMPatientGuarantor patientGuarantor;
    
    /*    if (_set)
        {
            if(this.SelfPolicy == NoYes::No)
            {
                select patientGuarantor
                where patientGuarantor.Name == _guarantorName
                    && patientGuarantor.HMPatient == this.HMPatient;
    
                this.Guarantor = patientGuarantor.RecId;
            }
        }
    
        return HMPatientGuarantor::find(this.Guarantor).Name;
    */
        return '';
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>increasePriority</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Increases the priority of the selected Insurace policy.
    /// </summary>
    /// <returns>
    ///    true if the priority is increased; otherwise, false.
    /// </returns>
    private boolean increasePriority()
    {
        boolean ret;
      //  HMInsurancePolicyPriority newPriority;
    
        HMCaseInsurance hmCaseInsurance;
    
        // find the secondary order to swap
        hmCaseInsurance = HMCaseInsurance::findByPriorityInDirection(this.HMPatientEncounter, this.Priority, true, true);
        this.swapPriority(this, HMCaseInsurance, HMCaseInsurance.Priority);
        ret = true;
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        HMCase hmcase;
        RecId financialClassRecId;
        if (this.RecId == 0)
        {
            this.Priority = HMCaseInsurance::getMinPriorityByPatient(this.HMCase) + 1;
        }
        if(this.Priority==1)
        {
            
            financialClassRecId = HMFinancialClass::findByCode(HMInsuranceCarrier::findByCode(this.InsuranceCarrier).HMFinancialClass).RecId;
            if(financialClassRecId)
            {
                ttsBegin;
                hmcase = HMCase::find(this.HMCase,true);
                hmcase.HMFinancialClass = financialClassRecId;
                hmcase.update();
                ttscommit;
            }
            
            this.IsActive=1;
        }
        super();
    
        this.updateCustomer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insuraceEffectiveDate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display date insuraceEffectiveDate()
    {
        HMpatientInsurance hmPatientInsurance;
    
        select EffectiveDate from hmPatientInsurance
        where hmPatientInsurance.recid == this.HMPatientInsurance;
    
        return HMPatientInsurance.EffectiveDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insuraceEndDate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display date insuraceEndDate()
    {
        HMpatientInsurance hmPatientInsurance;
    
        select EndDate from hmPatientInsurance
        where hmPatientInsurance.recid == this.HMPatientInsurance;
    
        return HMPatientInsurance.EndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Name</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display CustName Name()
    {
        return this.getCustTable().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>phone</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display Phone phone()
    {
        return this.getCustTable().phone();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display LogisticsAddressing postalAddress()
    {
        return this.getCustTable().address();
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryEmail</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display LogisticsElectronicAddressLocator primaryEmail()
    {
        CustTable                   custTable;
        DirPartyTable               dirPartyTable;
        DirPartyLocation            dirPartyLocation;
        LogisticsLocation           logisticsLocation;
        LogisticsElectronicAddress  logisticsElectronicAddress;
    
    
        select * from logisticsElectronicAddress
            join * from logisticsLocation
            join * from dirPartyLocation
            join * from dirPartyTable
            join * from custTable
            where logisticsElectronicAddress.Location==logisticsLocation.RecId
            && logisticsLocation.RecId==dirPartyLocation.Location
            && dirPartyLocation.Party==dirPartyTable.RecId
            && dirPartyTable.RecId==custTable.Party
            && custTable.RecId==CustTable::find(this.InsuranceCarrier).RecId
            && dirPartyLocation.IsPrimary==NoYes::Yes
            && logisticsElectronicAddress.Type==LogisticsElectronicAddressMethodType::Email;
    
        return logisticsElectronicAddress.locator;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryFax</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display LogisticsElectronicAddressLocator primaryFax()
    {
        CustTable                   custTable;
        DirPartyTable               dirPartyTable;
        DirPartyLocation            dirPartyLocation;
        LogisticsLocation           logisticsLocation;
        LogisticsElectronicAddress  logisticsElectronicAddress;
    
    
        select * from logisticsElectronicAddress
            join * from logisticsLocation
            join * from dirPartyLocation
            join * from dirPartyTable
            join * from custTable
            where logisticsElectronicAddress.Location==logisticsLocation.RecId
            && logisticsLocation.RecId==dirPartyLocation.Location
            && dirPartyLocation.Party==dirPartyTable.RecId
            && dirPartyTable.RecId==custTable.Party
            && custTable.RecId==CustTable::find(this.InsuranceCarrier).RecId
            && dirPartyLocation.IsPrimary==NoYes::Yes
            && logisticsElectronicAddress.Type==LogisticsElectronicAddressMethodType::Fax;
    
        return logisticsElectronicAddress.locator;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>primaryPhone</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display LogisticsElectronicAddressLocator primaryPhone()
    {
        CustTable                   custTable;
        DirPartyTable               dirPartyTable;
        DirPartyLocation            dirPartyLocation;
        LogisticsLocation           logisticsLocation;
        LogisticsElectronicAddress  logisticsElectronicAddress;
    
    
        select * from logisticsElectronicAddress
            join * from logisticsLocation
            join * from dirPartyLocation
            join * from dirPartyTable
            join * from custTable
            where logisticsElectronicAddress.Location==logisticsLocation.RecId
            && logisticsLocation.RecId==dirPartyLocation.Location
            && dirPartyLocation.Party==dirPartyTable.RecId
            && dirPartyTable.RecId==custTable.Party
            && custTable.RecId==CustTable::find(this.InsuranceCarrier).RecId
            && dirPartyLocation.IsPrimary==NoYes::Yes
            && logisticsElectronicAddress.Type==LogisticsElectronicAddressMethodType::Phone;
    
        return logisticsElectronicAddress.locator;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>swapPriority</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Swaps the priorities of two records.
    /// </summary>
    /// <param name="_currHMCaseInsurance">
    /// The <c>HMCaseInsurance</c> type value of the record.
    /// </param>
    /// <param name="_newHMCaseInsurance">
    /// A <c>HMCaseInsurance</c> value that indicates the records with which to swap the priority.
    /// </param>
    /// <param name="_newPriority">
    ///    A <c>HMInsurancePolicyPriority</c> value that indicates the new priority to be assigned.
    /// </param>
    private void swapPriority(HMCaseInsurance _currHMCaseInsurance
        , HMCaseInsurance _newHMCaseInsurance
        , HMInsurancePolicyPriority _newPriority)
    {
        ttsbegin;
        _newHMCaseInsurance.Priority = _currHMCaseInsurance.Priority;
        _currHMCaseInsurance.Priority = _newPriority;
    
        _newHMCaseInsurance.update();
        _currHMCaseInsurance.selectForUpdate(true);
        _currHMCaseInsurance.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>telefax</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display TeleFax telefax()
    {
        return this.getCustTable().telefax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();
        this.updateCustomer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustomer</Name>
				<Source><![CDATA[
    private void updateCustomer()
    {
        CustTable           custTable;
        HMPatient           hmPatient;
        //Todo: HMPatientEncounter  hmPatientEncounter;
    
    
        /*todo: commented the whole method, as I am not sure why we are selecting the whole table here, See 343, 344 & 345 line. Based on that I am commenting the whole code

        select forUpdate custTable
            join hmPatient
                where hmPatient.CustTable == custTable.RecId;
        /*Todo:    join hmPatientEncounter
                where hmPatient.RecId == hmPatientEncounter.Patient
                && hmPatientEncounter.RecId == this.RecId; */
        if(custTable)
        {
            ttsBegin;
            custTable.IsGurantor = this.SelfPolicy;
            custTable.update();
            ttsCommit;
        }*/
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
        HMCaseInsurance     hmCaseInsuranceForUpdate;
        HMCase hmcase;
        ret = super();
        if( ret )
        {
            ttsBegin;
            while select forUpdate * from hmCaseInsuranceForUpdate
            where hmCaseInsuranceForUpdate.HMPatientEncounter == this.HMPatientEncounter
            && hmCaseInsuranceForUpdate.Priority > this.Priority
            {
                hmCaseInsuranceForUpdate.Priority--;
                if(hmCaseInsuranceForUpdate.Priority==1)
                {
                    hmCaseInsuranceForUpdate.IsActive=1;
                }
    
                if( hmCaseInsuranceForUpdate.validateWrite())
                {
                    if(hmCaseInsuranceForUpdate.IsActive==1)
                    {
                        hmcase = HMCase::find(this.HMCase,true);
                        hmcase.HMFinancialClass = HMFinancialClass::findByCode(HMInsuranceCarrier::findByCode(hmCaseInsuranceForUpdate.InsuranceCarrier).HMFinancialClass).RecId;
                        hmcase.update();
                    }
                    hmCaseInsuranceForUpdate.update();
                }
            }
    
            ttsCommit;
    
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);
    
        // Check if Current deductible is greater than total deductible amount
        if (ret && fieldId2name(tableNum(HMCaseInsurance), _fieldIdToCheck) == 'CurrentDeductibleAmount')
        {
            if (this.CurrentDeductibleAmount > this.DeductibleAmount)
            {
                error("@MAZ4683");
                ret = false;
            }
            else
            {
                this.DeductibleUpdateDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if (ret)
        {
            if (ret && this.PolicyType == PolicyType::CoInsurance && this.CoInsurance > 100.00)
            {
                ret = checkFailed("@MAZ1619");
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMCaseInsurance</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMCaseInsurance</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMCaseInsurance</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMCaseInsurance::exist(_recId))
        {
            ret = checkFailed(strfmt(HMCaseInsurance::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMCaseInsurance</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMCaseInsurance</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     HMCaseInsurance
                 where
                     HMCaseInsurance.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMCaseInsurance</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMCaseInsurance</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMCaseInsurance</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMCaseInsurance find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMCaseInsurance  hmCaseInsurance;
    
        hmCaseInsurance.selectForUpdate(_forUpdate);
    
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmCaseInsurance.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmCaseInsurance where hmCaseInsurance.RecId == _recid;
    
        return hmCaseInsurance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns all Insurance parties involved in a case.
    /// </summary>
    /// <param name="_PatientCaseRecId">
    /// RecId of HMPatientEncoutner table
    /// </param>
    /// <returns>
    /// HMCaseInsurance table buffer
    /// </returns>
    /// <remarks>
    /// none
    /// </remarks>
    
    public static HMCaseInsurance findByCase(RecId _PatientCaseRecId)
    {
        HMCaseInsurance hmCaseInsurance;
    
        select * from hmCaseInsurance
            where hmCaseInsurance.HMCase == _PatientCaseRecId
            && hmCaseInsurance.IsActive == NoYes::Yes;
    
        return hmCaseInsurance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findbyPatientInsuranceAndCase</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified patient insurance record in the <c>HMCaseInsurance</c> table.
    /// </summary>
    /// <param name="_hmPatientEncounter">
    ///     The record ID of the <c>HMPatientEncounter</c> table to find.
    /// </param>
    /// <param name="_hmPatientInsurance">
    ///     The record ID of the <c>HMPatientInsurance</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMCaseInsurance</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMCaseInsurance findbyPatientInsuranceAndCase(
    RecId               _hmPatientEncounter,
    RecId               _hmPatientInsurance,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMCaseInsurance  hmCaseInsurance;
    
        hmCaseInsurance.selectForUpdate(_forUpdate);
    
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmCaseInsurance.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmCaseInsurance
            where hmCaseInsurance.HMPatientEncounter == _hmPatientEncounter
            && hmCaseInsurance.HMPatientInsurance == _hmPatientInsurance;
    
        return hmCaseInsurance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPriority</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMCaseInsurance</c> table by priority.
    /// </summary>
    /// <param name="_hmPatientEncounter">
    ///    The record ID of the <c>HMPatientEncounter</c> table to find.
    /// </param>
    /// <param name="_currPriority">
    ///    A <c>HMInsurancePolicyPriority</c> type value that indicates the attribute priority to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>HMCaseInsurance</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMCaseInsurance findByPriority(HMPatientEncounterRecId _hmPatientEncounter, HMInsurancePolicyPriority _currPriority,
    boolean _forUpdate = false)
    {
        HMCaseInsurance hmCaseInsurance;
    
        hmCaseInsurance.selectForUpdate(_forUpdate);
    
        select firstonly hmCaseInsurance
            where hmCaseInsurance.Priority == _currPriority
            && hmCaseInsurance.HMPatientEncounter == _hmPatientEncounter;
    
        return hmCaseInsurance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPriorityInDirection</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMCaseInsurance</c> table by priority.
    /// </summary>
    /// <param name="_hmPatientEncounter">
    ///     The record ID of the <c>HMPatientEncounter</c> table to find.
    /// </param>
    /// <param name="_currPriority">
    /// A <c>HMInsurancePolicyPriority</c> type value that indicates the attribute priority to find.
    /// </param>
    /// <param name="_direction">
    /// A boolean specifying the direction to search.
    /// </param>
    /// /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record of the <c>HMCaseInsurance</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMCaseInsurance findByPriorityInDirection(HMPatientEncounterRecId _hmPatientEncounter
        , HMInsurancePolicyPriority _currPriority
        , boolean _direction
        , boolean _forUpdate = false)
    {
        HMCaseInsurance             hmCaseInsurance;
        HMInsurancePolicyPriority   newPriority;
        int                         counter;
    
        hmCaseInsurance.selectForUpdate(_forUpdate);
    
        if (_direction)
        {
            newPriority = _currPriority + 1;
            counter = HMCaseInsurance::getMinPriorityByPatient(_hmPatientEncounter);
    
            while (newPriority <= counter)
            {
                select firstonly hmCaseInsurance
                    where hmCaseInsurance.Priority == newPriority
                    && hmCaseInsurance.HMPatientEncounter == _hmPatientEncounter;
    
                if (hmCaseInsurance)
                {
                    break;
                }
                else
                {
                    ++newPriority;
                }
            }
        }
        else
        {
            newPriority = _currPriority - 1;
    
            while (newPriority > 0)
            {
                select firstonly hmCaseInsurance
                    where hmCaseInsurance.Priority == newPriority
                    && hmCaseInsurance.HMPatientEncounter == _hmPatientEncounter;
    
                if (hmCaseInsurance)
                {
                    break;
                }
                else
                {
                    --newPriority;
                }
            }
        }
    
        return hmCaseInsurance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMinPriorityByPatient</Name>
				<Source><![CDATA[
    public static int getMinPriorityByPatient(RefRecId _HMCaseRecId)
    {
        HMCaseInsurance hmCaseInsurance;
    
        select maxOf(Priority) from hmCaseInsurance
            where hmCaseInsurance.HMCase == _HMCaseRecId;
    
        return hmCaseInsurance.Priority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPayerType</Name>
				<Source><![CDATA[
    public static HMPayerType getPayerType(RecId _EncounterRecID)
    {
        HMCaseInsurance     hmCaseInsurance;
        while select * from hmCaseInsurance
            where hmCaseInsurance.HMPatientEncounter == _EncounterRecID
        {
            if(hmCaseInsurance.HMPayerType == HMPayerType::InsuranceCarrier)
            {
                return HMPayerType::InsuranceCarrier;
            }
            else if(hmCaseInsurance.HMPayerType == HMPayerType::Gurantor)
            {
                return HMPayerType::Gurantor;
            }
        }
        return HMPayerType::Patient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMCaseInsurance</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePriorityOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the priority of the specified attribute.
    /// </summary>
    /// <param name="_PatientEncounterInsurance">
    ///    A <c>CustSettlementPriorityAttribute</c> type value that indicates the attribute to update.
    /// </param>
    /// <param name="_isIncrease">
    ///    A Boolean value that indicates whether to increase or decrease the priority.
    /// </param>
    /// <returns>
    ///    true if the attribute priority is updated; otherwise, false.
    /// </returns>
    public static boolean updatePriorityOrder(HMCaseInsurance _PatientEncounterInsurance,
    boolean _isIncrease = false)
    {
        boolean ret;
        HMCaseInsurance hmCaseInsurance;
    
        hmCaseInsurance = HMCaseInsurance::findByPriority(_PatientEncounterInsurance.HMPatientEncounter, _PatientEncounterInsurance.Priority, true);
    
        Debug::assert(HMCaseInsurance.RecId != 0);
    
        if (_isIncrease)
        {
            ret = HMCaseInsurance.increasePriority();
        }
        else
        {
            ret = HMCaseInsurance.decreasePriority();
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HIS</ConfigurationKey>
	<DeveloperDocumentation>@MAZ855</DeveloperDocumentation>
	<FormRef>HMPatientInsurance</FormRef>
	<Label>@MAZ4172</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PolicyNumber</TitleField1>
	<TitleField2>PolicyType</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsuranceStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceNotes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoPayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentDeductibleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleUpdateDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EligibilityComments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EligibilityLastChecked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmployeeID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBillingValidationStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceCoveragePlan</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceEligibilityStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientEncounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientSubscriber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPayerType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceCarrier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBilled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyPlan</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PreauthorizationReqd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriorAuthorizationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelationShip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelfPolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriberID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriberRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsuranceStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceNotes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoPayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentDeductibleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleUpdateDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EligibilityComments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EligibilityLastChecked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmployeeID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBillingValidationStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceCoveragePlan</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceEligibilityStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientEncounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientSubscriber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPayerType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceCarrier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBilled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyPlan</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PreauthorizationReqd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriorAuthorizationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelationShip</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelfPolicy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriberID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriberRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Policy</Name>
			<Label>@SYS111161</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicyNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PolicyPlan</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriberID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoPayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductibleUpdateDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentDeductibleAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AuthorizationExpiryDate</Name>
			<ExtendedDataType>HMPatientInsAuthorizationExpiryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AuthorizationLimit</Name>
			<ExtendedDataType>HMPatientInsAuthorizationLimit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuthorizationNotes</Name>
			<ExtendedDataType>HMPatientInsAuthorizationNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AuthorizationRequest</Name>
			<ExtendedDataType>HMPatientInsAuthorizationRequest</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CoInsurance</Name>
			<ExtendedDataType>HMPercentPositive</ExtendedDataType>
			<Label>@MAZ1620</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comments</Name>
			<ExtendedDataType>HMComments</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CoPayAmount</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@MAZ2919</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentDeductibleAmount</Name>
			<ExtendedDataType>HMPatientInsuranceAmount</ExtendedDataType>
			<Label>@MAZ4691</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DeductibleAmount</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@MAZ4692</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeductibleUpdateDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@MAZ4679</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EffectiveDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS8280</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EligibilityComments</Name>
			<ExtendedDataType>HMInsuranceEligibilityComments</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EligibilityLastChecked</Name>
			<ExtendedDataType>HMEligibilityLastChecked</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmployeeID</Name>
			<ExtendedDataType>HMPolicySubscriberID</ExtendedDataType>
			<HelpText>@MAZ6800</HelpText>
			<Label>@SYS14981</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<ExtendedDataType>HMInsuranceEndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupName</Name>
			<ExtendedDataType>HMGroupName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupNumber</Name>
			<ExtendedDataType>HMInsuranceGroupNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMBillingValidationStatus</Name>
			<EnumType>HMBillingValidationStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMCase</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMInsuranceCoveragePlan</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ3317</HelpText>
			<Label>@MAZ3309</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMInsuranceEligibilityStatus</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6168</HelpText>
			<Label>@MAZ6132</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientEncounter</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientInsurance</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientSubscriber</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMPayerType</Name>
			<Label>@MAZ3253</Label>
			<EnumType>HMPayerType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsuranceCarrier</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@MAZ10848</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsuranceNotes</Name>
			<ExtendedDataType>HMInsuranceNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InsuranceStatus</Name>
			<ExtendedDataType>HMPatientInsuranceStatus</ExtendedDataType>
			<EnumType>HMInsuranceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActive</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>Active</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBilled</Name>
			<HelpText>@MAZ4769</HelpText>
			<Label>@MAZ4743</Label>
			<EnumType>NoYesCombo</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PolicyGroup</Name>
			<ExtendedDataType>HMPolicyGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PolicyNumber</Name>
			<ExtendedDataType>HMPolicyNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PolicyPlan</Name>
			<ExtendedDataType>HMPolicyPlan</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PolicyType</Name>
			<HelpText>@MAZ1256</HelpText>
			<EnumType>PolicyType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PreAuthorizationDate</Name>
			<ExtendedDataType>HMPatientInsAuthorizationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PreauthorizationReqd</Name>
			<HelpText>@MAZ6876</HelpText>
			<Label>@MAZ6877</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriorAuthorizationNumber</Name>
			<ExtendedDataType>HMPriorAuthorizationNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Priority</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>HMInsurancePolicyPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RelationShip</Name>
			<HelpText>@MAZ1257</HelpText>
			<EnumType>PatientInsuranceRelation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SelfPolicy</Name>
			<HelpText>@MAZ105</HelpText>
			<Label>@MAZ105</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubscriberEmployer</Name>
			<Label>Employer Name</Label>
			<StringSize>25</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubscriberID</Name>
			<ExtendedDataType>HMPolicySubscriberID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubscriberName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@MAZ6154</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubscriberRelation</Name>
			<ExtendedDataType>HMInsuranceSubscriberRelation</ExtendedDataType>
			<EnumType>PatientInsuranceRelation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TreatmentAuthorizationCode</Name>
			<Label>Treatment authorization code</Label>
			<StringSize>30</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HMInsuranceCarrierIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InsuranceCarrier</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PriorityIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Priority</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMPatientEncounterIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMPatientEncounter</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMInsuranceCoveragePlanIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMInsuranceCoveragePlan</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMPatientInsuranceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMPatientInsurance</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMInsuranceEligibilityStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMInsuranceEligibilityStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMPatientIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMPatientSubscriber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PatientCaseInsurance</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMCase</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HMPatientInsurance</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMCase</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMCase</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HMCase</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMCase</Name>
					<Field>HMCase</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMInsuranceCoveragePlan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMInsuranceCoveragePlan</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMInsuranceCoveragePlan</Name>
					<Field>HMInsuranceCoveragePlan</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMInsuranceEligibilityStatus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMInsuranceEligibilityStatus</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMInsuranceEligibilityStatus</Name>
					<Field>HMInsuranceEligibilityStatus</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPatientInsurance</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMPatientInsurance</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMPatientInsurance</Name>
					<Field>HMPatientInsurance</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPatientSubscriber</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMPatient</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HMPatientSubscriber</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMPatientSubscriber</Name>
					<Field>HMPatientSubscriber</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InsuranceCarrier_CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CustType</Name>
					<RelatedField>CustType</RelatedField>
					<Value>2</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InsuranceCarrier</Name>
					<Field>InsuranceCarrier</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>