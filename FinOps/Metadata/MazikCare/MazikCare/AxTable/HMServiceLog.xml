<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMServiceLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMServiceLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMAppoinmentLog</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMAppoinmentLog</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMAllergyReaction</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMServiceLog::exist(_recId))
        {
            ret = checkFailed(strfmt(HMServiceLog::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMAppoinmentLog</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMAppoinmentLog</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     HMServiceLog
                 where
                     HMServiceLog.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMAppoinmentLog</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMAppoinmentLog</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMAllergyReaction</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMServiceLog find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMServiceLog  hmServiceLog;
    
        hmServiceLog.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmServiceLog.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmServiceLog where hmServiceLog.RecId == _recid;
    
        return hmServiceLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPatientStatus</Name>
				<Source><![CDATA[
    public static str getPatientStatus(RecId _recIdHMResScheduleAppointment)
    {
        HMServiceLog  hmServiceLog;
        HMResourceSchedulingAppointmentInvent hmResSchAppInvent;
        HMAppointLogStatus enumHMAppointLogStatus;
        str status = 'In Waiting Room';
    
        select HMServiceLogStatus from hmServiceLog
        join hmResSchAppInvent
        order by ModifiedDateTime desc
        where hmServiceLog.HMResourceSchedulingAppointmentInvent == hmResSchAppInvent.RecId
        && hmServiceLog.HMResourceSchedulingAppointmentInvent == _recIdHMResScheduleAppointment;
    
     //   if (hmServiceLog.HMServiceLogStatus != str2enum(enumHMAppointLogStatus, 'Checked-in'))
      //  {
        //    status = HMBuildingUnit::find(HMResourceSchedulingPlanningObject::find(hmResSchApp.HMResourceSchedulingPlanningObject).HMBuildingUnit).Description;
        //}
    
       return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMAppoinmentLog</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HIS</ConfigurationKey>
	<DeveloperDocumentation>@MAZ2770</DeveloperDocumentation>
	<Label>@MAZ2624</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>HMServiceLogStatus</TitleField1>
	<TitleField2>HMServiceLogDate</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogNote</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogNote</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMServiceLogStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMIsWorker</Name>
			<HelpText>Is the user a Worker</HelpText>
			<Label>Is the user a Worker</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMResourceSchedulingAppointmentInvent</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>HMServiceLogDate</Name>
			<ExtendedDataType>HMAppointLogDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMServiceLogNote</Name>
			<ExtendedDataType>HMServiceLogNote</ExtendedDataType>
			<Label>@MAZ11317</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMServiceLogStatus</Name>
			<EnumType>HMServiceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>HMServiceLogTime</Name>
			<ExtendedDataType>HMAppointLogTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMUserRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>User Reord Id</HelpText>
			<Label>User Record Id</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NotRequired</Name>
			<HelpText>@MAZ12195</HelpText>
			<Label>@SYS115755</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ResetService</Name>
			<Label>Reset Service</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ServiceReason</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS86426</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMResourceSchedulingAppointmentInvent</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HMResourceSchedulingAppointmentInvent</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMResourceSchedulingAppointmentInvent</Name>
					<Field>HMResourceSchedulingAppointmentInvent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReasonTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceReason</Name>
					<Field>ServiceReason</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Service</Name>
					<RelatedField>Service</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>