<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMResourceSchedulingTypeCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMResourceSchedulingTypeCode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.CaseType = HMCaseType::OutPatient;
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if (ret)
        {
            if (this.Duration < 1)
            {
                warning(strfmt("@MAZ1732",0));
                ret = false;
            }
    
            if(this.AppointmentSubType == HMAppointmentSubType::Open && !this.ParentAppointmentType)
            {
                warning(strFmt("@SYS84753","@MAZ11954"));
                ret = false;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMResourceSchedulingTypeCode</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMResourceSchedulingTypeCode</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMResourceSchedulingTypeCode</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMResourceSchedulingTypeCode::exist(_recId))
        {
            ret = checkFailed(strfmt(HMResourceSchedulingTypeCode::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMResourceSchedulingTypeCode</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMResourceSchedulingTypeCode</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     hmResourceSchedulingTypeCode
                 where
                     hmResourceSchedulingTypeCode.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMResourceSchedulingTypeCode</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMResourceSchedulingTypeCode</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMResourceSchedulingTypeCode</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMResourceSchedulingTypeCode find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMResourceSchedulingTypeCode  hmResourceSchedulingTypeCode;
        hmResourceSchedulingTypeCode.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmResourceSchedulingTypeCode.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmResourceSchedulingTypeCode where hmResourceSchedulingTypeCode.RecId == _recid;
    
        return hmResourceSchedulingTypeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDesc</Name>
				<Source><![CDATA[
    public static Recid findByDesc(Description _desc)
    {
        HMResourceSchedulingTypeCode        HMResourceSchedulingTypeCode;
        select firstOnly RecId from  HMResourceSchedulingTypeCode
                where HMResourceSchedulingTypeCode.Description == _desc;
    
       return HMResourceSchedulingTypeCode.RecId;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMResourceSchedulingTypeCode</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@MAZ1457</DeveloperDocumentation>
	<Label>@MAZ1456</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex></ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CaseType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBlocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Duration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CaseType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DurationUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AppointmentSubType</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>HMAppointmentSubType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CaseType</Name>
			<HelpText>@MAZ1820</HelpText>
			<EnumType>HMCaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>HMCode</ExtendedDataType>
			<HelpText>@MAZ11949</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ColourCode</Name>
			<ExtendedDataType>CCColor</ExtendedDataType>
			<Label>@MAZ8452</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@MAZ11950</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Duration</Name>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS80927</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DurationUnit</Name>
			<EnumType>HMMinHrs</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMMedisysScheduleType</Name>
			<EnumType>HMMedisysScheduleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMScheduleType</Name>
			<EnumType>HMScheduleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBlocked</Name>
			<HelpText>@MAZ1729</HelpText>
			<Label>@SYS103795</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBreak</Name>
			<Label>@SYS38391</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentAppointmentType</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ11954</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMResourceSchedulingTypeCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMResourceSchedulingTypeCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>AppointmentSubType</Name>
					<RelatedField>AppointmentSubType</RelatedField>
					<Value>3</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentAppointmentType</Name>
					<Field>ParentAppointmentType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>