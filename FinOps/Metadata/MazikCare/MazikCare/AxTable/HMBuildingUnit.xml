<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMBuildingUnit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMBuildingUnit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWards</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display Description255 getWards()
    {
        return HMHospitalStructureHelperClass::getWards(this.HMBuildingUnit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
        if(ret)
        {
            if(this.IsGender)
            {
                if(this.Gender==HcmPersonGender::None)
                {
                    //ret = false;
                    ret = checkFailed(strfmt("@MAZ1413"));
                }
            }
            if(this.IsBlocked)
            {
                if(!this.HMBlockingReasonCode)
                {
                    //ret = false;
                    ret = checkFailed(strfmt("@MAZ1414"));
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMBuildingUnit</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMBuildingUnit</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMBuildingUnit</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMBuildingUnit::exist(_recId))
        {
            ret = checkFailed(strfmt(HMBuildingUnit::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMBuildingUnit</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMBuildingUnit</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     hmBuildingUnit
                 where
                     hmBuildingUnit.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMBuildingUnit</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMBuildingUnit</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMBuildingUnit</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMBuildingUnit find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMBuildingUnit  hmBuildingUnit;
        hmBuildingUnit.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmBuildingUnit.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmBuildingUnit where hmBuildingUnit.RecId == _recid;
    
        return hmBuildingUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChildren</Name>
				<Source><![CDATA[
    public static server boolean hasChildren(RecId _buildingUnitRecId)
    {
        return HMHospitalStructureHelperClass::hasChildren(_buildingUnitRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMBuildingUnit</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGenderOccupancy</Name>
				<Source><![CDATA[
    public static void updateGenderOccupancy(RecId _hmbuilduingUnit,boolean _isGender, HCMPersonGender _gender, boolean _update)
    {
        HMHospitalStructureHelperClass::updateGenderOccupancy(_hmbuilduingUnit,_isGender,_gender,_update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGenderOccupancyByOU</Name>
				<Source><![CDATA[
    public static void updateGenderOccupancyByOU(RecId _hmorganizationalUnitRecid,boolean _isGender, HCMPersonGender _gender, boolean _update)
    {
        HMHospitalStructureHelperClass::updateGenderOccupancyByOU(_hmorganizationalUnitRecid,_isGender,_gender,_update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTreatmentClassification</Name>
				<Source><![CDATA[
    public static void updateTreatmentClassification(RecId _hmbuilduingUnit, RecId _treatmentClassification, boolean _update)
    {
        HMBuildingUnit                  hmBuildingUnitChild;
    
        ttsBegin;
    
        while select forUpdate hmBuildingUnitChild
            where hmBuildingUnitChild.HMBuildingUnit == _hmbuilduingUnit
        {
            if(!_update && (_treatmentClassification && hmBuildingUnitChild.HMTreatmentClassification))
            {
                info(strFmt("@MAZ8219",hmBuildingUnitChild.Description));
            }
            else
            {
                hmBuildingUnitChild.HMTreatmentClassification = _treatmentClassification;
    
                hmBuildingUnitChild.update();
                info(strFmt("@MAZ8220",hmBuildingUnitChild.Description));
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTreatmentClassificationByOU</Name>
				<Source><![CDATA[
    public static void updateTreatmentClassificationByOU(RecId _hmorganizationalUnitRecid, RecId _treatmentClassification, boolean _update)
    {
        HMOrganizationalBuildingUnit    hmOrganizationalBuildingUnitLocal;
        HMBuildingUnit                  hmBuildingUnitLocal;
    
        ttsBegin;
    
        while select * from hmOrganizationalBuildingUnitLocal
            where hmOrganizationalBuildingUnitLocal.HMOrganizationalUnit == _hmorganizationalUnitRecid
            join forUpdate * from hmBuildingUnitLocal
                where hmBuildingUnitLocal.RecId == hmOrganizationalBuildingUnitLocal.HMBuildingUnit
        {
            if(!_update && (_treatmentClassification && hmBuildingUnitLocal.HMTreatmentClassification))
            {
                info(strFmt("@MAZ8219",hmBuildingUnitLocal.Description));
            }
            else
            {
                hmBuildingUnitLocal.HMTreatmentClassification = _treatmentClassification;
    
                hmBuildingUnitLocal.update();
                info(strFmt("@MAZ8220",hmBuildingUnitLocal.Description));
            }
    
            HMBuildingUnit::updateTreatmentClassification(hmBuildingUnitLocal.RecId, _treatmentClassification, _update);
        }
    
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HIS</ConfigurationKey>
	<DeveloperDocumentation>@MAZ1412</DeveloperDocumentation>
	<Label>@MAZ1407</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS35894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShortName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBuildingUnitCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBuildingUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBlocked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBlockingReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumCapacity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsGender</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Gender</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBedType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMBedClass</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMTreatmentClassification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Census</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Census</Name>
			<ExtendedDataType>HMBuildingUnitCensus</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>HMCode</ExtendedDataType>
			<HelpText>@MAZ1597</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@MAZ1583</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionDefault</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@MAZ1578</HelpText>
			<Label>@MAZ1576</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Gender</Name>
			<EnumType>HcmPersonGender</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMBedClass</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ8124</HelpText>
			<Label>@MAZ8120</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMBedType</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ7877</HelpText>
			<Label>@MAZ7876</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMBlockingReasonCode</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ2479</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMBuildingUnit</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ2523</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMBuildingUnitCategory</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ2483</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMTreatmentClassification</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ8217</HelpText>
			<Label>@MAZ3141</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBlocked</Name>
			<HelpText>@MAZ1585</HelpText>
			<Label>@MAZ3104</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsGender</Name>
			<HelpText>@MAZ1588</HelpText>
			<Label>@SYS9284</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaximumCapacity</Name>
			<ExtendedDataType>HMBuildingUnitMaxCapacity</ExtendedDataType>
			<HelpText>@MAZ1587</HelpText>
			<Label>@MAZ3103</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShortName</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SYS190530</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMBuildingUnitCategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMBuildingUnitCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMBuildingUnitIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMBuildingUnit</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMBlockingReasonCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMBlockingReasonCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionDefault</Name>
					<Field>DimensionDefault</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMBlockingReasonCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMBlockingReasonCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMBlockingReasonCode</Name>
					<Field>HMBlockingReasonCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMBuildingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMBuildingUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMBuildingUnit</Name>
					<Field>HMBuildingUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMBuildingUnitCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMBuildingUnitCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMBuildingUnitCategory</Name>
					<Field>HMBuildingUnitCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMTreatmentClassification</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMTreatmentClassification</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMTreatmentClassification</Name>
					<Field>HMTreatmentClassification</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>