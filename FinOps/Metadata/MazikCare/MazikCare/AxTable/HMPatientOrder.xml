<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPatientOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMPatientOrder extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayServiceImage</Name>
				<Source><![CDATA[
    public display Integer displayServiceImage()
    {
        if(this.InventTable)
        {
            if(this.OrderType == HMOrderType::Service)
            {
                return 1;
            }
            else if(this.OrderType == HMOrderType::Medication)
            {
                return 2;
            }
            else
            {
                return -1;
            }
        }
        else
        {
            return -1;
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMultiPhysicianName</Name>
				<Source><![CDATA[
    display PersonName getMultiPhysicianName()
    {
        return '';//Todo: HMPatientOrderClass::showOrderMultiPhysicianName(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPhysicianName</Name>
				<Source><![CDATA[
    display PersonName getPhysicianName()
    {
        return '';//Todo: HMPatientOrderClass::showOrderPhysicianName(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPhysicianRecId</Name>
				<Source><![CDATA[
    public RecId getPhysicianRecId()
    {
        return 0; //Todo: HMPatientOrderClass::getOrderPhysicianRecId(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDiagnoses</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display HMMemo showDiagnoses()
    {
        return '';//Todo:HMPatientOrderClass::showOrderDiagnoses(this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showEndDate</Name>
				<Source><![CDATA[
    public display TransDate showEndDate()
    {
        /*
        if(this.OrderType == HMOrderType::Service)
        {
            return HMPatientService::find(this.RecId).ToDate;
        }
        else if(this.OrderType == HMOrderType::Medication)
        {
            return HMPatientMedicationOrder::find(this.RecId).ExpiryDate;
        }*/
        //todo: from CRM
        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showFrequency</Name>
				<Source><![CDATA[
    display Description showFrequency()
    {
        return HMMedUsageFrequency::find(this.HMMedUsageFrequency).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showItemCode</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public display ItemId showItemCode()
    {
        return this.InventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showItemDescription</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public display EcoResDescription showItemDescription()
    {
        return HMInventTableClass::showDescription(this.InventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showLaboratory</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display Description255 showLaboratory()
    {
        Description255 returnVal;
    
        if(this.Origin == HMOrigin::External)
        {
            returnVal = HMOrganizationalUnit::find(this.HMOrganizationalUnitInternal).Description;
        }
        else if(this.Origin == HMOrigin::Clinic)
        {
            if(this.HMOrganizationalUnitInternal)
            {
                returnVal = HMOrganizationalUnit::find(this.HMOrganizationalUnitInternal).Description;
            }
            else if(this.HMLaboratories)
            {
                returnVal = HMLaboratories::find(this.HMLaboratories).getLaboratoryName();
            }
            else
            {
                returnVal = "";
            }
        }
        else
        {
            returnVal = "";
        }
    
        return returnVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showLaboratoryAddress</Name>
				<Source><![CDATA[
    display Addressing showLaboratoryAddress()
    {
        Addressing returnVal;
        HMOrganizationalBuildingUnit        hmOrganizationalBuildingUnit;
        HMBuildingUnit                      hmBuildingUnit;
    
        if(this.Origin == HMOrigin::Clinic)
        {
            if(this.HMOrganizationalUnitInternal)
            {
                returnVal = HMOrganizationalUnit::find(HMOrganizationalUnit::find(this.HMOrganizationalUnitInternal).HMOrganizationalUnit).Description;
    
                while select * from hmOrganizationalBuildingUnit
                    join Description,RecId from hmBuildingUnit
                    where hmOrganizationalBuildingUnit.HMOrganizationalUnit == this.HMOrganizationalUnitInternal
                    && hmOrganizationalBuildingUnit.HMBuildingUnit == hmBuildingUnit.RecId
                {
                    returnVal += ', ' + hmBuildingUnit.Description;
                }
    
                //returnVal = HMOrganizationalUnit::find(this.HMOrganizationalUnit).Description;
            }
            else if(this.HMLaboratories)
            {
                returnVal = DirPartyTable::findRec(HMLaboratories::find(this.HMLaboratories).DirOrganization).primaryAddress();
            }
            else
            {
                returnVal = "";
            }
        }
        else
        {
            returnVal = "";
        }
    
        return returnVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showLaboratoryPhoneNumber</Name>
				<Source><![CDATA[
    display Phone showLaboratoryPhoneNumber()
    {
        Phone returnVal;
        LogisticsLocationEntity location;
    
        if(this.Origin == HMOrigin::Clinic)
        {
            if(this.HMLaboratories)
            {
                location = DirParty::primaryElectronicAddressLocation(HMLaboratories::find(this.HMLaboratories).DirOrganization);
                returnVal = location ? location.getPhone() : '';
            }
            else
            {
                returnVal = "";
            }
        }
        else
        {
            returnVal = "";
        }
    
        return returnVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showLabOrderStatus</Name>
				<Source><![CDATA[
    public display HMLabOrderStatus showLabOrderStatus()
    {
        return HMPatientLabOrder::find(this.RecId).LabOrderStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showOrderType</Name>
				<Source><![CDATA[
    display String30 showOrderType()
    {
        String30 returnVal;
    
    
        if(this.Origin == HMOrigin::External)
        {
            returnVal = "";
        }
        else if(this.Origin == HMOrigin::Clinic)
        {
            if(this.HMOrganizationalUnitInternal)
            {
                returnVal = "@MAZ5174";
            }
            else if(this.HMLaboratories)
            {
                returnVal = "@SYS69716";
            }
            else
            {
                returnVal = "";
            }
        }
        else
        {
            returnVal = "";
        }
    
        return returnVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPerformingDepartment</Name>
				<Source><![CDATA[
    public display Description showPerformingDepartment()
    {
        if(this.OrderType == HMOrderType::Service)
        {
            return HMOrganizationalUnit::find(HMPatientService::find(this.RecId).HMPerformingDepartment).Description;
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRadiologyOrderStatus</Name>
				<Source><![CDATA[
    display HMRadiologyOrderStatus showRadiologyOrderStatus()
    {
        return HMPatientRadiologyOrder::find(this.RecId).RadiologyOrderStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRequestingDepartment</Name>
				<Source><![CDATA[
    public display Description showRequestingDepartment()
    {
        if(this.OrderType == HMOrderType::Service)
        {
            return HMOrganizationalUnit::find(HMPatientService::find(this.RecId).HMRequestingDepartment).Description;
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>showServiceStatus</Name>
				<Source><![CDATA[
    public display String50 showServiceStatus()
    {
        if(this.OrderType == HMOrderType::Service)
        {
            return enum2str(HMPatientService::find(this.RecId).ServiceStatus);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>showStartDate</Name>
				<Source><![CDATA[
    public display TransDate showStartDate()
    {
        /*
        if(this.OrderType == HMOrderType::Service)
        {
            return HMPatientService::find(this.RecId).FromDate;
        }
        else if(this.OrderType == HMOrderType::Medication)
        {
            return HMPatientMedicationOrder::find(this.RecId).StartDate;
        }*/
        //todo: From CRM
        return dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTestCodeAndDescription</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    public display HMMemo showTestCodeAndDescription()
    {
        return HMInventTableClass::showDescription(this.InventTable) + ' (' + this.InventTable + ')';
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTypeIcon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the communication icons for the current record.
    /// </summary>
    /// <returns>
    /// A communication icon number.
    /// </returns>
    //BP deviation documented
    public display smmQuoteMsgIconNum showTypeIcon()
    {
        smmQuoteMsgIconNum iconNum;
        switch(this.Importance)
        {
            case HMImportance::Low:
                iconNum = 0;
                break;
            case HMImportance::Medium:
                iconNum = 0;
                break;
            case HMImportance::High:
                iconNum = 3323;
                break;
    
        }
        return iconNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record is located in the <c>HMPatientOrder</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMPatientOrder</c> table record to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If the specified record is not located in the <c>HMPatientOrder</c> table, an error message is
    ///    displayed.
    /// </remarks>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;
    
        if (!HMPatientOrder::exist(_recId))
        {
            ret = checkFailed(strfmt(HMPatientOrder::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>HMPatientOrder</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMPatientOrder</c> table to check if it exists.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;
    
        found = (select firstonly
                     RecId
                 from
                     HMPatientOrder
                 where
                     HMPatientOrder.RecId == _recId).RecId != 0;
    
        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMPatientOrder</c> table.
    /// </summary>
    /// <param name="_recid">
    ///    The record ID of the <c>HMPatientOrder</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMPatientOrder</c> table; otherwise, an empty record.
    /// </returns>
    public static HMPatientOrder find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMPatientOrder   hmatientOrder;
    
        hmatientOrder.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmatientOrder.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmatientOrder
            where hmatientOrder.RecId == _recid;
    
        return hmatientOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMPatientOrder</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS127989";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MazikCare</ConfigurationKey>
	<DeveloperDocumentation>@MAZ7640</DeveloperDocumentation>
	<Label>@MAZ7642</Label>
	<TitleField1>HMPatient</TitleField1>
	<TitleField2>OrderType</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CancelDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMClinicStaffCancel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMLaboratories</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMMedUsageFrequency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMOrganizationalUnitInternal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatient</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientEncounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Importance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBilled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrescriptionSig</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS93623</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CancelDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMClinicStaffCancel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMLaboratories</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMMedUsageFrequency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMOrganizationalUnitInternal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatient</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMPatientEncounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Importance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBilled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrescriptionSig</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CancelDate</Name>
			<ExtendedDataType>HMOrderCancelDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CancelReason</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5121</HelpText>
			<Label>@SYS86426</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comments</Name>
			<ExtendedDataType>HMOrderComments</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMClinicStaffCancel</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5123</HelpText>
			<Label>@MAZ5122</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMLaboratories</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5157</HelpText>
			<Label>@SYS14719</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMMedUsageFrequency</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ1123</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMOrganizationalUnitInternal</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ2481</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatient</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ9</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientEncounter</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@MAZ230</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Importance</Name>
			<ExtendedDataType>HMOrderImportance</ExtendedDataType>
			<EnumType>HMImportance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RelationType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTable</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@MAZ368</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsBilled</Name>
			<ExtendedDataType>HMOrderIsBilled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>OrderDate</Name>
			<ExtendedDataType>HMOrderDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrderType</Name>
			<EnumType>HMOrderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Origin</Name>
			<ExtendedDataType>HMOrderOrigin</ExtendedDataType>
			<EnumType>HMOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrescriptionSig</Name>
			<ExtendedDataType>PrescriptionSig</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReceivedDate</Name>
			<ExtendedDataType>HMOrderReceivedDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMClinicStaffCancel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClinicStaff</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMClinicStaffCancel</Name>
					<Field>HMClinicStaffCancel</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMLaboratories</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMLaboratories</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMLaboratories</Name>
					<Field>HMLaboratories</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMMedUsageFrequency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HMMedUsageFrequency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMMedUsageFrequency</Name>
					<Field>HMMedUsageFrequency</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMOrganizationalUnitInternal</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMOrganizationalUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMOrganizationalUnitInternal</Name>
					<Field>HMOrganizationalUnitInternal</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPatient</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMPatient</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMPatient</Name>
					<Field>HMPatient</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTable</Name>
					<Field>InventTable</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReasonTableCancel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CancelReason</Name>
					<Field>CancelReason</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>