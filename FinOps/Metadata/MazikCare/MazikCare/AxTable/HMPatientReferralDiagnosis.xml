<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPatientReferralDiagnosis</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMPatientReferralDiagnosis extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if(ret && this.isNewRecord())
        {
            if(!HMPatientReferralDiagnosis::checkMaximumDiagnosisLimit(this.HMPatientReferrals))
            {
                warning("@MAZ6202");
                ret = false;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the specified record exists in the <c>HMPatientReferralDiagnosis</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The unique ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _recId)
    {
        boolean ret = true;
    
        if (!HMPatientReferralDiagnosis::exist(_recId))
        {
            ret = checkFailed(strfmt(HMPatientReferralDiagnosis::txtNotExist(), _recId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMaximumDiagnosisLimit</Name>
				<Source><![CDATA[
    public static boolean checkMaximumDiagnosisLimit(RecId _hmPatientReferrals)
    {
        HMPatientReferralDiagnosis  hmPatientReferralDiagnosis;
        boolean ret = true;
    
        select count(RecId) from hmPatientReferralDiagnosis
                where hmPatientReferralDiagnosis.HMPatientReferrals == _hmPatientReferrals;
    
        if(hmPatientReferralDiagnosis.RecId >= HMParameters::find().PatientReferralMaximumDiagnosis)
        {
            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>HMPatientReferralDiagnosis</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The unique ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        boolean exist;
    
        exist = (select firstonly
                    RecId
                from
                    hmPatientReferralDiagnosis
                where
                    hmPatientReferralDiagnosis.RecId == _recId).RecId != 0;
    
        return exist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>HMPatientReferralDiagnosis</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record of the <c>HMPatientReferralDiagnosis</c> table; otherwise, an empty record.
    /// </returns>
    public static HMPatientReferralDiagnosis find(
        recId   _recId,
        boolean _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMPatientReferralDiagnosis    hmPatientReferralDiagnosis;
    
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmPatientReferralDiagnosis.concurrencyModel(_concurrencyModel);
        }
    
        if (_recId)
        {
            hmPatientReferralDiagnosis.selectForUpdate(_forUpdate);
    
            select firstonly hmPatientReferralDiagnosis
                where hmPatientReferralDiagnosis.RecId == _recId;
        }
    
        return hmPatientReferralDiagnosis;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CollaborativeCareSupport</ConfigurationKey>
	<DeveloperDocumentation>@MAZ6197</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@MAZ6198</Label>
	<TitleField1>HMPatientReferrals</TitleField1>
	<TitleField2>HMDiagnosisDictionary</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMPatientReferrals</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMDiagnosisDictionary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMPatientReferrals</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMDiagnosisDictionary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMDiagnosisDictionary</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6199</HelpText>
			<Label>@MAZ130</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMPatientReferrals</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ6200</HelpText>
			<Label>@MAZ6193</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HMPatientReferralDiagnosisIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>HMPatientReferrals</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HMDiagnosisDictionary</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMDiagnosisDictionary</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMDiagnosisDictionary</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMDiagnosisDictionary</Name>
					<Field>HMDiagnosisDictionary</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMPatientReferrals</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HMPatientReferrals</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMPatientReferrals</Name>
					<Field>HMPatientReferrals</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>