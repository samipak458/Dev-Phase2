<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMInsuranceContractCarrierCombination</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMInsuranceContractCarrierCombination extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        HMPatientInsurance  HMPatientInsurance;
        HMInsuranceCarrier HMInsuranceCarrier;
        HMPatient HMPatient;
        select *from HMInsuranceCarrier where HMInsuranceCarrier.recid == this.HMInsuranceCarrier
        join HMPatientInsurance
        where  HMPatientInsurance.InsuranceCarrier==  HMInsuranceCarrier.Code;
        if(HMPatientInsurance)
        {
            select *from HMPatient where HMPatient.RecId == HMPatientInsurance.HMPatient;
            throw error( "insurance carrier is assigned to patient (MRN ::" +HMPatient.getMRN()+" )" );
        }
        else
        {
             super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean             ret;
        HMInsuranceCarrier  carrierInsurance;
        HMTPA               TPA;
        HMTpaDetails        hmTPADetails;
        CustTable           custTPA, custInsurance;
    
        ret = super();
    
        if (this.HMInsuranceCarrier == this.HMInsuranceTPA)
        {
            ret = true;
        }
        else
        {
            TPA      = HMTPA::find(this.HMInsuranceTPA);
            carrierInsurance = HMInsuranceCarrier::find(this.HMInsuranceCarrier);
    
            custTPA         = CustTable::findRecId(TPA.CustTable);
            custInsurance   = CustTable::findRecId(carrierInsurance.CustTable);
    
            /*if (custTPA && custInsurance)
            {
                if (custInsurance.InvoiceAccount == custTPA.AccountNum)
                {
                    ret = true;
                }
                else
                {
                    ret = false;
                    error("Please select correct value for TPA and insurance carriers.");
                }
            }*/
        }
        if(this.HMInsuranceCarrier && this.HMInsuranceTPA)
        {
            select RecId from hmTPADetails
            where hmTPADetails.HMInsuranceCarrier == this.HMInsuranceCarrier
            && HMTpaDetails.Tpa == this.HMInsuranceTPA;
            if(!hmTPADetails)
            {
                ret = checkFailed("@MAZ13640");
            }
        }
        return ret;

    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMPatientInsurance</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMPatientInsurance</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMPatientInsurance</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMInsuranceContractCarrierCombination find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceContractCarrierCombination  hmInsuranceContractCarrierCombination;
    
        hmInsuranceContractCarrierCombination.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmInsuranceContractCarrierCombination.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmInsuranceContractCarrierCombination where hmInsuranceContractCarrierCombination.RecId == _recid;
    
        return hmInsuranceContractCarrierCombination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInsCarrier</Name>
				<Source><![CDATA[
    public static HMInsuranceContractCarrierCombination findByInsCarrier(
    RecId               _insuranceCarrier,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceContractCarrierCombination  hmInsuranceContractCarrierCombination;
    
        hmInsuranceContractCarrierCombination.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmInsuranceContractCarrierCombination.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmInsuranceContractCarrierCombination where hmInsuranceContractCarrierCombination.HMInsuranceCarrier == _insuranceCarrier;
    
        return hmInsuranceContractCarrierCombination;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>HMInsuranceContractCarrierCombination</FormRef>
	<Label>Insurance contract carrier combination</Label>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DisplayGroup</Name>
			<Label>DisplayGroup</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceTPA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMInsuranceCarrier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustTable</Name>
			<Label>@SYS302</Label>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMInsuranceCarrier</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMInsuranceTPA</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMInsuranceCarrier</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMInsuranceCarrier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Carrier</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMInsuranceCarrier</Name>
					<Field>HMInsuranceCarrier</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMInsuranceCorporate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CustType</Name>
					<RelatedField>CustType</RelatedField>
					<Value>3</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustTable</Name>
					<Field>CustTable</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMTPA</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HMTPA</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMInsuranceTPA</Name>
					<Field>HMInsuranceTPA</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>