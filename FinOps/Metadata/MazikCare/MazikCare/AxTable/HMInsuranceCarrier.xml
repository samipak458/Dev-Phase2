<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMInsuranceCarrier</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMInsuranceCarrier extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountNum</Name>
				<Source><![CDATA[
    display AccountNum accountNum()
    {
        return CustTable::findRecId(this.CustTable).AccountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the  contact person name from <c>CustTable</c>.
    /// </summary>
    /// <returns>
    /// The contact person name from <c>CustTable</c>table.
    /// </returns>
    //BP Deviation Documented
    display ContactPersonName contactPersonName()
    {
        return this.CustTable().editContactPersonName(false, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable</Name>
				<Source><![CDATA[
    public CustTable custTable()
    {
        return CustTable::findRecId(this.CustTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        CustTable custtable;
        RecId       custTableRecId;
        HMPatientInsurance HMPatientInsurance;
        HMPatient HMPatient;
        custTableRecId = this.CustTable;
    
    
        select *from HMPatientInsurance where HMPatientInsurance.InsuranceCarrier== this.Code;
        if(HMPatientInsurance)
        {
             select *from HMPatient where HMPatient.RecId == HMPatientInsurance.HMPatient;
            //Zain  MazikCare
            //throw error("insurance carrier is assigned to patient (MRN ::" + HMPatient.getMRN() +" )" );
            //warning("Financial class values cannot be deleted while dependent transactions exists.");
            //Zain  MazikCare
        }
        else
        {
        super();
        }
    
        //super();
        //Zain  MazikCare
        if(custTableRecId != 0)
        {
            ttsBegin;
            select forUpdate custtable where custtable.RecId == custTableRecId;
            if(custtable.RecId != 0)
            {
                custtable.delete();
                ttsCommit;
            }
            else
            {
                ttsAbort;
            }
        }
        //Zain  MazikCare
    }

]]></Source>
			</Method>
			<Method>
				<Name>email</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display Email email()
    {
        return this.CustTable().email();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.HMFreeFollowUpDays     = 7;
        this.HMPreAuthValidityDays  = 7;
        this.HMDeductibleValidityDays = 7;
    
        this.HMIncludeDeductibleInFinalSettlement   = true;
        this.HMAllowMultipleClaimsAgainstCase       = true;
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();
        info("@MAZ13559");
    }

]]></Source>
			</Method>
			<Method>
				<Name>insuranceCarrierName</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display DirPartyName insuranceCarrierName()
    {
        return this.partyName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyName</Name>
				<Source><![CDATA[
    public DirPartyName partyName()
    {
        CustTable           custTable;
        DirPartyTable       dirPartyTable;
    
        select firstonly Name from dirPartyTable join  Party from custTable
            where   custTable.RecId == this.CustTable
                &&  custTable.Party == dirPartyTable.RecId;
    
        return dirPartyTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>phone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the  phone from <c>CustTable</c>.
    /// </summary>
    /// <returns>
    /// The phone from <c>CustTable</c>table.
    /// </returns>
    //BP Deviation Documented
    display Phone phone()
    {
        return this.CustTable().phone();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display LogisticsAddressing postalAddress()
    {
        return this.CustTable().address();
    }

]]></Source>
			</Method>
			<Method>
				<Name>telefax</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    display TeleFax telefax()
    {
        return this.CustTable().telefax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if(ret)
        {
            if(this.CoPay == HMCoPayType::Percentage)
            {
                if(this.CoPayAmount > 100)
                {
                    warning("@MAZ5528");
                    ret = false;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>HMInsuranceCarrier</c> table; if
    ///    not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMInsuranceCarrier</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean isExisting = true;
    
        if (!HMInsuranceCarrier::exist(_recId))
        {
            isExisting = checkFailed(strfmt(HMInsuranceCarrier::txtNotExist(),_recId));
        }
    
        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyCaseAllowed</Name>
				<Source><![CDATA[
    public static boolean copyCaseAllowed(HMInsuranceCarrierCode _carrierCode)
    {
        HMInsuranceCarrier HMInsuranceCarrier;
    
        select AllowCopyCase from HMInsuranceCarrier
        where HMInsuranceCarrier.Code == _carrierCode;
    
        return HMInsuranceCarrier.AllowCopyCase;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>HMInsuranceCarrier</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>HMInsuranceCarrier</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        HMInsuranceCarrier     hmInsuranceCarrier;
    
        select firstonly
            RecId
        from
            hmInsuranceCarrier
        where
            hmInsuranceCarrier.RecId == _recId;
    
        return hmInsuranceCarrier != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMInsuranceCarrier</c> table.
    /// </summary>
    /// <param name="_insuranceCarrierRecId">
    ///    The record ID of the <c>HMInsuranceCarrier</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMInsuranceCarrier</c> table; otherwise, an empty record.
    /// </returns>
    public static HMInsuranceCarrier find(
    HMInsuranceCarrierRecId     _insuranceCarrierRecId,
    boolean                     _forUpdate = false,
    ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceCarrier   insuranceCarrier;
    
        insuranceCarrier.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            insuranceCarrier.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly insuranceCarrier
            where insuranceCarrier.RecId == _insuranceCarrierRecId;
    
        return insuranceCarrier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>HMInsuranceCarrier</c> table.
    /// </summary>
    /// <param name="_insuranceCarrierCode">
    ///    The Code of the <c>HMInsuranceCarrier</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMInsuranceCarrier</c> table; otherwise, an empty record.
    /// </returns>
    public static HMInsuranceCarrier findByCode(
    HMInsuranceCarrierCode     _insuranceCarrierCode,
    boolean                     _forUpdate = false,
    ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceCarrier   insuranceCarrier;
    
        insuranceCarrier.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            insuranceCarrier.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly insuranceCarrier
            where insuranceCarrier.Code == _insuranceCarrierCode;
    
        return insuranceCarrier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPartyName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>HMInsuranceCarrier</c> table specified by a template name.
    /// </summary>
    /// <param name="_partyName">
    ///    The base type of the <c>HMInsuranceCarrier</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>HMInsuranceCarrier</c> table; otherwise, an empty record.
    /// </returns>
    public static HMInsuranceCarrier findByPartyName(
    DirPartyName        _partyName,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceCarrier  insuranceCarrier;
        CustTable           custTable;
        DirPartyTable       dirPartyTable;
    
        insuranceCarrier.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            insuranceCarrier.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly insuranceCarrier join * from custTable join * from dirPartyTable
            where   insuranceCarrier.CustTable == custTable.RecId
                &&  custTable.Party == dirPartyTable.RecId
                &&  dirPartyTable.Name == _partyName;
    
        return insuranceCarrier;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFinancialClass</Name>
				<Source><![CDATA[
    public static HMFinancialClass getFinancialClass(HMInsuranceCarrierCode _carrierCode)
    {
        HMInsuranceCarrier  hmInsuranceCarrier;
        HMFinancialClass    HMFinancialClass;
    
        select * from HMFinancialClass
        join hmInsuranceCarrier
        where hmInsuranceCarrier.HMFinancialClass == HMFinancialClass.HMCode
        && hmInsuranceCarrier.Code == _carrierCode;
    
        return HMFinancialClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItem</Name>
				<Source><![CDATA[
    public static void lookupItem(FormStringControl _ctrl, RecId _patient)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(HMInsuranceCarrier),_ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(HMInsuranceCarrier));
    
    
    
        sysTableLookup.addLookupfield(fieldNum(HMInsuranceCarrier, Code));
        sysTableLookup.addLookupfield(fieldNum(HMInsuranceCarrier, Name));
    
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>HMInsuranceCarrier</c> does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>performJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    static void performJumpRef(HMInsuranceCarrierCode _code)
    {
        MenuFunction    menuFunction;
        Args            args = new Args();
        
        HMInsuranceCarrier   carrier; // This is the table of the master where view details option will take you. Change table name here, this is just for sample

        if (_code)
        {
            carrier = HMInsuranceCarrier::findByCode(_code);
        }

        args.record(carrier);
        args.lookupRecord(carrier);
    
        menuFunction = new MenuFunction(menuitemDisplayStr(HMInsuranceCarrier), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustAccount</Name>
				<Source><![CDATA[
    public static HMInsuranceCarrier findByCustAccount(
    AccountNum        _custAccount,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMInsuranceCarrier  insuranceCarrier;
        CustTable           custTable = CustTable::find(_custAccount);
    
        insuranceCarrier.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            insuranceCarrier.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly insuranceCarrier
            where insuranceCarrier.CustTable == custTable.RecId;
    
        return insuranceCarrier;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BillNClaimMgmt</ConfigurationKey>
	<DeveloperDocumentation>@MAZ5559</DeveloperDocumentation>
	<FormRef>HMInsuranceCarrier</FormRef>
	<Label>@MAZ96</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Name</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>insuranceCarrierName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayorID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Code</Name>
			<Label>@MAZ368</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InsuranceCarrier</Name>
			<Label>@MAZ607</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS313290</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BillPrimaryOnlyForEClaims</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillZeroAmountClaims</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Box33Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoPay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoPayAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EDIAgreementApproved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupIDSuffix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupProviderIDSuffix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceCarrierNotes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsEDIAgreementRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProviderIDRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MedigapID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NoDMECharges</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaperClaimProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryForm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProviderIDSuffix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SecondaryForm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuppressRenderingProviderLoop</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseProviderNPINumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMSupervisingProvider</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMOrderingProvider</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayorID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowCopyCase</Name>
			<HelpText>Allow user to create replica of existing case</HelpText>
			<Label>Allow copy case</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BatchMatching</Name>
			<EnumType>HMInsuraceCarrierBatchMatching</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BillPrimaryOnlyForEClaims</Name>
			<ExtendedDataType>HMBillPrimaryOnlyForEClaims</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BillZeroAmountClaims</Name>
			<ExtendedDataType>HMBillZeroAmountClaims</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Box33Type</Name>
			<EnumType>HMBox33</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ClaimType</Name>
			<Label>@MAZ:HMClaimType</Label>
			<EnumType>HMClaimType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>HMInsuranceCarrierCode</ExtendedDataType>
			<Label>@MAZ:HMPayorName</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CoPay</Name>
			<ExtendedDataType>HMCoPay</ExtendedDataType>
			<EnumType>HMCoPayType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CoPayAmount</Name>
			<ExtendedDataType>HMCoPayAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustTable</Name>
			<ExtendedDataType>CustTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CutOffDays</Name>
			<HelpText>@MAZ13585</HelpText>
			<Label>@MAZ13585</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DeductibleValidityDays</Name>
			<Label>@MAZ13228</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionDefault</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EDIAgreementApproved</Name>
			<ExtendedDataType>HMEDIAgreementApproved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableEClaimGeneration</Name>
			<ExtendedDataType>EnableEClaimGeneration</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ForceEnclosureDays</Name>
			<ExtendedDataType>HMForceEnclosureDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupIDSuffix</Name>
			<ExtendedDataType>HMBillID</ExtendedDataType>
			<HelpText>@MAZ5792</HelpText>
			<Label>@MAZ5498</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GroupProviderIDSuffix</Name>
			<ExtendedDataType>HMGroupProviderIDSuffix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmLanguageCode</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS93120</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMAllowMultipleClaimsAgainstCase</Name>
			<ExtendedDataType>HMAllowMultipleClaimsAgainstCase</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMClaimFileIndicator</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>Claim file indicator</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMClaimGenerationBy</Name>
			<EnumType>HMClaimGenerationBy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMClaimTemplate</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMClaimType</Name>
			<Label>Claim type</Label>
			<EnumType>HMClaimType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HMDeductibleValidityDays</Name>
			<ExtendedDataType>HMDeductibleValidityDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMFinancialClass</Name>
			<ExtendedDataType>HMCode</ExtendedDataType>
			<Label>Financial class</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HMFreeFollowUpDays</Name>
			<ExtendedDataType>HMFreeFollowUpDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HMIncludeDeductibleInFinalSettlement</Name>
			<ExtendedDataType>HMIncludeDeductibleInFinalSettlement</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMOrderingProvider</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5821</HelpText>
			<Label>@MAZ5500</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HMPreAuthValidityDays</Name>
			<ExtendedDataType>HMPreAuthValidityDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMProviderID</Name>
			<ExtendedDataType>HMProviderID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMSupervisingProvider</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ5827</HelpText>
			<Label>@MAZ5499</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsuranceCarrierNotes</Name>
			<ExtendedDataType>HMInsuranceCarrierNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEDIAgreementRequired</Name>
			<ExtendedDataType>HMIsEDIAgreementRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsProviderIDRequired</Name>
			<ExtendedDataType>HMIsProviderIDRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MedigapID</Name>
			<ExtendedDataType>HMMedigapID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>HMInsuranceCarrierName</ExtendedDataType>
			<Label>@MAZ:HMPayorNameTitle</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NoDMECharges</Name>
			<ExtendedDataType>HMNoDMECharges</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OtherProviderIdentifier</Name>
			<ExtendedDataType>String15</ExtendedDataType>
			<Label>Other Provider Identifier</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaperClaimProfile</Name>
			<EnumType>HMPaperClaimProf</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayorID</Name>
			<ExtendedDataType>HMPayorID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrimaryForm</Name>
			<ExtendedDataType>HMPrimaryForm</ExtendedDataType>
			<EnumType>HMCarrierFormSource</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProviderIDSuffix</Name>
			<ExtendedDataType>HMProviderIDSuffix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SecondaryForm</Name>
			<ExtendedDataType>HMSecondaryForm</ExtendedDataType>
			<EnumType>HMCarrierFormSource</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StateCode</Name>
			<ExtendedDataType>HMStateCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SuppressRenderingProviderLoop</Name>
			<ExtendedDataType>HMSuppressRenderingProviderLoop</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseProviderNPINumber</Name>
			<ExtendedDataType>HMUseProviderNPINumber</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseInsuranceBatch</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FrequencyValue</Name>
			<Label>@MAZ1123</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EDI835</Name>
			<ExtendedDataType>FilePath</ExtendedDataType>
			<Label>EDI 835</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EDI837</Name>
			<ExtendedDataType>FilePath</ExtendedDataType>
			<Label>EDI 837</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EDI270</Name>
			<Label>EDI 270</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EDI271</Name>
			<ExtendedDataType>FilenameOpen</ExtendedDataType>
			<Label>EDI 271</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaperClaim</Name>
			<Label>Paper claim</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMSupervisingProviderIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMSupervisingProvider</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HMOrderingProviderIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HMOrderingProvider</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ClaimFileIndicator</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClaimTableSetup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ClaimFileIndicator</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>HMClaimEnumList</Name>
					<RelatedField>HMClaimEnumList</RelatedField>
					<Value>24</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMClaimFileIndicator</Name>
					<Field>HMClaimFileIndicator</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CustType</Name>
					<RelatedField>CustType</RelatedField>
					<Value>2</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustTable</Name>
					<SourceEDT>CustTableRefRecId</SourceEDT>
					<Field>CustTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DimensionDefault</Name>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionDefault</Name>
					<Field>DimensionDefault</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmLanguageCode_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmLanguageCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmLanguageCode</Name>
					<Field>HcmLanguageCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMClaimTemplate1500</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClaimTemplate</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TemplateType</Name>
					<RelatedField>TemplateType</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMClaimTemplate</Name>
					<Field>HMClaimTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>HMFinancialClass</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMFinancialClass</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CashFinancialClass</Name>
					<RelatedField>CashFinancialClass</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMFinancialClass</Name>
					<Field>HMFinancialClass</Field>
					<RelatedField>HMCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMOrderingProvider</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClinicStaff</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HMOrderingProvider</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMOrderingProvider</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMOrderingProvider</Name>
					<Field>HMOrderingProvider</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMSupervisingProvider</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClinicStaff</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HMSupervisingProvider</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HMSupervisingProvider</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMSupervisingProvider</Name>
					<Field>HMSupervisingProvider</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>