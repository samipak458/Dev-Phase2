<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMResourceMaster</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMResourceMaster extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bookingNotes</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Notes bookingNotes()
    {
        Notes retVal;
        VendTable   vendTable;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Vendor)
        {
            select HMBookingNotes from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.HMBookingNotes;
        }
        else if(this.Type == HMResourceType::Employee)
        {
            select HMBookingNotes from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.HMBookingNotes;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicianName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name  of person from <c>DirPerson</c> setup table.
    /// </summary>
    /// <returns>
    /// The name of of person from<c>DirPerson</c> setup table.
    /// </returns>
    //BP Deviation Documented
    [SysClientCacheDataMethodAttribute(true)]
    public display PersonName physicianName()
    {
        return this.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyRefRecId</Name>
				<Source><![CDATA[
    public RecId partyRefRecId()
    {
        RecId retVal;
        VendTable   vendTable;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Vendor)
        {
            select Party from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.Party;
        }
        else if(this.Type == HMResourceType::Employee)
        {
            select Person from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.Person;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecId</Name>
				<Source><![CDATA[
    public String30 refRecId()
    {
        String30 retVal;
        VendTable   vendTable;
        AssetTable  assetTable;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Vendor)
        {
            select AccountNum from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.AccountNum;
        }
        else if(this.Type == HMResourceType::Device)
        {
            select AssetId from assetTable where assetTable.RecId == this.RefRecId;
    
            retVal = assetTable.AssetId;
        }
        else if(this.Type == HMResourceType::Employee)
        {
            select PersonnelNumber from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.PersonnelNumber;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdDescription</Name>
				<Source><![CDATA[
    public Description255 refRecIdDescription()
    {
        Description255 retVal;
        VendTable   vendTable;
        AssetTable  assetTable;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Vendor)
        {
            select Party from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.name();
        }
        else if(this.Type == HMResourceType::Device)
        {
            select Name from assetTable where assetTable.RecId == this.RefRecId;
    
            retVal = assetTable.Name;
        }
        else if(this.Type == HMResourceType::Employee)
        {
            select Person from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.name();
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdDescriptionDevice</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Description255 refRecIdDescriptionDevice()
    {
        Description255 retVal;
        VendTable   vendTable;
        AssetTable  assetTable;
    
        if(this.Type == HMResourceType::Device)
        {
            select Name from assetTable where assetTable.RecId == this.RefRecId;
    
            retVal = assetTable.Name;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdDescriptionEmployee</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Description255 refRecIdDescriptionEmployee()
    {
        Description255 retVal;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Employee)
        {
            select Person from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.name();
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdDescriptionHealthPrac</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Description255 refRecIdDescriptionHealthPrac()
    {
        Description255 retVal;
        VendTable   vendTable;
    
        if(this.Type == HMResourceType::Vendor)
        {
            select Party from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.name();
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdDevice</Name>
				<Source><![CDATA[
    edit String30 refRecIdDevice(boolean _set, String30 _value)
    {
        String30 retVal;
        AssetTable  assetTable;
    
        if(this.Type == HMResourceType::Device)
        {
            if(_set)
            {
                select RecId from assetTable where assetTable.AssetId == _value;
    
                this.RefRecId = assetTable.RecId;
            }
    
            select AssetId from assetTable where assetTable.RecId == this.RefRecId;
    
            retVal = assetTable.AssetId;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdEmployee</Name>
				<Source><![CDATA[
    edit String30 refRecIdEmployee(boolean _set, String30 _value)
    {
        String30 retVal;
        HcmWorker   hcmWorker;
    
        if(this.Type == HMResourceType::Employee)
        {
            if(_set)
            {
                select RecId from hcmWorker where hcmWorker.PersonnelNumber == _value;
    
                this.RefRecId = hcmWorker.RecId;
            }
    
            select PersonnelNumber from hcmWorker where hcmWorker.RecId == this.RefRecId;
    
            retVal = hcmWorker.PersonnelNumber;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refRecIdHumanResouce</Name>
				<Source><![CDATA[
    edit String30 refRecIdHumanResouce(boolean _set, String30 _value)
    {
        String30 retVal;
        VendTable   vendTable;
    
        if(this.Type == HMResourceType::Vendor)
        {
            if(_set)
            {
                select RecId from vendTable where vendTable.AccountNum == _value;
    
                this.RefRecId = vendTable.RecId;
            }
    
            select AccountNum from vendTable where vendTable.RecId == this.RefRecId;
    
            retVal = vendTable.AccountNum;
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    public static HMResourceMaster findByCode(
    HMResourceMasterCode _code,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMResourceMaster  hmResourceMaster;
    
        hmResourceMaster.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmResourceMaster.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmResourceMaster where hmResourceMaster.Code == _code;
    
        return hmResourceMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if(this.Type == HMResourceType::Vendor && this.RefRecId == 0)
        {
            ret = false;
            warning(strFmt("@SYS26332","@MAZ10952"));
        }
        else if(this.Type == HMResourceType::Device && this.RefRecId == 0)
        {
            ret = false;
            warning(strFmt("@SYS26332","@MAZ10954"));
        }
        else if(this.Type == HMResourceType::Employee && this.RefRecId == 0)
        {
            ret = false;
            warning(strFmt("@SYS26332","@SYS303656"));
        }
        //Bug 33405:Resource Master Form - License expiry date, License number & check box of Referral needed should be optional
        if(ret)
        {
            if(((this.Type !=HMResourceType::Device) && (this.Type !=HMResourceType::Location)))
            {
                if(this.HMClinicStaffRole && HMClinicStaffRole::find(this.HMClinicStaffRole).Role == HMStaffMemberType::Physician)
                {
                    if(!this.LicenseNumber)
                    {
                        ret = false;
                        warning(strFmt("@SYS26332","@MAZ11789"));
                    }
    
                    if(!this.LicenseExpirationDate)
                    {
                        ret = false;
                        warning(strFmt("@SYS26332","@MAZ10959"));
                    }
                }
            }
        }
    
        if(ret)
        {
            if(!this.isNewRecord() && HMResourceMasterHelper::getOpenAppointmentCount(this.RecId) > 0)
            {
                ret = false;
                warning("@MAZ10941");
            }
            if(this.Type == HMResourceType::Employee)
            {
                this.VendorType = HMVendorType::Internal;
            }
        }
    
        if(ret && this.Type == HMResourceType::Vendor && this.VendorType == HMVendorType::None)
        {
            ret = false;
            warning(strFmt("@SYS26332","@SYS309466"));
        }
        if(ret && this.Type == HMResourceType::Location)
        {
            this.VendorType = HMVendorType::Internal;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>HMResourceMaster</c> table.
    /// </summary>
    /// <param name="_recid">
    ///     The record ID of the <c>HMResourceMaster</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///     The concurrency model option that will be used when it reads the record; optional.
    /// </param>
    /// <returns>
    ///     A record of the <c>HMResourceMaster</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static HMResourceMaster find(
    RecId               _recid,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMResourceMaster  hmResourceMaster;
    
        hmResourceMaster.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmResourceMaster.concurrencyModel(_concurrencyModel);
        }
    
        select firstonly * from hmResourceMaster where hmResourceMaster.RecId == _recid;
    
        return hmResourceMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByType</Name>
				<Source><![CDATA[
    /// <summary>
    /// findByType
    /// Created by Zain
    /// </summary>
    /// <param name = "_recId"></param>
    /// <returns></returns>
    public static HMResourceMaster findByType(
    RecId               _recId,
    HMResourceType      _type,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        HMResourceMaster    hmResourceMaster;

        hmResourceMaster.selectForUpdate(_forUpdate);
    
        if(_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hmResourceMaster.concurrencyModel(_concurrencyModel);
        }

        select firstonly * from hmResourceMaster 
            where hmResourceMaster.RecId == _recid
            && hmResourceMaster.Type == _type;

        return hmResourceMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceNameByRecId</Name>
				<Source><![CDATA[
    public static Description getResourceNameByRecId(RecId _recId)
    {
        HMResourceMaster hmResourceMaster;
        select Description from hmResourceMaster
        where hmResourceMaster.RecId == _recId;
        return hmResourceMaster.Description;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@MAZ10622</DeveloperDocumentation>
	<Label>@MAZ10947</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Code</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>CodeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>HMResourceMasterSpeciality_HMResource</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>HMResource</Relation>
			<Table>HMResourceMasterSpeciality</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Code</Name>
			<Label>@SYS40155</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AppointmentTaking</Name>
			<Label>@MAZ11787</Label>
			<EnumType>HMContactMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CancellationPolicy</Name>
			<EnumType>HMCancellationPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>HMResourceMasterCode</ExtendedDataType>
			<HelpText>@MAZ10617</HelpText>
			<Label>@SYS89158</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Confirmation</Name>
			<Label>@MAZ7757</Label>
			<EnumType>HMContactMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionDefault</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentSending</Name>
			<Label>@MAZ11788</Label>
			<EnumType>HMContactMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmTitle</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ9025</HelpText>
			<Label>@MAZ8987</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Highlight</Name>
			<ExtendedDataType>HMNotes</ExtendedDataType>
			<Label>Resource highlight</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HMClinicStaffRole</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@MAZ10940</HelpText>
			<Label>@SYS75549</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LicenseExpirationDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@MAZ10959</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseNumber</Name>
			<ExtendedDataType>HMLicenceNo</ExtendedDataType>
			<Label>@MAZ11789</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<ExtendedDataType>HMNotes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>OpeningHours</Name>
			<ExtendedDataType>TimeOfDay</ExtendedDataType>
			<Label>@MAZ11785</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReferralNeeded</Name>
			<Label>@MAZ11790</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>HMRecId</ExtendedDataType>
			<Label>@SYS112248</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>HMResourceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>HMResourceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendorType</Name>
			<EnumType>HMVendorType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMUpinNumber</Name>
			<Label>Upin number</Label>
			<StringSize>25</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ResourceMasterIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionDefault</Name>
					<Field>DimensionDefault</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmTitle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HcmTitle</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmTitle</Name>
					<Field>HcmTitle</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMClinicStaffRole</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMClinicStaffRole</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMClinicStaffRole</Name>
					<Field>HMClinicStaffRole</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>