<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMReassignClaimToPoolMultiThreadTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMReassignClaimToPoolMultiThreadTask extends RunBaseBatch
{
    QueryRun        gQueryRun;
    int             queryStartPosition, perThreadRecords;
    static str      taskDescription;
    HMIsSkipClaims  isSkipClaims;
    container       poolCon;

    #define.CurrentVersion(1)
    #LOCALMACRO.QueryStartPosition
        queryStartPosition
    #ENDMACRO
    #LOCALMACRO.PerThreadRecords
        perThreadRecords
    #ENDMACRO
    #LOCALMACRO.TaskDescription
        taskDescription
    #ENDMACRO
    #LOCALMACRO.IsSkipClaims
        isSkipClaims
    #ENDMACRO
    #LOCALMACRO.UpdatedPoolList
        poolCon
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct the class
    /// </summary>
    /// <returns>Return the class object</returns>
    public server static HMReassignClaimToPoolMultiThreadTask construct()
    {
        return new HMReassignClaimToPoolMultiThreadTask();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// </summary>
    /// <returns>Return the class desc</returns>
    public client server static ClassDescription description()
    {
        return taskDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// 
    /// </summary>
    public void run()
    {
        try
        {
            HMReassignClaimToPoolBusinessLogic reassignClaimToPoolBusinessLogic = HMReassignClaimToPoolBusinessLogic::construct();

            gQueryRun.enablePositionPaging(true);

            gQueryRun.addPageRange(queryStartPosition, perThreadRecords);

            reassignClaimToPoolBusinessLogic.processInit(gQueryRun, isSkipClaims, poolCon);
        }
        catch
        {
            error(strFmt('Batch job failed: %1',xSession::xppCallStack()));
            throw Exception::error;
        }

        Info("Job Completed Successfully");
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    //Stores parameters of the batch
    public container pack()
    {
        container pack = conNull();
        if (gQueryRun)
        {
            pack = gQueryRun.pack();
        }
        return [#CurrentVersion] + [pack] + [#QueryStartPosition] + [#PerThreadRecords] + [#TaskDescription] + [#IsSkipClaims] + [#UpdatedPoolList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    //Returns the stored object for the batch to use
    public boolean unpack(container packedClass)
    {
        boolean     ret         = false;
        int         version     = RunBase::getVersion(packedClass);
        container   packedQuery = conNull();

        switch (version)
        {
            case #CurrentVersion:
                [version, packedQuery, #QueryStartPosition, #PerThreadRecords, #TaskDescription, #IsSkipClaims, #UpdatedPoolList] = packedClass;

                if (SysQuery::isPackedOk(packedQuery))
                {
                    gQueryRun   = new QueryRun(packedQuery);
                    ret         = true;
                }
                break;
            default:
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramQueryRun</Name>
				<Source><![CDATA[
    public void pramQueryRun(QueryRun _qr)
    {
        gQueryRun = _qr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramQueryStartPosition</Name>
				<Source><![CDATA[
    public void pramQueryStartPosition(int _queryStartPosition)
    {
        queryStartPosition = _queryStartPosition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramPerThreadRecords</Name>
				<Source><![CDATA[
    public void pramPerThreadRecords(int _perThreadRecords)
    {
        perThreadRecords = _perThreadRecords;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramTaskDescription</Name>
				<Source><![CDATA[
    public void pramTaskDescription(str _taskDescription)
    {
        taskDescription = _taskDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramIsSkipClaim</Name>
				<Source><![CDATA[
    public void pramIsSkipClaim(HMIsSkipClaims _isSkipClaims)
    {
        isSkipClaims = _isSkipClaims;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pramUpdatedPoolList</Name>
				<Source><![CDATA[
    public void pramUpdatedPoolList(container _poolCon)
    {
        poolCon = _poolCon;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>