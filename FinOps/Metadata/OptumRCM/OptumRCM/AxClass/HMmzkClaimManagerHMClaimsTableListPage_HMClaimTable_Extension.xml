<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMmzkClaimManagerHMClaimsTableListPage_HMClaimTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formDataSourceStr(mzkClaimManagerHMClaimsTableListPage, HMClaimTable))]
final class HMmzkClaimManagerHMClaimsTableListPage_HMClaimTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        QueryBuildDataSource hmClaimTableListPageWorkspaceView, hmClaimNotes,hmClaimTable_qbds;

        next init();

        this.index(indexNum(HMClaimTable, ClaimPoolPriorityIdx));

        hmClaimTable_qbds = this.queryBuildDataSource();

        hmClaimTable_qbds.clearRange(fieldNum(HMClaimTable, HMBalanceAmount));

        hmClaimTable_qbds.addRange(fieldNum(HMClaimTable, HMBalanceAmount)).value(SysQuery::valueNot(0));

        if(element.isMultiSelectPoolFilterEnabled)
        {
            hmClaimTableListPageWorkspaceView = this.queryBuildDataSource();

            hmClaimTableListPageWorkspaceView.addSortField(fieldNum(HMClaimTable, HMClaimPriority),SortOrder::Ascending);

            if (element.args().menuItemName() == menuitemDisplayStr(HMClaimManagerClaimsWithNoActionsOrNote))
            {
                hmClaimNotes = hmClaimTableListPageWorkspaceView.addDataSource(tableNum(HMClaimNotes));
                hmClaimNotes.addLink(fieldNum(HMClaimTable, RecId), fieldNum(HMClaimNotes, HMClaimTable));
                hmClaimNotes.joinMode(JoinMode::NoExistsJoin);
                hmClaimNotes.addRange(fieldNum(HMClaimNotes, CreatedDateTime)).value(queryRange(DateTimeUtil::addDays(DateTimeUtil::utcNow(),-30),DateTimeUtil::utcNow()));
            }
            else if (element.args().menuItemName() == menuitemDisplayStr(HMClaimManagerofNext7DaysFollowUpDate))
            {
                this.query().dataSourceTable(tableNum(HMClaimTable)).addRange(fieldNum(HMClaimTable, HMFollowUp)).value(queryRange(DateTimeUtil::utcNow(),DateTimeUtil::addDays(DateTimeUtil::utcNow(),7)));
            }
            if (element.args().menuItemName() == menuitemDisplayStr(HMClaimManagerWithNoActionsOrNote))
            {
                hmClaimNotes = hmClaimTableListPageWorkspaceView.addDataSource(tableNum(HMClaimNotes));
                hmClaimNotes.addLink(fieldNum(HMClaimTable, RecId), fieldNum(HMClaimNotes, HMClaimTable));
                hmClaimNotes.joinMode(JoinMode::NoExistsJoin);
            }
            if (element.args().menuItemName() == menuitemDisplayStr(HMClaimSupervisorCWNAssignedAgent))
            {
                hmClaimTableListPageWorkspaceView.addRange(fieldNum(HMClaimTable, ClaimAgent)).value(SysQuery::value(0));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>