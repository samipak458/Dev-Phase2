<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsAgentPoolTblHM_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(CustCollectionsAgentPool))]
final class CustCollectionsAgentPoolTblHM_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean                 ret = true;
        CustCollectionsPool     custCollectionsPool;
        CustCollectionsAgent    custCollectionsAgent;

        ret = next validateWrite();

        select firstonly HMIsOnShore from custCollectionsAgent
            where custCollectionsAgent.RecId == this.CustCollectionsAgent;

        if(custCollectionsAgent && custCollectionsAgent.HMIsOnShore == NoYes::No)
        {
            select firstonly RecId from custCollectionsPool
                where custCollectionsPool.Name == this.CustomerPoolId
                    && custCollectionsPool.HMIsOnShore == NoYes::Yes;
                
            if(custCollectionsPool.RecId != 0)
            {
                ret = checkFailed("@Optum:HMPoolDoesnotExist");
            }
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void insert()
    {
        HMAgentManagerAuditLog  hmAgentManagerAuditLog;
        CustCollectionsAgent    custCollectionsAgent;
        DirPartyRelationship    dirPartyRelationship;
        DirPartyTable           partyTable;

        next insert();

        select firstonly Name from partytable
            join dirPartyRelationship
                where partyTable.RecId == dirPartyRelationship.ChildParty
            join custCollectionsAgent
                where dirPartyRelationship.RecId == custCollectionsAgent.DirPartyRelationship
                    && custCollectionsAgent.RecId == this.CustCollectionsAgent;

        hmAgentManagerAuditLog::createAgentManagerAuditLog(partyTable.Name, HMActionTypeEnum::Add, '', this.CustomerPoolId, '@Optum:HMPoolGridChange');
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void delete()
    {
        HMAgentManagerAuditLog  hmAgentManagerAuditLog;
        CustCollectionsAgent    custCollectionsAgent;
        DirPartyRelationship    dirPartyRelationship;
        DirPartyTable           partyTable;
        CustCollectionsPoolId   customerPoolID = this.CustomerPoolId;

        next delete();

        select firstonly Name from partytable
            join dirPartyRelationship
                where partyTable.RecId == dirPartyRelationship.ChildParty
            join custCollectionsAgent
                where dirPartyRelationship.RecId == custCollectionsAgent.DirPartyRelationship
                    && custCollectionsAgent.RecId == this.CustCollectionsAgent;
        
        hmAgentManagerAuditLog::createAgentManagerAuditLog(partyTable.Name, HMActionTypeEnum::Remove, customerPoolID, '', '@Optum:HMPoolGridChange');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>