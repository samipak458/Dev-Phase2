<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsPoolDSHM_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is an extension of form data source of <c>CustCollectionsPool</c> form.
/// </summary>
[ExtensionOf(formDataSourceStr(CustCollectionsPool, CustCollectionsPool))]
final class CustCollectionsPoolDSHM_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is called when form is opened.
    /// </summary>
    public void init()
    {
        this.allowCreate(false);

        next init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>active</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method enable and disable the moveup and movedown button
    /// </summary>
    /// <returns>return integer value</returns>
    public int active()
    {
        FormDataSource fds = this;
        FormControl moveUp = fds.formRun().design(0).controlName(FormControlStr(CustCollectionsPool, MoveUp));
        FormControl moveDown = fds.formRun().design(0).controlName(FormControlStr(CustCollectionsPool, MoveDown));
        FormControl hmPriorityStrategyID = fds.formRun().design(0).controlName(FormControlStr(CustCollectionsPool, CustCollectionsPool_HMPriorityStrategyID));
        FormControl hmSequenceNumber = fds.formRun().design(0).controlName(FormControlStr(CustCollectionsPool, CustCollectionsPool_HMSequenceNumber));

        CustCollectionsPool custCollectionsPool;

        int ret = next active();

        hmPriorityStrategyID.enabled(false);
        hmSequenceNumber.enabled(false);

        custCollectionsPool = fds.formRun().dataSource(formDataSourceStr(CustCollectionsPool, CustCollectionsPool)).cursor();

        if (custCollectionsPool.HMSequenceNumber == 1)
        {
            moveUp.enabled(false);
            moveDown.enabled(true);
        }

        else
        {
            moveUp.enabled(true);
            moveDown.enabled(true);
        }

        return ret;

    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method refresh the <c>CustCollectionsPool</c> form.
    /// </summary>
    public void delete()
    {

        next delete();

        this.research(true);
        this.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to retain the position on <c>CustCollectionsPool</c> form.
    /// </summary>
    public void write()
    {
        int position;
        position = this.getPosition();

        next write();
        
        this.refresh();
        this.research(true);
        this.setPosition(position);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>