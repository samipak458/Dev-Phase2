<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMClaimSupervisorSelectionQueryRange</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HMClaimSupervisorSelectionQueryRange
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSupervisorAgent</Name>
				<Source><![CDATA[
    [QueryRangeFunctionAttribute()]
    public static str getSupervisorAgent()
    {
        CustCollectionsAgent    mzkCustCollectionsAgent = CustCollectionsAgent::findCurrentAgent();
        CustCollectionsAgent    cutCollectionsAgent;
        DirPartyRelationship    partyRelationship;
        str                     agentIds;

        select firstonly ChildParty from partyRelationship
            where partyRelationship.RecId == mzkCustCollectionsAgent.DirPartyRelationship;

        while select RecId from cutCollectionsAgent
            where cutCollectionsAgent.HMSupervisor == partyRelationship.ChildParty
        {
            agentIds += strFmt("%1,",cutCollectionsAgent.RecId);
        }

        agentIds += strFmt("%1",mzkCustCollectionsAgent.RecId);

        return agentIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSupervisorAgentWithEmpty</Name>
				<Source><![CDATA[
    public static str getSupervisorAgentWithEmpty()
    {
        CustCollectionsAgent    mzkCustCollectionsAgent = CustCollectionsAgent::findCurrentAgent();
        CustCollectionsAgent    cutCollectionsAgent;
        DirPartyRelationship    partyRelationship;
        str                     agentIds;

        select firstonly ChildParty from partyRelationship
            where partyRelationship.RecId == mzkCustCollectionsAgent.DirPartyRelationship;

        while select RecId from cutCollectionsAgent
            where cutCollectionsAgent.HMSupervisor == partyRelationship.ChildParty
        {
            agentIds += strFmt("%1,",cutCollectionsAgent.RecId);
        }

        agentIds += strFmt("%1,%2",mzkCustCollectionsAgent.RecId,0);

        return agentIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCurrentAgent</Name>
				<Source><![CDATA[
    [QueryRangeFunctionAttribute()]
    public static str findCurrentAgent()
    {
        return strFmt("%1",CustCollectionsAgent::findCurrentAgent().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCurrentAgentPartyId</Name>
				<Source><![CDATA[
    [QueryRangeFunctionAttribute()]
    public static str findCurrentAgentPartyId()
    {
        CustCollectionsAgent    custCollectionsAgent = CustCollectionsAgent::findCurrentAgent();
        DirPartyRelationship    partyRelationship;

        select firstonly ChildParty from partyRelationship
            where partyRelationship.RecId == custCollectionsAgent.DirPartyRelationship;

        return strFmt('((%1 == %2) || (%3 == %4))',
                    fieldStr(CustCollectionsAgent, HMSupervisor),
                    partyRelationship.ChildParty,
                    fieldStr(CustCollectionsAgent, RecId),
                    custCollectionsAgent.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSupervisorAgentClaims</Name>
				<Source><![CDATA[
    [QueryRangeFunctionAttribute()]
    public static str getSupervisorAgentClaims()
    {
        CustCollectionsAgent    mzkCustCollectionsAgent = CustCollectionsAgent::findCurrentAgent();
        CustCollectionsAgent    cutCollectionsAgent;
        DirPartyRelationship    partyRelationship;
        str                     agentIds;

        select firstonly ChildParty from partyRelationship
            where partyRelationship.RecId == mzkCustCollectionsAgent.DirPartyRelationship;

        while select RecId from cutCollectionsAgent
            where cutCollectionsAgent.HMSupervisor == partyRelationship.ChildParty
        {
            agentIds += strFmt("%1,",cutCollectionsAgent.RecId);
        }

        agentIds += strFmt("%1,%2",mzkCustCollectionsAgent.RecId,0);

        return agentIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>