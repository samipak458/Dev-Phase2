<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMPatientsEntity_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is an extension class for the entity <c>HMPatientsEntity</c>
/// </summary>
[ExtensionOf(tableStr(HMPatientsEntity))]
internal final class HMPatientsEntity_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post operation
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">Input buffer</param>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        HMPatientsStaging   stagingTable;
        LogisticsAddressCounty  logisticsAddressCounty, logisticsAddressCountyExist;

        next postGetStagingData(_dmfDefinitionGroupExecution);
        /*
        update_recordset stagingTable
            setting Gender = HcmPersonGender::Female
            where stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup
            && stagingTable.ExecutionId     == _dmfDefinitionGroupExecution.ExecutionId
            && stagingTable.TransferStatus  == DMFTransferStatus::NotStarted
            && stagingTable.PersonGender == Gender::Female;

        update_recordset stagingTable
            setting Gender = HcmPersonGender::NonSpecific
            where stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup
            && stagingTable.ExecutionId     == _dmfDefinitionGroupExecution.ExecutionId
            && stagingTable.TransferStatus  == DMFTransferStatus::NotStarted
            && stagingTable.PersonGender == Gender::NonSpecific;

        update_recordset stagingTable
            setting Gender = HcmPersonGender::Male
            where stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup
            && stagingTable.ExecutionId     == _dmfDefinitionGroupExecution.ExecutionId
            && stagingTable.TransferStatus  == DMFTransferStatus::NotStarted
            && stagingTable.PersonGender == Gender::Male;

        update_recordset stagingTable
            setting Gender = HcmPersonGender::None
            where stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup
            && stagingTable.ExecutionId     == _dmfDefinitionGroupExecution.ExecutionId
            && stagingTable.TransferStatus  == DMFTransferStatus::NotStarted
            && stagingTable.PersonGender == Gender::Unknown;
        */

        //Create County codes
        insert_recordset logisticsAddressCounty (CountryRegionId, StateId, CountyId)
            select AddressCountryRegionId, AddressState, AddressCounty from stagingTable
                group by stagingTable.AddressCountryRegionId, stagingTable.AddressState, stagingTable.AddressCounty
            where stagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && stagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
            && (stagingTable.TransferStatus == DMFTransferStatus::NotStarted
            || stagingTable.TransferStatus == DMFTransferStatus::Error)
            && stagingTable.AddressCountryRegionId != ""
            && stagingTable.AddressState != ""
            && stagingTable.AddressCounty != ""
            notexists join logisticsAddressCountyExist
                where logisticsAddressCountyExist.CountryRegionId == stagingTable.AddressCountryRegionId
            && logisticsAddressCountyExist.StateId == stagingTable.AddressState
            && logisticsAddressCountyExist.CountyId == stagingTable.AddressCounty
            ;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>