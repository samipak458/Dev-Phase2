<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMAdjudicationLinesEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMAdjudicationLinesEntity extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        boolean         ret;
        HMClaimTable    hmClaimTable;

        ret = super();

        if(this.InvoiceNumber && this.Ins_Number)
        {
            select firstonly RecId from hmClaimTable
                where hmClaimTable.CaseNo == this.InvoiceNumber
                    && hmClaimTable.HMInsuranceCarrier == this.HMInsurance;

            if(hmClaimTable.RecId == 0)
            {
                return checkFailed(strFmt("@Optum:ClaimValueNotFoundInTableError", this.InvoiceNumber, this.Ins_Number, "@MAZ4740"));
            }
        }
        else
        {
            return checkFailed(strfmt("@Optum:FieldValueNotFound", "@Optum:HMInvoiceNumber","@MAZ:HMPayorName"));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution"></param>
    public static void postGetStagingData(DMFDefinitionGroupExecution  _dmfDefinitionGroupExecution)
    {
        HMInsuranceCarrier          hmInsuranceCarrier;
        HMAdjudicationLinesStaging  StagingTable;

        update_recordset StagingTable
            setting HMInsurance = hmInsuranceCarrier.RecId
                join hmInsuranceCarrier
                    where hmInsuranceCarrier.Code ==  StagingTable.Ins_Number
                        && StagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                        && StagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                        && StagingTable.TransferStatus == DMFTransferStatus::NotStarted;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@Optum:HMAdjudicationLines</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>HMAdjudicationLinesStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>AdjudicationLines</PublicCollectionName>
	<PublicEntityName>AdjudicationLines</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceNumber</Name>
			<DataField>InvoiceNumber</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DrugName</Name>
			<DataField>DrugName</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NDC</Name>
			<DataField>NDC</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Delflag</Name>
			<DataField>Delflag</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuantityMetric</Name>
			<DataField>QuantityMetric</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HMInsurance</Name>
			<DataField>HMInsurance</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Ins_Number</Name>
			<DataField>Ins_Number</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Cpk_ncpdpmNum</Name>
			<DataField>Cpk_ncpdpmNum</DataField>
			<DataSource>HMAdjudicationLines</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>Cpk_ncpdpmNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>HMAdjudicationLines</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>HMAdjudicationLines</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>