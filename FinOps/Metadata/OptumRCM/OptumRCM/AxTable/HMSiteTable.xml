<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMSiteTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMSiteTable extends common
{
    #OCCRetryCount
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void update()
    {
        HMClaimTable hmClaimTable;
        HMSiteTable siteTable = this.orig();

        super();
        
        if(this.HMRegion != siteTable.HMRegion)
        {
            try
            {
                select firstonly RecId from hmClaimTable
                    where hmClaimTable.HMSite == this.HMSiteName;

                if(hmClaimTable.RecId != 0)
                {
                    ttsbegin;

                    update_recordset hmClaimTable
                        setting BilledRegion = this.HMRegion
                        , IsClaimModified = NoYes::Yes
                    where hmClaimTable.HMSite == this.HMSiteName;

                    ttscommit;
                }

            }
            catch (Exception::Deadlock)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw error(strFmt("@MAZ:FailedToUpdateDataOnTable", "@MAZ4740"));
                }
                else
                {
                    retry;
                }

            }
            catch
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw error(strFmt("@MAZ:FailedToUpdateDataOnTable", "@MAZ4740"));
                }
                else
                {
                    retry;
                }
            }

        }

        if(this.HMDescription != siteTable.HMDescription)
        {
            try
            {
                select firstonly RecId from hmClaimTable
                    where hmClaimTable.HMSite == this.HMSiteName;

                if(hmClaimTable.RecId != 0)
                {
                    ttsbegin;

                    update_recordset hmClaimTable
                        setting HMSiteDescription = this.HMDescription
                        , IsClaimModified = NoYes::Yes
                    where hmClaimTable.HMSite == this.HMSiteName;

                    ttscommit;
                }

            }
            catch (Exception::Deadlock)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw error(strFmt("@MAZ:FailedToUpdateDataOnTable", "@MAZ4740"));
                }
                else
                {
                    retry;
                }

            }
            catch
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw error(strFmt("@MAZ:FailedToUpdateDataOnTable", "@MAZ4740"));
                }
                else
                {
                    retry;
                }
            }

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        boolean    ret;
        str        error;
        int        npiLength,taxIdLength,npiValidLength,taxidValidLength;
        
        npiValidLength   = 10;
        taxidValidLength = 9;

        npiLength   = strLen(this.HMNPI);
        taxIdLength = strLen(this.HMTaxID);

        error = '';
    
        ret = super();

        if(this.isNumeric(this.HMNPI))
        {
            if (npiLength != npiValidLength)
            {
                ret = false;

                error += strFmt("@Optum:HMLengthError",this.HMNPI,npiValidLength,"@Optum:MAZOPT0042",npiValidLength);
            }
        }
        else
        {
            ret = false;

            error += strFmt("@Optum:HMNonnumericError","@Optum:MAZOPT0042");
        }

        if(this.isNumeric(this.HMTaxID))
        {
            if (taxIdLength != taxidValidLength)
            {
                ret = false;

                error += error != '' ? '\n': '';
                error += strFmt("@Optum:HMLengthError",this.HMTaxID,taxidValidLength,"@Optum:HMTaxID",taxidValidLength);
            }
        }
        else
        {
            ret = false;

            error += error != '' ? '\n': '';
            error += strFmt("@Optum:HMNonnumericError","@Optum:HMTaxID");
        }

        if (!ret)
        {
            ret = checkFailed(error);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNumeric</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates for non numeric values for Tax ID and NPI.
    /// </summary>
    /// <param name = "strToValidate">Tax ID or NPI string.</param>
    /// <returns>Returns string is numeric or not.</returns>
    boolean isNumeric(str strToValidate)
    {
        boolean ok = true;

        ok = (strlen(strToValidate)) == strlen(strkeep(strToValidate,'1234567890.'));

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Optum:HMSiteDD</DeveloperDocumentation>
	<FormRef>HMSite</FormRef>
	<Label>@Optum:HMSite</Label>
	<TitleField1>HMSiteName</TitleField1>
	<TitleField2>HMDescription</TitleField2>
	<PrimaryIndex>HMSiteNameIdx</PrimaryIndex>
	<ReplacementKey>HMSiteNameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMSiteName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMRegion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMSiteName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HMRegion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HMSiteName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMSiteName</Name>
			<ExtendedDataType>HMSiteName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMDescription</Name>
			<ExtendedDataType>HMSiteDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMRegion</Name>
			<ExtendedDataType>HMRegionName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMNPI</Name>
			<ExtendedDataType>HMNPI</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HMTaxID</Name>
			<ExtendedDataType>HMTaxID</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HMSiteNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>HMSiteName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>HMRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HMRegionTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HMRegion</Name>
					<Field>HMRegion</Field>
					<RelatedField>HMRegionName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>