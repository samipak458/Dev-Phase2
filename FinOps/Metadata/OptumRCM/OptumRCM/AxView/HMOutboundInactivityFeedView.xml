<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMOutboundInactivityFeedView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMOutboundInactivityFeedView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getIsActiveLogger</Name>
				<Source><![CDATA[
    public static str getIsActiveLogger()
    {
        str isActiveLogger;

        isActiveLogger = strFmt(@"select
                                  case when exists(select top 1 userid from SYSUSERLOG where USERID = %1)
                                  then
                                  case when exists (select top 1 userid from SysUserLog a
                                                    where a.userId = %1
                                                    and DATEDIFF(DAY, a.LogoutDateTime, GETDATE()) < 90
                                                    order by a.LogoutDateTime desc)
                                                    then
                                                       'NO'
                                                    else
                                                         case when exists (select top 1 CREATEDBY from HMCLAIMNOTES
                                                                           where CREATEDBY = %1
                                                                           and DATEDIFF(DAY, CREATEDDATETIME, GETDATE()) < 90
                                                                           order by CREATEDDATETIME desc)
                                                                           then
                                                                               'NO'
                                                                           else
                                                                               case when exists (select top 1 b.UserID from HMUserInfo b
                                                                                                 where b.UserID = %1
                                                                                                 and DATEDIFF(DAY, b.EnabledDateAndTime, GETDATE()) < 90) then 'NO' else 'YES' end
                                                                           end
                                                    end
                                  else
                                  case when exists (select top 1 CREATEDBY from HMCLAIMNOTES
                                                    where CREATEDBY = %1
                                                    and DATEDIFF(DAY, CREATEDDATETIME, GETDATE()) < 90
                                                    order by CREATEDDATETIME desc)
                                                    then
                                                      'NO'
                                                    else
                                                      case when exists (select top 1 b.UserID from HMUserInfo b
                                                                        where b.UserID = %1
                                                                        and DATEDIFF(DAY, b.EnabledDateAndTime, GETDATE()) < 90) then 'NO' else 'YES' end
                                                    end
                                  end",
                                  SysComputedColumn::returnField(tableStr(HMOutboundInactivityFeedView), identifierStr(UserInfo), fieldStr(UserInfo, id)));
        
        return isActiveLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRequestType</Name>
				<Source><![CDATA[
    public static str getRequestType()
    {
        str requestType;

        requestType = 'Remove';

        requestType = SysComputedColumn::returnLiteral(requestType);

        return requestType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@Optum:HMOutboundInactivityFeedView</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>UserID</Name>
			<DataField>id</DataField>
			<DataSource>UserInfo</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>IsActiveLogger</Name>
			<ExtendedDataType>String20</ExtendedDataType>
			<ViewMethod>getIsActiveLogger</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>RequestType</Name>
			<ExtendedDataType>String20</ExtendedDataType>
			<ViewMethod>getRequestType</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>UserInfo</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>UserInfo</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>enable</Name>
						<Field>enable</Field>
						<Value>1</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>isMicrosoftAccount</Name>
						<Field>isMicrosoftAccount</Field>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>accountType</Name>
						<Field>accountType</Field>
						<Value>!3</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>